{"id":"05ab61e3927ee1904372e58a9f1f44a0","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/Notarize.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\r\n\r\nerror docAlreadyRegistered();\r\nerror indexNotFound();\r\n\r\n//Basic contract of notarization\r\ncontract Notarize is AccessControlEnumerable {\r\n\r\n    //Se volessimo introdurre anche la notarizzazione sugli NFT per garantirne l'hash e le versioni\r\n    using Counters for Counters.Counter;\r\n\r\n    //Create new role for address\r\n    //TODO Probabilmente l'autore che può mintare è lo stesso che può accedere alla notarizzazione\r\n    bytes32 public constant HASH_WRITER = keccak256(\"HASH_WRITER\");\r\n\r\n    Counters.Counter private _docCounter;\r\n    mapping(uint256 => Doc) private _documents;\r\n    mapping(bytes32 => bool) private _regHashes;\r\n\r\n    event DocHashAdded(\r\n        uint256 indexed docCounter,\r\n        string docUrl,\r\n        bytes32 dochash\r\n    );\r\n    \r\n    struct Doc {\r\n        string docUrl; //URI of the document that exist off-chain\r\n        bytes32 docHash; //Hash of the document\r\n    }\r\n\r\n    constructor() {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n   }\r\n\r\n    function setHashWriterRole(\r\n        address _hashWriter\r\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        grantRole(HASH_WRITER, _hashWriter);\r\n    }\r\n    function removeHashWriterRole(address _hashWriter) external onlyRole (DEFAULT_ADMIN_ROLE) {\r\n        revokeRole(HASH_WRITER,_hashWriter);\r\n    }\r\n\r\n    function addNewDocument(\r\n        string memory _url,\r\n        bytes32 _hash\r\n    ) external onlyRole(HASH_WRITER) {\r\n        if(_regHashes[_hash]){\r\n            revert docAlreadyRegistered();\r\n        }\r\n        uint256 counter = _docCounter.current();\r\n        _documents[counter] = Doc({docUrl: _url, docHash: _hash});\r\n        _regHashes[_hash] = true;\r\n        _docCounter.increment();\r\n        emit DocHashAdded(counter, _url, _hash);\r\n    }\r\n\r\n    function getDocInfo(\r\n        uint256 _num\r\n    ) external view returns (string memory, bytes32) {\r\n        if(_num > _docCounter.current()){\r\n            revert indexNotFound();\r\n        }\r\n        return (_documents[_num].docUrl, _documents[_num].docHash);\r\n    }\r\n\r\n    function getDocsCount() external view returns (uint256) {\r\n        return _docCounter.current();\r\n    }\r\n\r\n    function getRegisteredHash(bytes32 _hash) external view returns (bool) {\r\n        return _regHashes[_hash];\r\n    }\r\n}\r\n"},"contracts/utils/DonationVault.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nerror notEnoughValue();\r\n//Donation Vault System\r\ncontract DonationVault is Ownable {\r\n\r\n    //receive from VotingSystem\r\n    receive() external payable {}\r\n\r\n    //Function that retrieve value from Vault when it is needed\r\n    function withdraw(address payable to, uint256 amount) external onlyOwner{\r\n        if(amount > address(this).balance){\r\n            revert notEnoughValue();\r\n        }\r\n        to.transfer(amount);\r\n    }\r\n}\r\n"},"contracts/utils/PriceConsumer.sol":{"content":"// // SPDX-License-Identifier: UNLICENSED\n// pragma solidity ^0.8.9;\n\n// import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n// contract PriceConsumerV3 {\n//     AggregatorV3Interface internal priceFeed;\n\n//     /**\n//      * Network: Polygon Mainet\n//      * Aggregator: ETH/USD\n//      * Address: 0xf9680d99d6c9589e2a93a78a04a279e509205945\n//      * \n//      * Aggregator: Matic/USD\n//      * Address: 0xab594600376ec9fd91f8e885dadf0ce036862de0\n//      */\n//     constructor(address clOracleAddress) {\n//         priceFeed = AggregatorV3Interface(clOracleAddress);\n//     }\n\n//     /**\n//      * Return latest price\n//      */\n\n//     function getLatestPrice() public view returns (int) {\n//         (\n//             ,\n//             /* uint80 roundID */ int price,\n//             ,\n//             ,\n\n//         ) = /* uint startedAt */ /*uint timeStamp */ /*uint80 answeredInRound */ priceFeed\n//                 .latestRoundData();\n//         return price;\n//     }\n\n//     function getPriceDecimals() public view returns (uint) {\n//         return uint(priceFeed.decimals());\n//     }\n// }\n"},"contracts/VotingContract .sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./utils/DonationVault.sol\";\n//import \"./utils/PriceConsumer.sol\";\n\n//Errors\nerror timeElapsed();\nerror timeNotElapsed();\nerror votingClosed();\nerror voted();\nerror votingNotClosed();\nerror amountZero();\nerror proposalNotValid();\nerror proposalNotPending();\nerror ethNotSent();\n\n//Voting contract system\ncontract VotingContract is Ownable {\n    uint256 public votingEndTime;\n    uint256 public donationGoal;\n    uint256 public donationAmount;\n    bool public isVotingClosed;\n    uint256 public winningProposalId;\n    uint256 public winningProposalVotes;\n    uint256 public proposalsCount;\n    address payable vaultAddress;\n\n    struct Proposal {\n        bytes32 name;\n        uint256 weidhtedVotes;\n    }\n\n    struct Voter {\n        uint vote;\n        uint256 weightVote;\n        bool voted;\n    }\n\n    mapping(uint256 => Proposal) public proposals;\n    mapping(address => Voter) public voters;\n\n    //Modifier that check if Voting period is not lapsed\n    modifier onlyDuringVotingPeriod() {\n        if (block.timestamp > votingEndTime) {\n            revert timeElapsed();\n        }\n        _;\n    }\n\n    //Modifier that check if Voting period is not lapsed\n    modifier onlyNewVoter() {\n        if (voters[msg.sender].voted) {\n            revert voted();\n        }\n        _;\n    }\n\n    //Modifier that check if Voting is open\n    modifier onlyIfVotingOpen() {\n        if (isVotingClosed) {\n            revert votingClosed();\n        }\n        _;\n    }\n\n    //Modifier that check if Voter has value\n    modifier donationRequired() {\n        if (msg.value == 0) {\n            revert amountZero();\n        }\n        _;\n    }\n\n    event Vote(uint256 indexed proposalId, address indexed voter);\n    event VotingClosed(uint256 winningProposalId, uint256 winningProposalVotes);\n\n    constructor(\n        address payable _vaultAddress,\n        uint256 _votingEndTime,\n        uint256 _donationGoal,\n        bytes32[] memory proposalNames\n    ) {\n        vaultAddress = _vaultAddress;\n        votingEndTime = _votingEndTime+block.timestamp;\n        donationGoal = _donationGoal;\n        isVotingClosed = false;\n        proposalsCount = 0;\n        for (uint i = 0; i < proposalNames.length; i++) {\n            proposalsCount++;\n            proposals[proposalsCount] = Proposal(proposalNames[i], 0);\n        }\n    }\n\n    //Function to add proposal to exsiting\n    function addProposal(bytes32 name) external onlyOwner onlyIfVotingOpen {\n        proposalsCount++;\n        proposals[proposalsCount] = Proposal(name, 0);\n    }\n\n    //Function to vote a selected id proposal with fund needed\n    function vote(\n        uint256 proposalId\n    )\n        external\n        payable\n        onlyDuringVotingPeriod\n        onlyIfVotingOpen\n        donationRequired\n        onlyNewVoter\n    {   \n        //Check\n        if (proposalId == 0) {\n            revert proposalNotValid();\n        }\n\n        //Donation part\n        uint _amount = msg.value;\n        donationAmount += _amount;\n        moveFound(_amount);\n\n        //Voter assestment\n        Voter storage voter = voters[msg.sender];\n        voter.vote = proposalId;\n        voter.weightVote = _amount;\n        voter.voted = true;\n        \n        //Weithed vote is recorded as the amount of donation\n        proposals[proposalId].weidhtedVotes += _amount;\n       \n        //Event\n        emit Vote(proposalId, msg.sender);\n    }\n\n    //Function to close voting period\n    function closeVoting() external onlyOwner {\n        if (block.timestamp <= votingEndTime) {\n            revert timeNotElapsed();\n        }\n        findWinningProposal();\n        isVotingClosed = true;\n        emit VotingClosed(winningProposalId, winningProposalVotes);\n    }\n\n    //Function to find winning proposal\n    function findWinningProposal() internal {\n        uint256 maxVotes = 0;\n        for (uint256 i = 1; i <= proposalsCount; i++) {\n            if (proposals[i].weidhtedVotes > maxVotes) {\n                maxVotes = proposals[i].weidhtedVotes;\n                winningProposalId = i;\n                winningProposalVotes = maxVotes;\n            }\n        }\n    }\n\n    //Function to withdraw donations\n    function withdrawDonations(\n        address payable to,\n        uint256 amount\n    ) external onlyOwner{\n        if (!isVotingClosed) {\n            revert votingNotClosed();\n        }\n        DonationVault(vaultAddress).withdraw(to, amount);\n    }\n\n    //Function to move fund to external vault donations\n    function moveFound(uint256 _amount) private {\n        (bool sent, ) = payable(vaultAddress).call{value: _amount}(\"\");\n        if (!sent) {\n            revert ethNotSent();\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"\n--> contracts/utils/PriceConsumer.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.19;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/utils/PriceConsumer.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[673],"ERC165":[1000],"IAccessControl":[513],"IERC165":[1012],"Math":[1878],"SignedMath":[1983],"Strings":[976]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":514,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":674,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":977,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1001,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1967:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":673,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1976:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1992:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1000,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,1000,1012,513,673],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2122:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[999],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$513","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2876:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":999,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[480],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$976_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":950,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$976_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":930,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4026:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[488],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[496],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["5003:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5429:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[512],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7324:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8125:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Context":[673],"ERC165":[1000],"EnumerableSet":[2596],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[1012],"Math":[1878],"SignedMath":[1983],"Strings":[976]},"id":441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":539,"src":"143:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":316,"src":"184:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":2597,"src":"214:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":322,"name":"IAccessControlEnumerable","nameLocations":["400:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":538,"src":"400:24:1"},"id":323,"nodeType":"InheritanceSpecifier","src":"400:24:1"},{"baseName":{"id":324,"name":"AccessControl","nameLocations":["426:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"426:13:1"},"id":325,"nodeType":"InheritanceSpecifier","src":"426:13:1"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"260:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":440,"linearizedBaseContracts":[440,315,1000,1012,538,513,673],"name":"AccessControlEnumerable","nameLocation":"373:23:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":329,"libraryName":{"id":326,"name":"EnumerableSet","nameLocations":["452:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":2596,"src":"452:13:1"},"nodeType":"UsingForDirective","src":"446:49:1","typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"EnumerableSet.AddressSet","nameLocations":["470:13:1","484:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"470:24:1"},"referencedDeclaration":2309,"src":"470:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":334,"mutability":"mutable","name":"_roleMembers","nameLocation":"554:12:1","nodeType":"VariableDeclaration","scope":440,"src":"501:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2309_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":333,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2309_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"EnumerableSet.AddressSet","nameLocations":["520:13:1","534:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"520:24:1"},"referencedDeclaration":2309,"src":"520:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[60],"body":{"id":355,"nodeType":"Block","src":"725:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"742:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":345,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"762:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"757:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$538","typeString":"type(contract IAccessControlEnumerable)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"788:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":351,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":349,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"809:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":60,"src":"803:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"803:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":342,"id":354,"nodeType":"Return","src":"735:104:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"573:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":356,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"643:17:1","nodeType":"FunctionDefinition","overrides":{"id":339,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:1"},"parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"interfaceId","nameLocation":"668:11:1","nodeType":"VariableDeclaration","scope":356,"src":"661:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":336,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":356,"src":"719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:1"},"scope":440,"src":"634:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[529],"body":{"id":374,"nodeType":"Block","src":"1530:52:1","statements":[{"expression":{"arguments":[{"id":371,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1569:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":367,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1547:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2309_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":369,"indexExpression":{"id":368,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1560:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1566:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"1547:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2309_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$2309_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1547:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":366,"id":373,"nodeType":"Return","src":"1540:35:1"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"852:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":375,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1440:13:1","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:1"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"role","nameLocation":"1462:4:1","nodeType":"VariableDeclaration","scope":375,"src":"1454:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"index","nameLocation":"1476:5:1","nodeType":"VariableDeclaration","scope":375,"src":"1468:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"1521:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:1"},"scope":440,"src":"1431:151:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[537],"body":{"id":390,"nodeType":"Block","src":"1839:51:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":384,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1856:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2309_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":386,"indexExpression":{"id":385,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1869:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1875:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"1856:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2309_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$2309_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":383,"id":389,"nodeType":"Return","src":"1849:34:1"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1588:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":391,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1759:18:1","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:1"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"1786:4:1","nodeType":"VariableDeclaration","scope":391,"src":"1778:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:1"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":391,"src":"1830:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:1"},"scope":440,"src":"1750:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[283],"body":{"id":414,"nodeType":"Block","src":"2055:89:1","statements":[{"expression":{"arguments":[{"id":403,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":404,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":400,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2071:10:1","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":283,"src":"2065:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2065:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"2065:31:1"},{"expression":{"arguments":[{"id":411,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":407,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2106:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2309_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":409,"indexExpression":{"id":408,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2119:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2125:3:1","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"2106:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2309_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2309_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2106:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"ExpressionStatement","src":"2106:31:1"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"1896:77:1","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"1987:10:1","nodeType":"FunctionDefinition","overrides":{"id":398,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:1"},"parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nameLocation":"2006:4:1","nodeType":"VariableDeclaration","scope":415,"src":"1998:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nameLocation":"2020:7:1","nodeType":"VariableDeclaration","scope":415,"src":"2012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:1"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"2055:0:1"},"scope":440,"src":"1978:166:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[314],"body":{"id":438,"nodeType":"Block","src":"2311:93:1","statements":[{"expression":{"arguments":[{"id":427,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2339:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2345:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":424,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2327:11:1","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2321:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"2321:32:1"},{"expression":{"arguments":[{"id":435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":431,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2363:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2309_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":433,"indexExpression":{"id":432,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2382:6:1","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2363,"src":"2363:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2309_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2309_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2363:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"ExpressionStatement","src":"2363:34:1"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"2150:78:1","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":439,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2242:11:1","nodeType":"FunctionDefinition","overrides":{"id":422,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:1"},"parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"role","nameLocation":"2262:4:1","nodeType":"VariableDeclaration","scope":439,"src":"2254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"account","nameLocation":"2276:7:1","nodeType":"VariableDeclaration","scope":439,"src":"2268:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:1"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"2311:0:1"},"scope":440,"src":"2233:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":441,"src":"355:2051:1","usedErrors":[]}],"src":"118:2289:1"},"id":1},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[513]},"id":514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":442,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"119:89:2","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":513,"linearizedBaseContracts":[513],"name":"IAccessControl","nameLocation":"219:14:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"240:292:2","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":452,"name":"RoleAdminChanged","nameLocation":"543:16:2","nodeType":"EventDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:2","nodeType":"VariableDeclaration","scope":452,"src":"560:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":448,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:2","nodeType":"VariableDeclaration","scope":452,"src":"582:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:2","nodeType":"VariableDeclaration","scope":452,"src":"617:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:2"},"src":"537:110:2"},{"anonymous":false,"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"653:212:2","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":461,"name":"RoleGranted","nameLocation":"876:11:2","nodeType":"EventDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:2","nodeType":"VariableDeclaration","scope":461,"src":"888:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:2","nodeType":"VariableDeclaration","scope":461,"src":"910:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:2","nodeType":"VariableDeclaration","scope":461,"src":"935:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:2"},"src":"870:89:2"},{"anonymous":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"965:275:2","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":470,"name":"RoleRevoked","nameLocation":"1251:11:2","nodeType":"EventDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:2","nodeType":"VariableDeclaration","scope":470,"src":"1263:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":466,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:2","nodeType":"VariableDeclaration","scope":470,"src":"1285:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:2","nodeType":"VariableDeclaration","scope":470,"src":"1310:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:2"},"src":"1245:89:2"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"1340:76:2","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:2","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"role","nameLocation":"1446:4:2","nodeType":"VariableDeclaration","scope":480,"src":"1438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"account","nameLocation":"1460:7:2","nodeType":"VariableDeclaration","scope":480,"src":"1452:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:2"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"1492:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:2"},"scope":513,"src":"1421:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"1504:184:2","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:2","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"role","nameLocation":"1723:4:2","nodeType":"VariableDeclaration","scope":488,"src":"1715:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:2"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"1752:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:2"},"scope":513,"src":"1693:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1767:239:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:2","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"role","nameLocation":"2038:4:2","nodeType":"VariableDeclaration","scope":496,"src":"2030:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"2052:7:2","nodeType":"VariableDeclaration","scope":496,"src":"2044:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"2069:0:2"},"scope":513,"src":"2011:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"2076:223:2","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:2","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"role","nameLocation":"2332:4:2","nodeType":"VariableDeclaration","scope":504,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"account","nameLocation":"2346:7:2","nodeType":"VariableDeclaration","scope":504,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":513,"src":"2304:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"2370:480:2","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":512,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"role","nameLocation":"2885:4:2","nodeType":"VariableDeclaration","scope":512,"src":"2877:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"account","nameLocation":"2899:7:2","nodeType":"VariableDeclaration","scope":512,"src":"2891:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2916:0:2"},"scope":513,"src":"2855:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":514,"src":"209:2710:2","usedErrors":[]}],"src":"94:2826:2"},"id":2},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[513],"IAccessControlEnumerable":[538]},"id":539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":539,"sourceUnit":514,"src":"129:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":518,"name":"IAccessControl","nameLocations":["299:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"299:14:3"},"id":519,"nodeType":"InheritanceSpecifier","src":"299:14:3"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"161:99:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":538,"linearizedBaseContracts":[538,513],"name":"IAccessControlEnumerable","nameLocation":"271:24:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"320:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":529,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"908:13:3","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"role","nameLocation":"930:4:3","nodeType":"VariableDeclaration","scope":529,"src":"922:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"index","nameLocation":"944:5:3","nodeType":"VariableDeclaration","scope":529,"src":"936:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:3"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":529,"src":"974:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:3"},"scope":538,"src":"899:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"989:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":537,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1160:18:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"role","nameLocation":"1187:4:3","nodeType":"VariableDeclaration","scope":537,"src":"1179:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"1216:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:3"},"scope":538,"src":"1151:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":539,"src":"261:966:3","usedErrors":[]}],"src":"104:1124:3"},"id":3},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[673],"Ownable":[651]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":674,"src":"127:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":543,"name":"Context","nameLocations":["683:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":673,"src":"683:7:4"},"id":544,"nodeType":"InheritanceSpecifier","src":"683:7:4"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"159:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,673],"name":"Ownable","nameLocation":"672:7:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":546,"mutability":"mutable","name":"_owner","nameLocation":"713:6:4","nodeType":"VariableDeclaration","scope":651,"src":"697:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":552,"name":"OwnershipTransferred","nameLocation":"732:20:4","nodeType":"EventDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:4","nodeType":"VariableDeclaration","scope":552,"src":"753:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:4","nodeType":"VariableDeclaration","scope":552,"src":"784:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:4"},"src":"726:84:4"},{"body":{"id":561,"nodeType":"Block","src":"926:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":557,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"955:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":556,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"936:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"936:32:4"}]},"documentation":{"id":553,"nodeType":"StructuredDocumentation","src":"816:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":562,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"923:2:4"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"926:0:4"},"scope":651,"src":"912:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":569,"nodeType":"Block","src":"1084:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":565,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"1094:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":567,"nodeType":"ExpressionStatement","src":"1094:13:4"},{"id":568,"nodeType":"PlaceholderStatement","src":"1117:1:4"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"981:77:4","text":" @dev Throws if called by any account other than the owner."},"id":570,"name":"onlyOwner","nameLocation":"1072:9:4","nodeType":"ModifierDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"1081:2:4"},"src":"1063:62:4","virtual":false,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"1256:30:4","statements":[{"expression":{"id":576,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1273:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":575,"id":577,"nodeType":"Return","src":"1266:13:4"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"1131:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:4","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"1215:2:4"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"1247:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:4"},"scope":651,"src":"1201:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":592,"nodeType":"Block","src":"1404:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":584,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1422:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":586,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"1433:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"1414:68:4"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"1292:62:4","text":" @dev Throws if the sender is not the owner."},"id":593,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:4","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"1379:2:4"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"1404:0:4"},"scope":651,"src":"1359:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":606,"nodeType":"Block","src":"1878:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":599,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"1888:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"1888:30:4"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"1495:324:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":607,"implemented":true,"kind":"function","modifiers":[{"id":597,"kind":"modifierInvocation","modifierName":{"id":596,"name":"onlyOwner","nameLocations":["1868:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"1868:9:4"},"nodeType":"ModifierInvocation","src":"1868:9:4"}],"name":"renounceOwnership","nameLocation":"1833:17:4","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"1850:2:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"1878:0:4"},"scope":651,"src":"1824:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":629,"nodeType":"Block","src":"2144:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2162:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:4","typeDescriptions":{}}},"id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"ExpressionStatement","src":"2154:73:4"},{"expression":{"arguments":[{"id":626,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2256:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":625,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"2237:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"2237:28:4"}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"1931:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":630,"implemented":true,"kind":"function","modifiers":[{"id":613,"kind":"modifierInvocation","modifierName":{"id":612,"name":"onlyOwner","nameLocations":["2134:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"2134:9:4"},"nodeType":"ModifierInvocation","src":"2134:9:4"}],"name":"transferOwnership","nameLocation":"2083:17:4","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:4","nodeType":"VariableDeclaration","scope":630,"src":"2101:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:4"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"2144:0:4"},"scope":651,"src":"2074:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"2489:124:4","statements":[{"assignments":[637],"declarations":[{"constant":false,"id":637,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:4","nodeType":"VariableDeclaration","scope":649,"src":"2499:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":639,"initialValue":{"id":638,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2518:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:4"},{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":640,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2534:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":641,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2543:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":643,"nodeType":"ExpressionStatement","src":"2534:17:4"},{"eventCall":{"arguments":[{"id":645,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2587:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2597:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":644,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2566:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"EmitStatement","src":"2561:45:4"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"2278:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:4","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:4","nodeType":"VariableDeclaration","scope":650,"src":"2454:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:4"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"2489:0:4"},"scope":651,"src":"2426:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"654:1961:4","usedErrors":[]}],"src":"102:2514:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[673]},"id":674,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":673,"linearizedBaseContracts":[673],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":662,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":659,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:5","memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":658,"id":661,"nodeType":"Return","src":"712:17:5"}]},"id":663,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":673,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:5","memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":667,"id":670,"nodeType":"Return","src":"819:15:5"}]},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":673,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":674,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"},"id":5},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[747]},"id":748,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":675,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"112:311:6","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":747,"linearizedBaseContracts":[747],"name":"Counters","nameLocation":"432:8:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":679,"members":[{"constant":false,"id":678,"mutability":"mutable","name":"_value","nameLocation":"794:6:6","nodeType":"VariableDeclaration","scope":679,"src":"786:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:6","nodeType":"StructDefinition","scope":747,"src":"447:374:6","visibility":"public"},{"body":{"id":690,"nodeType":"Block","src":"901:38:6","statements":[{"expression":{"expression":{"id":687,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"918:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:6","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":678,"src":"918:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":686,"id":689,"nodeType":"Return","src":"911:21:6"}]},"id":691,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:6","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"counter","nameLocation":"860:7:6","nodeType":"VariableDeclaration","scope":691,"src":"844:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":681,"nodeType":"UserDefinedTypeName","pathNode":{"id":680,"name":"Counter","nameLocations":["844:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":679,"src":"844:7:6"},"referencedDeclaration":679,"src":"844:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:6"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":691,"src":"892:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:6"},"scope":747,"src":"827:112:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"998:70:6","statements":[{"id":703,"nodeType":"UncheckedBlock","src":"1008:54:6","statements":[{"expression":{"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":697,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"1032:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:6","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":678,"src":"1032:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"nodeType":"ExpressionStatement","src":"1032:19:6"}]}]},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:6","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"counter","nameLocation":"980:7:6","nodeType":"VariableDeclaration","scope":705,"src":"964:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":693,"nodeType":"UserDefinedTypeName","pathNode":{"id":692,"name":"Counter","nameLocations":["964:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":679,"src":"964:7:6"},"referencedDeclaration":679,"src":"964:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:6"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"998:0:6"},"scope":747,"src":"945:123:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":732,"nodeType":"Block","src":"1127:176:6","statements":[{"assignments":[712],"declarations":[{"constant":false,"id":712,"mutability":"mutable","name":"value","nameLocation":"1145:5:6","nodeType":"VariableDeclaration","scope":732,"src":"1137:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":715,"initialValue":{"expression":{"id":713,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"1153:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:6","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":678,"src":"1153:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"1185:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"1177:49:6"},{"id":731,"nodeType":"UncheckedBlock","src":"1236:61:6","statements":[{"expression":{"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":723,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"1260:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:6","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":678,"src":"1260:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"1277:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":730,"nodeType":"ExpressionStatement","src":"1260:26:6"}]}]},"id":733,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:6","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"counter","nameLocation":"1109:7:6","nodeType":"VariableDeclaration","scope":733,"src":"1093:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":707,"nodeType":"UserDefinedTypeName","pathNode":{"id":706,"name":"Counter","nameLocations":["1093:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":679,"src":"1093:7:6"},"referencedDeclaration":679,"src":"1093:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:6"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"1127:0:6"},"scope":747,"src":"1074:229:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":745,"nodeType":"Block","src":"1358:35:6","statements":[{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":739,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"1368:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:6","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":678,"src":"1368:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"1368:18:6"}]},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:6","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"counter","nameLocation":"1340:7:6","nodeType":"VariableDeclaration","scope":746,"src":"1324:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":735,"nodeType":"UserDefinedTypeName","pathNode":{"id":734,"name":"Counter","nameLocations":["1324:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":679,"src":"1324:7:6"},"referencedDeclaration":679,"src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:6"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"1358:0:6"},"scope":747,"src":"1309:84:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":748,"src":"424:971:6","usedErrors":[]}],"src":"87:1309:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1878],"SignedMath":[1983],"Strings":[976]},"id":977,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":749,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":977,"sourceUnit":1879,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":751,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":977,"sourceUnit":1984,"src":"152:31:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"185:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":976,"linearizedBaseContracts":[976],"name":"Strings","nameLocation":"228:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":755,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:7","nodeType":"VariableDeclaration","scope":976,"src":"242:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":753,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":758,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:7","nodeType":"VariableDeclaration","scope":976,"src":"302:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":756,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":805,"nodeType":"Block","src":"518:625:7","statements":[{"id":804,"nodeType":"UncheckedBlock","src":"528:609:7","statements":[{"assignments":[767],"declarations":[{"constant":false,"id":767,"mutability":"mutable","name":"length","nameLocation":"560:6:7","nodeType":"VariableDeclaration","scope":804,"src":"552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":774,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"580:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":768,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"569:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1878_$","typeString":"type(library Math)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1715,"src":"569:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:7"},{"assignments":[776],"declarations":[{"constant":false,"id":776,"mutability":"mutable","name":"buffer","nameLocation":"618:6:7","nodeType":"VariableDeclaration","scope":804,"src":"604:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":775,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[{"id":779,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"638:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":777,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:7"},{"assignments":[783],"declarations":[{"constant":false,"id":783,"mutability":"mutable","name":"ptr","nameLocation":"667:3:7","nodeType":"VariableDeclaration","scope":804,"src":"659:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":784,"nodeType":"VariableDeclarationStatement","src":"659:11:7"},{"AST":{"nodeType":"YulBlock","src":"740:67:7","statements":[{"nodeType":"YulAssignment","src":"758:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:7"},"nodeType":"YulFunctionCall","src":"777:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:7"},"nodeType":"YulFunctionCall","src":"765:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":776,"isOffset":false,"isSlot":false,"src":"769:6:7","valueSize":1},{"declaration":767,"isOffset":false,"isSlot":false,"src":"785:6:7","valueSize":1},{"declaration":783,"isOffset":false,"isSlot":false,"src":"758:3:7","valueSize":1}],"id":785,"nodeType":"InlineAssembly","src":"731:76:7"},{"body":{"id":800,"nodeType":"Block","src":"833:267:7","statements":[{"expression":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:7","subExpression":{"id":787,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"851:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ExpressionStatement","src":"851:5:7"},{"AST":{"nodeType":"YulBlock","src":"934:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:7"},"nodeType":"YulFunctionCall","src":"974:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:7"},"nodeType":"YulFunctionCall","src":"969:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:7"},"nodeType":"YulFunctionCall","src":"956:44:7"},"nodeType":"YulExpressionStatement","src":"956:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":755,"isOffset":false,"isSlot":false,"src":"990:8:7","valueSize":1},{"declaration":783,"isOffset":false,"isSlot":false,"src":"964:3:7","valueSize":1},{"declaration":761,"isOffset":false,"isSlot":false,"src":"978:5:7","valueSize":1}],"id":790,"nodeType":"InlineAssembly","src":"925:93:7"},{"expression":{"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"1035:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":794,"nodeType":"ExpressionStatement","src":"1035:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"1068:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":799,"nodeType":"IfStatement","src":"1064:21:7","trueBody":{"id":798,"nodeType":"Break","src":"1080:5:7"}}]},"condition":{"hexValue":"74727565","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":801,"nodeType":"WhileStatement","src":"820:280:7"},{"expression":{"id":802,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"1120:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":765,"id":803,"nodeType":"Return","src":"1113:13:7"}]}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"352:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:7","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"value","nameLocation":"473:5:7","nodeType":"VariableDeclaration","scope":806,"src":"465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:7"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"503:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":763,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:7"},"scope":976,"src":"447:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":833,"nodeType":"Block","src":"1313:103:7","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1354:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:7","trueExpression":{"hexValue":"2d","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1400:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":825,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"1385:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1983_$","typeString":"type(library SignedMath)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"1385:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":824,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[806,834],"referencedDeclaration":806,"src":"1376:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":816,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":814,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:7","typeDescriptions":{}}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":813,"id":832,"nodeType":"Return","src":"1323:86:7"}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"1149:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":834,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:7","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"value","nameLocation":"1268:5:7","nodeType":"VariableDeclaration","scope":834,"src":"1261:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":808,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:7"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"1298:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":811,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:7"},"scope":976,"src":"1243:173:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"1595:100:7","statements":[{"id":852,"nodeType":"UncheckedBlock","src":"1605:84:7","statements":[{"expression":{"arguments":[{"id":843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1667:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":844,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1655:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1878_$","typeString":"type(library Math)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1838,"src":"1655:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":842,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[854,930,950],"referencedDeclaration":930,"src":"1636:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":841,"id":851,"nodeType":"Return","src":"1629:49:7"}]}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"1422:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:7","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"value","nameLocation":"1550:5:7","nodeType":"VariableDeclaration","scope":854,"src":"1542:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:7"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1580:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":839,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:7"},"scope":976,"src":"1521:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":929,"nodeType":"Block","src":"1908:347:7","statements":[{"assignments":[865],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:7","nodeType":"VariableDeclaration","scope":929,"src":"1918:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":874,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":869,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"1954:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":866,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:7"},{"expression":{"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":875,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"1975:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":877,"indexExpression":{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":880,"nodeType":"ExpressionStatement","src":"1975:15:7"},{"expression":{"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":881,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2000:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":883,"indexExpression":{"hexValue":"31","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":886,"nodeType":"ExpressionStatement","src":"2000:15:7"},{"body":{"id":915,"nodeType":"Block","src":"2070:83:7","statements":[{"expression":{"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":901,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2084:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":903,"indexExpression":{"id":902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"2091:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":904,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2096:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":908,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2105:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":910,"nodeType":"ExpressionStatement","src":"2084:33:7"},{"expression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"nodeType":"ExpressionStatement","src":"2131:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"2058:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":916,"initializationExpression":{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"i","nameLocation":"2038:1:7","nodeType":"VariableDeclaration","scope":916,"src":"2030:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":894,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":890,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"2046:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:7"},"loopExpression":{"expression":{"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:7","subExpression":{"id":898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"2067:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":900,"nodeType":"ExpressionStatement","src":"2065:3:7"},"nodeType":"ForStatement","src":"2025:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"2162:55:7"},{"expression":{"arguments":[{"id":926,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2241:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":924,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:7","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":863,"id":928,"nodeType":"Return","src":"2227:21:7"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1701:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":930,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"value","nameLocation":"1847:5:7","nodeType":"VariableDeclaration","scope":930,"src":"1839:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"length","nameLocation":"1862:6:7","nodeType":"VariableDeclaration","scope":930,"src":"1854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":930,"src":"1893:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":861,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:7"},"scope":976,"src":"1818:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":949,"nodeType":"Block","src":"2480:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":943,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"2525:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":941,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:7","typeDescriptions":{}}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{}}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":946,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2533:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":938,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[854,930,950],"referencedDeclaration":930,"src":"2497:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":937,"id":948,"nodeType":"Return","src":"2490:59:7"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"2261:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":950,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:7","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"addr","nameLocation":"2436:4:7","nodeType":"VariableDeclaration","scope":950,"src":"2428:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:7"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"2465:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":935,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:7"},"scope":976,"src":"2407:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":974,"nodeType":"Block","src":"2711:66:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2744:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":961,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:7","typeDescriptions":{}}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":960,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2767:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:7","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":959,"id":973,"nodeType":"Return","src":"2721:49:7"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"2562:66:7","text":" @dev Returns true if the two strings are equal."},"id":975,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:7","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"a","nameLocation":"2662:1:7","nodeType":"VariableDeclaration","scope":975,"src":"2648:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":952,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"b","nameLocation":"2679:1:7","nodeType":"VariableDeclaration","scope":975,"src":"2665:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":954,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:7"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":975,"src":"2705:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":957,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:7"},"scope":976,"src":"2633:144:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":977,"src":"220:2559:7","usedErrors":[]}],"src":"101:2679:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1000],"IERC165":[1012]},"id":1001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":978,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":979,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1001,"sourceUnit":1013,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":981,"name":"IERC165","nameLocations":["754:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1012,"src":"754:7:8"},"id":982,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1000,"linearizedBaseContracts":[1000,1012],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1011],"body":{"id":998,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":991,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":993,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1012_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1012_$","typeString":"type(contract IERC165)"}],"id":992,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1012","typeString":"type(contract IERC165)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":990,"id":997,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":999,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":987,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":999,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":984,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":988,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":1000,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1001,"src":"726:260:8","usedErrors":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1012]},"id":1013,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1002,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1012,"linearizedBaseContracts":[1012],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1011,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":1011,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1005,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1008,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":1012,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1013,"src":"405:447:9","usedErrors":[]}],"src":"100:753:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1878]},"id":1879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1014,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"128:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1878,"linearizedBaseContracts":[1878],"name":"Math","nameLocation":"210:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1019,"members":[{"id":1016,"name":"Down","nameLocation":"245:4:10","nodeType":"EnumValue","src":"245:4:10"},{"id":1017,"name":"Up","nameLocation":"287:2:10","nodeType":"EnumValue","src":"287:2:10"},{"id":1018,"name":"Zero","nameLocation":"318:4:10","nodeType":"EnumValue","src":"318:4:10"}],"name":"Rounding","nameLocation":"226:8:10","nodeType":"EnumDefinition","src":"221:122:10"},{"body":{"id":1036,"nodeType":"Block","src":"480:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"497:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1030,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"501:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"509:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:10","trueExpression":{"id":1032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"505:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1028,"id":1035,"nodeType":"Return","src":"490:20:10"}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"349:59:10","text":" @dev Returns the largest of two numbers."},"id":1037,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:10","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"a","nameLocation":"434:1:10","nodeType":"VariableDeclaration","scope":1037,"src":"426:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"b","nameLocation":"445:1:10","nodeType":"VariableDeclaration","scope":1037,"src":"437:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:10"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1037,"src":"471:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:10"},"scope":1878,"src":"413:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"655:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1047,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"672:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1048,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"676:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1051,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"684:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:10","trueExpression":{"id":1050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"680:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1046,"id":1053,"nodeType":"Return","src":"665:20:10"}]},"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"523:60:10","text":" @dev Returns the smallest of two numbers."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:10","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1055,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1055,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1055,"src":"646:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:10"},"scope":1878,"src":"588:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"876:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"931:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"935:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"941:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1070,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"945:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1064,"id":1076,"nodeType":"Return","src":"923:28:10"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"698:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:10","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"a","nameLocation":"830:1:10","nodeType":"VariableDeclaration","scope":1078,"src":"822:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"b","nameLocation":"841:1:10","nodeType":"VariableDeclaration","scope":1078,"src":"833:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:10"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"867:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:10"},"scope":1878,"src":"805:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1102,"nodeType":"Block","src":"1228:123:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"1316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"1330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"1339:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:10","trueExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1087,"id":1101,"nodeType":"Return","src":"1309:35:10"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"964:188:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:10","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"a","nameLocation":"1182:1:10","nodeType":"VariableDeclaration","scope":1103,"src":"1174:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"b","nameLocation":"1193:1:10","nodeType":"VariableDeclaration","scope":1103,"src":"1185:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:10"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"1219:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:10"},"scope":1878,"src":"1157:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"1765:4115:10","statements":[{"id":1224,"nodeType":"UncheckedBlock","src":"1775:4099:10","statements":[{"assignments":[1116],"declarations":[{"constant":false,"id":1116,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:10","nodeType":"VariableDeclaration","scope":1224,"src":"2096:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1117,"nodeType":"VariableDeclarationStatement","src":"2096:13:10"},{"assignments":[1119],"declarations":[{"constant":false,"id":1119,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:10","nodeType":"VariableDeclaration","scope":1224,"src":"2168:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1120,"nodeType":"VariableDeclarationStatement","src":"2168:13:10"},{"AST":{"nodeType":"YulBlock","src":"2248:157:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:10"},"nodeType":"YulFunctionCall","src":"2289:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:10"},"nodeType":"YulFunctionCall","src":"2276:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:10","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:10"},"nodeType":"YulFunctionCall","src":"2322:9:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:10"}]},{"nodeType":"YulAssignment","src":"2348:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:10"},"nodeType":"YulFunctionCall","src":"2361:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:10"},"nodeType":"YulFunctionCall","src":"2377:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:10"},"nodeType":"YulFunctionCall","src":"2357:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1116,"isOffset":false,"isSlot":false,"src":"2313:5:10","valueSize":1},{"declaration":1116,"isOffset":false,"isSlot":false,"src":"2369:5:10","valueSize":1},{"declaration":1116,"isOffset":false,"isSlot":false,"src":"2384:5:10","valueSize":1},{"declaration":1119,"isOffset":false,"isSlot":false,"src":"2348:5:10","valueSize":1},{"declaration":1106,"isOffset":false,"isSlot":false,"src":"2283:1:10","valueSize":1},{"declaration":1106,"isOffset":false,"isSlot":false,"src":"2326:1:10","valueSize":1},{"declaration":1108,"isOffset":false,"isSlot":false,"src":"2286:1:10","valueSize":1},{"declaration":1108,"isOffset":false,"isSlot":false,"src":"2329:1:10","valueSize":1}],"id":1121,"nodeType":"InlineAssembly","src":"2239:166:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"2486:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1130,"nodeType":"IfStatement","src":"2482:368:10","trueBody":{"id":1129,"nodeType":"Block","src":"2498:352:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"2816:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1126,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2824:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1114,"id":1128,"nodeType":"Return","src":"2809:26:10"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2960:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1133,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"2974:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"ExpressionStatement","src":"2952:53:10"},{"assignments":[1139],"declarations":[{"constant":false,"id":1139,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:10","nodeType":"VariableDeclaration","scope":1224,"src":"3261:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1140,"nodeType":"VariableDeclarationStatement","src":"3261:17:10"},{"AST":{"nodeType":"YulBlock","src":"3301:291:10","statements":[{"nodeType":"YulAssignment","src":"3370:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:10"},"nodeType":"YulFunctionCall","src":"3383:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:10"}]},{"nodeType":"YulAssignment","src":"3490:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:10"},"nodeType":"YulFunctionCall","src":"3510:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:10"},"nodeType":"YulFunctionCall","src":"3499:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:10"}]},{"nodeType":"YulAssignment","src":"3548:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:10"},"nodeType":"YulFunctionCall","src":"3557:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1110,"isOffset":false,"isSlot":false,"src":"3396:11:10","valueSize":1},{"declaration":1116,"isOffset":false,"isSlot":false,"src":"3524:5:10","valueSize":1},{"declaration":1116,"isOffset":false,"isSlot":false,"src":"3548:5:10","valueSize":1},{"declaration":1116,"isOffset":false,"isSlot":false,"src":"3561:5:10","valueSize":1},{"declaration":1119,"isOffset":false,"isSlot":false,"src":"3490:5:10","valueSize":1},{"declaration":1119,"isOffset":false,"isSlot":false,"src":"3503:5:10","valueSize":1},{"declaration":1139,"isOffset":false,"isSlot":false,"src":"3370:9:10","valueSize":1},{"declaration":1139,"isOffset":false,"isSlot":false,"src":"3513:9:10","valueSize":1},{"declaration":1139,"isOffset":false,"isSlot":false,"src":"3568:9:10","valueSize":1},{"declaration":1106,"isOffset":false,"isSlot":false,"src":"3390:1:10","valueSize":1},{"declaration":1108,"isOffset":false,"isSlot":false,"src":"3393:1:10","valueSize":1}],"id":1141,"nodeType":"InlineAssembly","src":"3292:300:10"},{"assignments":[1143],"declarations":[{"constant":false,"id":1143,"mutability":"mutable","name":"twos","nameLocation":"3907:4:10","nodeType":"VariableDeclaration","scope":1224,"src":"3899:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1151,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1144,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"3914:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:10","subExpression":{"id":1145,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"3930:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:10"},{"AST":{"nodeType":"YulBlock","src":"3969:362:10","statements":[{"nodeType":"YulAssignment","src":"4034:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:10"},"nodeType":"YulFunctionCall","src":"4049:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:10"}]},{"nodeType":"YulAssignment","src":"4138:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:10"},"nodeType":"YulFunctionCall","src":"4147:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:10"}]},{"nodeType":"YulAssignment","src":"4278:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:10"},"nodeType":"YulFunctionCall","src":"4294:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:10"},"nodeType":"YulFunctionCall","src":"4290:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:10"},"nodeType":"YulFunctionCall","src":"4286:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1110,"isOffset":false,"isSlot":false,"src":"4034:11:10","valueSize":1},{"declaration":1110,"isOffset":false,"isSlot":false,"src":"4053:11:10","valueSize":1},{"declaration":1116,"isOffset":false,"isSlot":false,"src":"4138:5:10","valueSize":1},{"declaration":1116,"isOffset":false,"isSlot":false,"src":"4151:5:10","valueSize":1},{"declaration":1143,"isOffset":false,"isSlot":false,"src":"4066:4:10","valueSize":1},{"declaration":1143,"isOffset":false,"isSlot":false,"src":"4158:4:10","valueSize":1},{"declaration":1143,"isOffset":false,"isSlot":false,"src":"4278:4:10","valueSize":1},{"declaration":1143,"isOffset":false,"isSlot":false,"src":"4301:4:10","valueSize":1},{"declaration":1143,"isOffset":false,"isSlot":false,"src":"4308:4:10","valueSize":1}],"id":1152,"nodeType":"InlineAssembly","src":"3960:371:10"},{"expression":{"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1153,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4397:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4406:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1155,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4414:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1158,"nodeType":"ExpressionStatement","src":"4397:21:10"},{"assignments":[1160],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:10","nodeType":"VariableDeclaration","scope":1224,"src":"4736:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1167,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1162,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"4759:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:10"},{"expression":{"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1168,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"4992:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1170,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"5007:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1171,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5021:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1175,"nodeType":"ExpressionStatement","src":"4992:36:10"},{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1176,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"5076:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1179,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5090:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1183,"nodeType":"ExpressionStatement","src":"5061:36:10"},{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1184,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5131:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"5146:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1187,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5160:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1191,"nodeType":"ExpressionStatement","src":"5131:36:10"},{"expression":{"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1192,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5201:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"5216:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1195,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5230:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1199,"nodeType":"ExpressionStatement","src":"5201:36:10"},{"expression":{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1200,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1202,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"5286:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1203,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5300:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1207,"nodeType":"ExpressionStatement","src":"5271:36:10"},{"expression":{"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1208,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1210,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"5357:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1211,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5371:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1215,"nodeType":"ExpressionStatement","src":"5342:36:10"},{"expression":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"5812:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"5821:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1218,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5829:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1221,"nodeType":"ExpressionStatement","src":"5812:24:10"},{"expression":{"id":1222,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"5857:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1114,"id":1223,"nodeType":"Return","src":"5850:13:10"}]}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"1357:305:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:10","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"x","nameLocation":"1691:1:10","nodeType":"VariableDeclaration","scope":1226,"src":"1683:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"y","nameLocation":"1702:1:10","nodeType":"VariableDeclaration","scope":1226,"src":"1694:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:10","nodeType":"VariableDeclaration","scope":1226,"src":"1705:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:10"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"result","nameLocation":"1757:6:10","nodeType":"VariableDeclaration","scope":1226,"src":"1749:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:10"},"scope":1878,"src":"1667:4213:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1269,"nodeType":"Block","src":"6122:189:10","statements":[{"assignments":[1242],"declarations":[{"constant":false,"id":1242,"mutability":"mutable","name":"result","nameLocation":"6140:6:10","nodeType":"VariableDeclaration","scope":1269,"src":"6132:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1248,"initialValue":{"arguments":[{"id":1244,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"6156:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1245,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"6159:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1246,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"6162:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1226,1270],"referencedDeclaration":1226,"src":"6149:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1249,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6188:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1250,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"6200:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1019_$","typeString":"type(enum Math.Rounding)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1017,"src":"6200:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"src":"6188:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1254,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"6222:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1255,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"6225:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1256,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"6228:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1253,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1266,"nodeType":"IfStatement","src":"6184:98:10","trueBody":{"id":1265,"nodeType":"Block","src":"6246:36:10","statements":[{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6260:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"6260:11:10"}]}},{"expression":{"id":1267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6298:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1240,"id":1268,"nodeType":"Return","src":"6291:13:10"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"5886:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:10","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"x","nameLocation":"6036:1:10","nodeType":"VariableDeclaration","scope":1270,"src":"6028:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"y","nameLocation":"6047:1:10","nodeType":"VariableDeclaration","scope":1270,"src":"6039:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:10","nodeType":"VariableDeclaration","scope":1270,"src":"6050:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:10","nodeType":"VariableDeclaration","scope":1270,"src":"6071:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"typeName":{"id":1235,"nodeType":"UserDefinedTypeName","pathNode":{"id":1234,"name":"Rounding","nameLocations":["6071:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"6071:8:10"},"referencedDeclaration":1019,"src":"6071:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:10"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1270,"src":"6113:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:10"},"scope":1878,"src":"6012:299:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1381,"nodeType":"Block","src":"6587:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"6601:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1284,"nodeType":"IfStatement","src":"6597:45:10","trueBody":{"id":1283,"nodeType":"Block","src":"6609:33:10","statements":[{"expression":{"hexValue":"30","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1277,"id":1282,"nodeType":"Return","src":"6623:8:10"}]}},{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"result","nameLocation":"7329:6:10","nodeType":"VariableDeclaration","scope":1381,"src":"7321:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1295,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7349:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1550,1586],"referencedDeclaration":1550,"src":"7344:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:10"},{"id":1380,"nodeType":"UncheckedBlock","src":"7758:408:10","statements":[{"expression":{"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7782:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7792:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7801:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7805:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1306,"nodeType":"ExpressionStatement","src":"7782:35:10"},{"expression":{"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7831:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7841:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7850:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7854:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ExpressionStatement","src":"7831:35:10"},{"expression":{"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7880:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7890:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7899:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7903:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1328,"nodeType":"ExpressionStatement","src":"7880:35:10"},{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7929:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7939:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7948:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7952:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"7929:35:10"},{"expression":{"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7978:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7988:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7997:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8001:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1350,"nodeType":"ExpressionStatement","src":"7978:35:10"},{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8027:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8037:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8046:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8050:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1361,"nodeType":"ExpressionStatement","src":"8027:35:10"},{"expression":{"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8076:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8086:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8095:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8099:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1372,"nodeType":"ExpressionStatement","src":"8076:35:10"},{"expression":{"arguments":[{"id":1374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8136:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8144:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"8148:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1373,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"8132:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1277,"id":1379,"nodeType":"Return","src":"8125:30:10"}]}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"6317:208:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:10","nodeType":"FunctionDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"a","nameLocation":"6552:1:10","nodeType":"VariableDeclaration","scope":1382,"src":"6544:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:10"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1382,"src":"6578:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:10"},"scope":1878,"src":"6530:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1417,"nodeType":"Block","src":"8348:161:10","statements":[{"id":1416,"nodeType":"UncheckedBlock","src":"8358:145:10","statements":[{"assignments":[1394],"declarations":[{"constant":false,"id":1394,"mutability":"mutable","name":"result","nameLocation":"8390:6:10","nodeType":"VariableDeclaration","scope":1416,"src":"8382:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1398,"initialValue":{"arguments":[{"id":1396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8404:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1395,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1382,1418],"referencedDeclaration":1382,"src":"8399:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"8427:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1400,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"8437:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1401,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8449:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1019_$","typeString":"type(enum Math.Rounding)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1017,"src":"8449:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"src":"8437:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"8464:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"8473:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8482:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:10","trueExpression":{"hexValue":"31","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1392,"id":1415,"nodeType":"Return","src":"8420:72:10"}]}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"8178:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1418,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:10","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"a","nameLocation":"8294:1:10","nodeType":"VariableDeclaration","scope":1418,"src":"8286:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:10","nodeType":"VariableDeclaration","scope":1418,"src":"8297:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"typeName":{"id":1387,"nodeType":"UserDefinedTypeName","pathNode":{"id":1386,"name":"Rounding","nameLocations":["8297:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"8297:8:10"},"referencedDeclaration":1019,"src":"8297:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:10"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1418,"src":"8339:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:10"},"scope":1878,"src":"8272:237:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1549,"nodeType":"Block","src":"8694:922:10","statements":[{"assignments":[1427],"declarations":[{"constant":false,"id":1427,"mutability":"mutable","name":"result","nameLocation":"8712:6:10","nodeType":"VariableDeclaration","scope":1549,"src":"8704:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1429,"initialValue":{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:10"},{"id":1546,"nodeType":"UncheckedBlock","src":"8732:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"8760:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1444,"nodeType":"IfStatement","src":"8756:99:10","trueBody":{"id":1443,"nodeType":"Block","src":"8778:77:10","statements":[{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"8796:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1438,"nodeType":"ExpressionStatement","src":"8796:13:10"},{"expression":{"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"8827:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1442,"nodeType":"ExpressionStatement","src":"8827:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"8872:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"8868:96:10","trueBody":{"id":1458,"nodeType":"Block","src":"8889:75:10","statements":[{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"8907:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"8907:12:10"},{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"8937:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1457,"nodeType":"ExpressionStatement","src":"8937:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"8981:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"8977:96:10","trueBody":{"id":1473,"nodeType":"Block","src":"8998:75:10","statements":[{"expression":{"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9016:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1468,"nodeType":"ExpressionStatement","src":"9016:12:10"},{"expression":{"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9046:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1472,"nodeType":"ExpressionStatement","src":"9046:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9090:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1489,"nodeType":"IfStatement","src":"9086:96:10","trueBody":{"id":1488,"nodeType":"Block","src":"9107:75:10","statements":[{"expression":{"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9125:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1483,"nodeType":"ExpressionStatement","src":"9125:12:10"},{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9155:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"9155:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9199:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1504,"nodeType":"IfStatement","src":"9195:93:10","trueBody":{"id":1503,"nodeType":"Block","src":"9215:73:10","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9233:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"9233:11:10"},{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9262:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"nodeType":"ExpressionStatement","src":"9262:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9305:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1519,"nodeType":"IfStatement","src":"9301:93:10","trueBody":{"id":1518,"nodeType":"Block","src":"9321:73:10","statements":[{"expression":{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9339:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1513,"nodeType":"ExpressionStatement","src":"9339:11:10"},{"expression":{"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9368:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1517,"nodeType":"ExpressionStatement","src":"9368:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9411:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"nodeType":"IfStatement","src":"9407:93:10","trueBody":{"id":1533,"nodeType":"Block","src":"9427:73:10","statements":[{"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"nodeType":"ExpressionStatement","src":"9445:11:10"},{"expression":{"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9474:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ExpressionStatement","src":"9474:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"9517:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1545,"nodeType":"IfStatement","src":"9513:64:10","trueBody":{"id":1544,"nodeType":"Block","src":"9533:44:10","statements":[{"expression":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9551:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1543,"nodeType":"ExpressionStatement","src":"9551:11:10"}]}}]},{"expression":{"id":1547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9603:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1425,"id":1548,"nodeType":"Return","src":"9596:13:10"}]},"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"8515:113:10","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1550,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:10","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"value","nameLocation":"8655:5:10","nodeType":"VariableDeclaration","scope":1550,"src":"8647:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:10"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"8685:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:10"},"scope":1878,"src":"8633:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"9849:165:10","statements":[{"id":1584,"nodeType":"UncheckedBlock","src":"9859:149:10","statements":[{"assignments":[1562],"declarations":[{"constant":false,"id":1562,"mutability":"mutable","name":"result","nameLocation":"9891:6:10","nodeType":"VariableDeclaration","scope":1584,"src":"9883:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1566,"initialValue":{"arguments":[{"id":1564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"9905:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1563,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1550,1586],"referencedDeclaration":1550,"src":"9900:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"9932:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"9942:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1569,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"9954:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1019_$","typeString":"type(enum Math.Rounding)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1017,"src":"9954:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"src":"9942:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"9974:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"9983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:10","trueExpression":{"hexValue":"31","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1560,"id":1583,"nodeType":"Return","src":"9925:72:10"}]}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"9622:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:10","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"value","nameLocation":"9791:5:10","nodeType":"VariableDeclaration","scope":1586,"src":"9783:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:10","nodeType":"VariableDeclaration","scope":1586,"src":"9798:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"typeName":{"id":1555,"nodeType":"UserDefinedTypeName","pathNode":{"id":1554,"name":"Rounding","nameLocations":["9798:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"9798:8:10"},"referencedDeclaration":1019,"src":"9798:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:10"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1586,"src":"9840:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:10"},"scope":1878,"src":"9769:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"10201:854:10","statements":[{"assignments":[1595],"declarations":[{"constant":false,"id":1595,"mutability":"mutable","name":"result","nameLocation":"10219:6:10","nodeType":"VariableDeclaration","scope":1714,"src":"10211:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1597,"initialValue":{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:10"},{"id":1711,"nodeType":"UncheckedBlock","src":"10239:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10267:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1614,"nodeType":"IfStatement","src":"10263:103:10","trueBody":{"id":1613,"nodeType":"Block","src":"10286:80:10","statements":[{"expression":{"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10304:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1608,"nodeType":"ExpressionStatement","src":"10304:17:10"},{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10339:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ExpressionStatement","src":"10339:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10383:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1631,"nodeType":"IfStatement","src":"10379:103:10","trueBody":{"id":1630,"nodeType":"Block","src":"10402:80:10","statements":[{"expression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10420:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1625,"nodeType":"ExpressionStatement","src":"10420:17:10"},{"expression":{"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10455:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1629,"nodeType":"ExpressionStatement","src":"10455:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10499:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10495:103:10","trueBody":{"id":1647,"nodeType":"Block","src":"10518:80:10","statements":[{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10536:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1642,"nodeType":"ExpressionStatement","src":"10536:17:10"},{"expression":{"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10571:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1646,"nodeType":"ExpressionStatement","src":"10571:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10615:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1665,"nodeType":"IfStatement","src":"10611:100:10","trueBody":{"id":1664,"nodeType":"Block","src":"10633:78:10","statements":[{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10651:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1659,"nodeType":"ExpressionStatement","src":"10651:16:10"},{"expression":{"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10685:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1663,"nodeType":"ExpressionStatement","src":"10685:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10728:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1682,"nodeType":"IfStatement","src":"10724:100:10","trueBody":{"id":1681,"nodeType":"Block","src":"10746:78:10","statements":[{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10764:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1676,"nodeType":"ExpressionStatement","src":"10764:16:10"},{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10798:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1680,"nodeType":"ExpressionStatement","src":"10798:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10841:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1699,"nodeType":"IfStatement","src":"10837:100:10","trueBody":{"id":1698,"nodeType":"Block","src":"10859:78:10","statements":[{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10877:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1693,"nodeType":"ExpressionStatement","src":"10877:16:10"},{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10911:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ExpressionStatement","src":"10911:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10954:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"IfStatement","src":"10950:66:10","trueBody":{"id":1709,"nodeType":"Block","src":"10972:44:10","statements":[{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10990:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"10990:11:10"}]}}]},{"expression":{"id":1712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"11042:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1593,"id":1713,"nodeType":"Return","src":"11035:13:10"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"10020:114:10","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:10","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"value","nameLocation":"10162:5:10","nodeType":"VariableDeclaration","scope":1715,"src":"10154:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:10"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"10192:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:10"},"scope":1878,"src":"10139:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1750,"nodeType":"Block","src":"11290:167:10","statements":[{"id":1749,"nodeType":"UncheckedBlock","src":"11300:151:10","statements":[{"assignments":[1727],"declarations":[{"constant":false,"id":1727,"mutability":"mutable","name":"result","nameLocation":"11332:6:10","nodeType":"VariableDeclaration","scope":1749,"src":"11324:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1731,"initialValue":{"arguments":[{"id":1729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"11347:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1728,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1715,1751],"referencedDeclaration":1715,"src":"11341:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"11374:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"11384:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1734,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11396:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1019_$","typeString":"type(enum Math.Rounding)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1017,"src":"11396:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"src":"11384:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"11417:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"11426:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:10","trueExpression":{"hexValue":"31","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1725,"id":1748,"nodeType":"Return","src":"11367:73:10"}]}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"11061:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:10","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"value","nameLocation":"11232:5:10","nodeType":"VariableDeclaration","scope":1751,"src":"11224:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:10","nodeType":"VariableDeclaration","scope":1751,"src":"11239:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"typeName":{"id":1720,"nodeType":"UserDefinedTypeName","pathNode":{"id":1719,"name":"Rounding","nameLocations":["11239:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"11239:8:10"},"referencedDeclaration":1019,"src":"11239:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:10"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"11281:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:10"},"scope":1878,"src":"11209:248:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1837,"nodeType":"Block","src":"11771:600:10","statements":[{"assignments":[1760],"declarations":[{"constant":false,"id":1760,"mutability":"mutable","name":"result","nameLocation":"11789:6:10","nodeType":"VariableDeclaration","scope":1837,"src":"11781:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1762,"initialValue":{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:10"},{"id":1834,"nodeType":"UncheckedBlock","src":"11809:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"11837:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"nodeType":"IfStatement","src":"11833:98:10","trueBody":{"id":1776,"nodeType":"Block","src":"11855:76:10","statements":[{"expression":{"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"11873:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ExpressionStatement","src":"11873:13:10"},{"expression":{"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"11904:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1775,"nodeType":"ExpressionStatement","src":"11904:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"11948:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1792,"nodeType":"IfStatement","src":"11944:95:10","trueBody":{"id":1791,"nodeType":"Block","src":"11965:74:10","statements":[{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"11983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1786,"nodeType":"ExpressionStatement","src":"11983:12:10"},{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12013:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"12013:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"12056:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1807,"nodeType":"IfStatement","src":"12052:95:10","trueBody":{"id":1806,"nodeType":"Block","src":"12073:74:10","statements":[{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"12091:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1801,"nodeType":"ExpressionStatement","src":"12091:12:10"},{"expression":{"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12121:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1805,"nodeType":"ExpressionStatement","src":"12121:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"12164:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"IfStatement","src":"12160:95:10","trueBody":{"id":1821,"nodeType":"Block","src":"12181:74:10","statements":[{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"12199:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"12199:12:10"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12229:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"12229:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"12272:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"nodeType":"IfStatement","src":"12268:64:10","trueBody":{"id":1832,"nodeType":"Block","src":"12288:44:10","statements":[{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12306:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1831,"nodeType":"ExpressionStatement","src":"12306:11:10"}]}}]},{"expression":{"id":1835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12358:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1758,"id":1836,"nodeType":"Return","src":"12351:13:10"}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"11463:240:10","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:10","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"value","nameLocation":"11732:5:10","nodeType":"VariableDeclaration","scope":1838,"src":"11724:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:10"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1838,"src":"11762:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:10"},"scope":1878,"src":"11708:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"12608:174:10","statements":[{"id":1875,"nodeType":"UncheckedBlock","src":"12618:158:10","statements":[{"assignments":[1850],"declarations":[{"constant":false,"id":1850,"mutability":"mutable","name":"result","nameLocation":"12650:6:10","nodeType":"VariableDeclaration","scope":1875,"src":"12642:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1854,"initialValue":{"arguments":[{"id":1852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"12666:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1851,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1838,1877],"referencedDeclaration":1838,"src":"12659:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"12693:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"12703:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1857,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"12715:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1019_$","typeString":"type(enum Math.Rounding)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1017,"src":"12715:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"src":"12703:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"12736:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"12751:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:10","trueExpression":{"hexValue":"31","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1848,"id":1874,"nodeType":"Return","src":"12686:79:10"}]}]},"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"12377:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:10","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"value","nameLocation":"12550:5:10","nodeType":"VariableDeclaration","scope":1877,"src":"12542:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:10","nodeType":"VariableDeclaration","scope":1877,"src":"12557:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"},"typeName":{"id":1843,"nodeType":"UserDefinedTypeName","pathNode":{"id":1842,"name":"Rounding","nameLocations":["12557:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"12557:8:10"},"referencedDeclaration":1019,"src":"12557:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1019","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:10"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1877,"src":"12599:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:10"},"scope":1878,"src":"12526:256:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1879,"src":"202:12582:10","usedErrors":[]}],"src":"103:12682:10"},"id":10},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1983]},"id":1984,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1880,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"134:80:11","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1983,"linearizedBaseContracts":[1983],"name":"SignedMath","nameLocation":"223:10:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1898,"nodeType":"Block","src":"375:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"392:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1892,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"396:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"404:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:11","trueExpression":{"id":1894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"400:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1890,"id":1897,"nodeType":"Return","src":"385:20:11"}]},"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"240:66:11","text":" @dev Returns the largest of two signed numbers."},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:11","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"a","nameLocation":"331:1:11","nodeType":"VariableDeclaration","scope":1899,"src":"324:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1883,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"b","nameLocation":"341:1:11","nodeType":"VariableDeclaration","scope":1899,"src":"334:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1885,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:11"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1899,"src":"367:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1888,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:11"},"scope":1983,"src":"311:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1916,"nodeType":"Block","src":"554:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"571:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"575:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1913,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"583:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:11","trueExpression":{"id":1912,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"579:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1908,"id":1915,"nodeType":"Return","src":"564:20:11"}]},"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"418:67:11","text":" @dev Returns the smallest of two signed numbers."},"id":1917,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:11","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"a","nameLocation":"510:1:11","nodeType":"VariableDeclaration","scope":1917,"src":"503:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1901,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"b","nameLocation":"520:1:11","nodeType":"VariableDeclaration","scope":1917,"src":"513:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1903,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:11"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1917,"src":"546:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1906,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:11"},"scope":1983,"src":"490:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"796:162:11","statements":[{"assignments":[1928],"declarations":[{"constant":false,"id":1928,"mutability":"mutable","name":"x","nameLocation":"865:1:11","nodeType":"VariableDeclaration","scope":1960,"src":"858:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1927,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1941,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"870:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"874:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"881:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1934,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"885:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:11"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"910:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1947,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"930:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:11","typeDescriptions":{}}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1943,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:11","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"944:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"948:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1926,"id":1959,"nodeType":"Return","src":"903:48:11"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"597:126:11","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:11","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"a","nameLocation":"752:1:11","nodeType":"VariableDeclaration","scope":1961,"src":"745:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1919,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"b","nameLocation":"762:1:11","nodeType":"VariableDeclaration","scope":1961,"src":"755:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1921,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:11"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"788:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1924,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:11"},"scope":1983,"src":"728:230:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1981,"nodeType":"Block","src":"1102:158:11","statements":[{"id":1980,"nodeType":"UncheckedBlock","src":"1112:142:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1227:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:11","subExpression":{"id":1975,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1241:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:11","trueExpression":{"id":1974,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1236:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:11","typeDescriptions":{}}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1968,"id":1979,"nodeType":"Return","src":"1212:31:11"}]}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"964:78:11","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1982,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:11","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"n","nameLocation":"1067:1:11","nodeType":"VariableDeclaration","scope":1982,"src":"1060:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1963,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:11"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1982,"src":"1093:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:11"},"scope":1983,"src":"1047:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1984,"src":"215:1047:11","usedErrors":[]}],"src":"109:1154:11"},"id":11},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2596]},"id":2597,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1985,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"230:1098:12","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2596,"linearizedBaseContracts":[2596],"name":"EnumerableSet","nameLocation":"1337:13:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1994,"members":[{"constant":false,"id":1989,"mutability":"mutable","name":"_values","nameLocation":"1861:7:12","nodeType":"VariableDeclaration","scope":1994,"src":"1851:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1988,"nodeType":"ArrayTypeName","src":"1851:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:12","nodeType":"VariableDeclaration","scope":1994,"src":"2001:36:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1992,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:12","nodeType":"StructDefinition","scope":2596,"src":"1797:247:12","visibility":"public"},{"body":{"id":2035,"nodeType":"Block","src":"2283:335:12","statements":[{"condition":{"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:12","subExpression":{"arguments":[{"id":2006,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2308:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"2313:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2005,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"2298:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2033,"nodeType":"Block","src":"2575:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2004,"id":2032,"nodeType":"Return","src":"2589:12:12"}]},"id":2034,"nodeType":"IfStatement","src":"2293:319:12","trueBody":{"id":2030,"nodeType":"Block","src":"2321:248:12","statements":[{"expression":{"arguments":[{"id":2015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"2352:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2010,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2335:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"2335:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:12","memberName":"push","nodeType":"MemberAccess","src":"2335:16:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2017,"nodeType":"ExpressionStatement","src":"2335:23:12"},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2018,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2493:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1993,"src":"2493:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2022,"indexExpression":{"id":2020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"2506:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2023,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2515:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"2515:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:12","memberName":"length","nodeType":"MemberAccess","src":"2515:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"2493:40:12"},{"expression":{"hexValue":"74727565","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2004,"id":2029,"nodeType":"Return","src":"2547:11:12"}]}}]},"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"2050:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:12","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"set","nameLocation":"2240:3:12","nodeType":"VariableDeclaration","scope":2036,"src":"2228:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1997,"nodeType":"UserDefinedTypeName","pathNode":{"id":1996,"name":"Set","nameLocations":["2228:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"2228:3:12"},"referencedDeclaration":1994,"src":"2228:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"value","nameLocation":"2253:5:12","nodeType":"VariableDeclaration","scope":2036,"src":"2245:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:12"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2036,"src":"2277:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2002,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:12"},"scope":2596,"src":"2214:404:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2119,"nodeType":"Block","src":"2858:1316:12","statements":[{"assignments":[2048],"declarations":[{"constant":false,"id":2048,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:12","nodeType":"VariableDeclaration","scope":2119,"src":"2968:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2053,"initialValue":{"baseExpression":{"expression":{"id":2049,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"2989:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1993,"src":"2989:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2052,"indexExpression":{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"3002:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3023:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2117,"nodeType":"Block","src":"4131:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2046,"id":2116,"nodeType":"Return","src":"4145:12:12"}]},"id":2118,"nodeType":"IfStatement","src":"3019:1149:12","trueBody":{"id":2114,"nodeType":"Block","src":"3040:1085:12","statements":[{"assignments":[2058],"declarations":[{"constant":false,"id":2058,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:12","nodeType":"VariableDeclaration","scope":2114,"src":"3392:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2062,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3416:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:12"},{"assignments":[2064],"declarations":[{"constant":false,"id":2064,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:12","nodeType":"VariableDeclaration","scope":2114,"src":"3444:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2070,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2065,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"3464:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"3464:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:12","memberName":"length","nodeType":"MemberAccess","src":"3464:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"3505:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2072,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"3518:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2098,"nodeType":"IfStatement","src":"3501:398:12","trueBody":{"id":2097,"nodeType":"Block","src":"3533:366:12","statements":[{"assignments":[2075],"declarations":[{"constant":false,"id":2075,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:12","nodeType":"VariableDeclaration","scope":2097,"src":"3551:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2080,"initialValue":{"baseExpression":{"expression":{"id":2076,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"3571:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"3571:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2079,"indexExpression":{"id":2078,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"3583:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:12"},{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2081,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"3693:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"3693:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2085,"indexExpression":{"id":2083,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"3705:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2086,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3722:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2088,"nodeType":"ExpressionStatement","src":"3693:38:12"},{"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2089,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"3805:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1993,"src":"3805:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2093,"indexExpression":{"id":2091,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3818:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2094,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3831:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2096,"nodeType":"ExpressionStatement","src":"3805:36:12"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2099,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"3977:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"3977:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:12","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:12","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2105,"nodeType":"ExpressionStatement","src":"3977:17:12"},{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:12","subExpression":{"baseExpression":{"expression":{"id":2106,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"4069:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1993,"src":"4069:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2109,"indexExpression":{"id":2108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4082:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2111,"nodeType":"ExpressionStatement","src":"4062:26:12"},{"expression":{"hexValue":"74727565","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2046,"id":2113,"nodeType":"Return","src":"4103:11:12"}]}}]},"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"2624:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:12","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"set","nameLocation":"2815:3:12","nodeType":"VariableDeclaration","scope":2120,"src":"2803:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2039,"nodeType":"UserDefinedTypeName","pathNode":{"id":2038,"name":"Set","nameLocations":["2803:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"2803:3:12"},"referencedDeclaration":1994,"src":"2803:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"value","nameLocation":"2828:5:12","nodeType":"VariableDeclaration","scope":2120,"src":"2820:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:12"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"2852:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2044,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:12"},"scope":2596,"src":"2786:1388:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2138,"nodeType":"Block","src":"4334:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2131,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"4351:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1993,"src":"4351:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2134,"indexExpression":{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4364:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2130,"id":2137,"nodeType":"Return","src":"4344:31:12"}]},"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"4180:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:12","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"set","nameLocation":"4286:3:12","nodeType":"VariableDeclaration","scope":2139,"src":"4274:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2123,"nodeType":"UserDefinedTypeName","pathNode":{"id":2122,"name":"Set","nameLocations":["4274:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"4274:3:12"},"referencedDeclaration":1994,"src":"4274:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"value","nameLocation":"4299:5:12","nodeType":"VariableDeclaration","scope":2139,"src":"4291:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:12"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2139,"src":"4328:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2128,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:12"},"scope":2596,"src":"4255:127:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2152,"nodeType":"Block","src":"4528:42:12","statements":[{"expression":{"expression":{"expression":{"id":2148,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"4545:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"4545:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:12","memberName":"length","nodeType":"MemberAccess","src":"4545:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2147,"id":2151,"nodeType":"Return","src":"4538:25:12"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"4388:70:12","text":" @dev Returns the number of values on the set. O(1)."},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:12","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"set","nameLocation":"4492:3:12","nodeType":"VariableDeclaration","scope":2153,"src":"4480:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2142,"nodeType":"UserDefinedTypeName","pathNode":{"id":2141,"name":"Set","nameLocations":["4480:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"4480:3:12"},"referencedDeclaration":1994,"src":"4480:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:12"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"4519:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:12"},"scope":2596,"src":"4463:107:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2169,"nodeType":"Block","src":"4988:42:12","statements":[{"expression":{"baseExpression":{"expression":{"id":2164,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"5005:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"5005:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2167,"indexExpression":{"id":2166,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"5017:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2163,"id":2168,"nodeType":"Return","src":"4998:25:12"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"4576:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2170,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:12","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"set","nameLocation":"4937:3:12","nodeType":"VariableDeclaration","scope":2170,"src":"4925:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"Set","nameLocations":["4925:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"4925:3:12"},"referencedDeclaration":1994,"src":"4925:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"index","nameLocation":"4950:5:12","nodeType":"VariableDeclaration","scope":2170,"src":"4942:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:12"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"4979:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:12"},"scope":2596,"src":"4912:118:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2183,"nodeType":"Block","src":"5644:35:12","statements":[{"expression":{"expression":{"id":2180,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"5661:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1989,"src":"5661:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2179,"id":2182,"nodeType":"Return","src":"5654:18:12"}]},"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"5036:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2184,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:12","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"set","nameLocation":"5599:3:12","nodeType":"VariableDeclaration","scope":2184,"src":"5587:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2173,"nodeType":"UserDefinedTypeName","pathNode":{"id":2172,"name":"Set","nameLocations":["5587:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"5587:3:12"},"referencedDeclaration":1994,"src":"5587:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:12"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2184,"src":"5626:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2177,"nodeType":"ArrayTypeName","src":"5626:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:12"},"scope":2596,"src":"5570:109:12","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":2188,"members":[{"constant":false,"id":2187,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:12","nodeType":"VariableDeclaration","scope":2188,"src":"5732:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2186,"nodeType":"UserDefinedTypeName","pathNode":{"id":2185,"name":"Set","nameLocations":["5732:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"5732:3:12"},"referencedDeclaration":1994,"src":"5732:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:12","nodeType":"StructDefinition","scope":2596,"src":"5704:45:12","visibility":"public"},{"body":{"id":2205,"nodeType":"Block","src":"5995:47:12","statements":[{"expression":{"arguments":[{"expression":{"id":2200,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"6017:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2187,"src":"6017:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"6029:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2199,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6012:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2198,"id":2204,"nodeType":"Return","src":"6005:30:12"}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"5755:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:12","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"set","nameLocation":"5951:3:12","nodeType":"VariableDeclaration","scope":2206,"src":"5932:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2191,"nodeType":"UserDefinedTypeName","pathNode":{"id":2190,"name":"Bytes32Set","nameLocations":["5932:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2188,"src":"5932:10:12"},"referencedDeclaration":2188,"src":"5932:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"value","nameLocation":"5964:5:12","nodeType":"VariableDeclaration","scope":2206,"src":"5956:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:12"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"5989:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2196,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:12"},"scope":2596,"src":"5919:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2223,"nodeType":"Block","src":"6289:50:12","statements":[{"expression":{"arguments":[{"expression":{"id":2218,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"6314:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2187,"src":"6314:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"6326:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2217,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"6306:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2216,"id":2222,"nodeType":"Return","src":"6299:33:12"}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"6048:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:12","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"set","nameLocation":"6245:3:12","nodeType":"VariableDeclaration","scope":2224,"src":"6226:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2209,"nodeType":"UserDefinedTypeName","pathNode":{"id":2208,"name":"Bytes32Set","nameLocations":["6226:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2188,"src":"6226:10:12"},"referencedDeclaration":2188,"src":"6226:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"value","nameLocation":"6258:5:12","nodeType":"VariableDeclaration","scope":2224,"src":"6250:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:12"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2224,"src":"6283:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2214,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:12"},"scope":2596,"src":"6210:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"6506:52:12","statements":[{"expression":{"arguments":[{"expression":{"id":2236,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"6533:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2187,"src":"6533:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"6545:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2235,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"6523:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2234,"id":2240,"nodeType":"Return","src":"6516:35:12"}]},"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"6345:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:12","nodeType":"FunctionDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"set","nameLocation":"6457:3:12","nodeType":"VariableDeclaration","scope":2242,"src":"6438:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2227,"nodeType":"UserDefinedTypeName","pathNode":{"id":2226,"name":"Bytes32Set","nameLocations":["6438:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2188,"src":"6438:10:12"},"referencedDeclaration":2188,"src":"6438:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"value","nameLocation":"6470:5:12","nodeType":"VariableDeclaration","scope":2242,"src":"6462:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:12"},"returnParameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2242,"src":"6500:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2232,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:12"},"scope":2596,"src":"6420:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2256,"nodeType":"Block","src":"6711:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":2252,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"6736:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2187,"src":"6736:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2251,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"6728:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2250,"id":2255,"nodeType":"Return","src":"6721:26:12"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"6564:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:12","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"set","nameLocation":"6674:3:12","nodeType":"VariableDeclaration","scope":2257,"src":"6655:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2245,"nodeType":"UserDefinedTypeName","pathNode":{"id":2244,"name":"Bytes32Set","nameLocations":["6655:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2188,"src":"6655:10:12"},"referencedDeclaration":2188,"src":"6655:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:12"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"6702:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:12"},"scope":2596,"src":"6639:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2274,"nodeType":"Block","src":"7179:46:12","statements":[{"expression":{"arguments":[{"expression":{"id":2269,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"7200:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2187,"src":"7200:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2271,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"7212:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2268,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"7196:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2267,"id":2273,"nodeType":"Return","src":"7189:29:12"}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"6760:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:12","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"set","nameLocation":"7127:3:12","nodeType":"VariableDeclaration","scope":2275,"src":"7108:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2260,"nodeType":"UserDefinedTypeName","pathNode":{"id":2259,"name":"Bytes32Set","nameLocations":["7108:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2188,"src":"7108:10:12"},"referencedDeclaration":2188,"src":"7108:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"index","nameLocation":"7140:5:12","nodeType":"VariableDeclaration","scope":2275,"src":"7132:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:12"},"returnParameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"7170:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:12"},"scope":2596,"src":"7096:129:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2304,"nodeType":"Block","src":"7846:219:12","statements":[{"assignments":[2289],"declarations":[{"constant":false,"id":2289,"mutability":"mutable","name":"store","nameLocation":"7873:5:12","nodeType":"VariableDeclaration","scope":2304,"src":"7856:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2288,"nodeType":"ArrayTypeName","src":"7856:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2294,"initialValue":{"arguments":[{"expression":{"id":2291,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"7889:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2187,"src":"7889:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2290,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"7881:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:12"},{"assignments":[2299],"declarations":[{"constant":false,"id":2299,"mutability":"mutable","name":"result","nameLocation":"7927:6:12","nodeType":"VariableDeclaration","scope":2304,"src":"7910:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2298,"nodeType":"ArrayTypeName","src":"7910:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2300,"nodeType":"VariableDeclarationStatement","src":"7910:23:12"},{"AST":{"nodeType":"YulBlock","src":"7996:39:12","statements":[{"nodeType":"YulAssignment","src":"8010:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2299,"isOffset":false,"isSlot":false,"src":"8010:6:12","valueSize":1},{"declaration":2289,"isOffset":false,"isSlot":false,"src":"8020:5:12","valueSize":1}],"id":2301,"nodeType":"InlineAssembly","src":"7987:48:12"},{"expression":{"id":2302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"8052:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2284,"id":2303,"nodeType":"Return","src":"8045:13:12"}]},"documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"7231:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:12","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"set","nameLocation":"7800:3:12","nodeType":"VariableDeclaration","scope":2305,"src":"7781:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2278,"nodeType":"UserDefinedTypeName","pathNode":{"id":2277,"name":"Bytes32Set","nameLocations":["7781:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2188,"src":"7781:10:12"},"referencedDeclaration":2188,"src":"7781:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2188_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:12"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"7828:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2282,"nodeType":"ArrayTypeName","src":"7828:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:12"},"scope":2596,"src":"7765:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":2309,"members":[{"constant":false,"id":2308,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:12","nodeType":"VariableDeclaration","scope":2309,"src":"8118:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2307,"nodeType":"UserDefinedTypeName","pathNode":{"id":2306,"name":"Set","nameLocations":["8118:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"8118:3:12"},"referencedDeclaration":1994,"src":"8118:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:12","nodeType":"StructDefinition","scope":2596,"src":"8090:45:12","visibility":"public"},{"body":{"id":2335,"nodeType":"Block","src":"8381:74:12","statements":[{"expression":{"arguments":[{"expression":{"id":2321,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"8403:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"8403:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"8439:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2327,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:12","typeDescriptions":{}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:12","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:12","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2320,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"8398:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2319,"id":2334,"nodeType":"Return","src":"8391:57:12"}]},"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"8141:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2336,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:12","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"set","nameLocation":"8337:3:12","nodeType":"VariableDeclaration","scope":2336,"src":"8318:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2312,"nodeType":"UserDefinedTypeName","pathNode":{"id":2311,"name":"AddressSet","nameLocations":["8318:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"8318:10:12"},"referencedDeclaration":2309,"src":"8318:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"value","nameLocation":"8350:5:12","nodeType":"VariableDeclaration","scope":2336,"src":"8342:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:12"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2336,"src":"8375:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2317,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:12"},"scope":2596,"src":"8305:150:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"8702:77:12","statements":[{"expression":{"arguments":[{"expression":{"id":2348,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"8727:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"8727:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"8763:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2354,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:12","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:12","typeDescriptions":{}}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:12","typeDescriptions":{}}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2347,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"8719:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2346,"id":2361,"nodeType":"Return","src":"8712:60:12"}]},"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"8461:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:12","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"set","nameLocation":"8658:3:12","nodeType":"VariableDeclaration","scope":2363,"src":"8639:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2339,"nodeType":"UserDefinedTypeName","pathNode":{"id":2338,"name":"AddressSet","nameLocations":["8639:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"8639:10:12"},"referencedDeclaration":2309,"src":"8639:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"value","nameLocation":"8671:5:12","nodeType":"VariableDeclaration","scope":2363,"src":"8663:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:12"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"8696:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2344,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:12"},"scope":2596,"src":"8623:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2389,"nodeType":"Block","src":"8946:79:12","statements":[{"expression":{"arguments":[{"expression":{"id":2375,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"8973:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"8973:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"9009:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2381,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:12","typeDescriptions":{}}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:12","typeDescriptions":{}}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:12","typeDescriptions":{}}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2374,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"8963:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2373,"id":2388,"nodeType":"Return","src":"8956:62:12"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"8785:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:12","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"set","nameLocation":"8897:3:12","nodeType":"VariableDeclaration","scope":2390,"src":"8878:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2366,"nodeType":"UserDefinedTypeName","pathNode":{"id":2365,"name":"AddressSet","nameLocations":["8878:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"8878:10:12"},"referencedDeclaration":2309,"src":"8878:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"value","nameLocation":"8910:5:12","nodeType":"VariableDeclaration","scope":2390,"src":"8902:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:12"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2390,"src":"8940:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2371,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:12"},"scope":2596,"src":"8860:165:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2404,"nodeType":"Block","src":"9178:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":2400,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"9203:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"9203:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2399,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"9195:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2398,"id":2403,"nodeType":"Return","src":"9188:26:12"}]},"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"9031:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:12","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"set","nameLocation":"9141:3:12","nodeType":"VariableDeclaration","scope":2405,"src":"9122:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2393,"nodeType":"UserDefinedTypeName","pathNode":{"id":2392,"name":"AddressSet","nameLocations":["9122:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"9122:10:12"},"referencedDeclaration":2309,"src":"9122:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:12"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2405,"src":"9169:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:12"},"scope":2596,"src":"9106:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"9646:73:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2423,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"9691:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"9691:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2425,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"9703:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2422,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"9687:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:12","typeDescriptions":{}}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2418,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:12","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:12","typeDescriptions":{}}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2415,"id":2430,"nodeType":"Return","src":"9656:56:12"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"9227:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:12","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"set","nameLocation":"9594:3:12","nodeType":"VariableDeclaration","scope":2432,"src":"9575:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2408,"nodeType":"UserDefinedTypeName","pathNode":{"id":2407,"name":"AddressSet","nameLocations":["9575:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"9575:10:12"},"referencedDeclaration":2309,"src":"9575:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"index","nameLocation":"9607:5:12","nodeType":"VariableDeclaration","scope":2432,"src":"9599:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:12"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2432,"src":"9637:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:12"},"scope":2596,"src":"9563:156:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2461,"nodeType":"Block","src":"10340:219:12","statements":[{"assignments":[2446],"declarations":[{"constant":false,"id":2446,"mutability":"mutable","name":"store","nameLocation":"10367:5:12","nodeType":"VariableDeclaration","scope":2461,"src":"10350:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2445,"nodeType":"ArrayTypeName","src":"10350:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2451,"initialValue":{"arguments":[{"expression":{"id":2448,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"10383:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"10383:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2447,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"10375:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:12"},{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"result","nameLocation":"10421:6:12","nodeType":"VariableDeclaration","scope":2461,"src":"10404:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2455,"nodeType":"ArrayTypeName","src":"10404:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2457,"nodeType":"VariableDeclarationStatement","src":"10404:23:12"},{"AST":{"nodeType":"YulBlock","src":"10490:39:12","statements":[{"nodeType":"YulAssignment","src":"10504:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2456,"isOffset":false,"isSlot":false,"src":"10504:6:12","valueSize":1},{"declaration":2446,"isOffset":false,"isSlot":false,"src":"10514:5:12","valueSize":1}],"id":2458,"nodeType":"InlineAssembly","src":"10481:48:12"},{"expression":{"id":2459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"10546:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2441,"id":2460,"nodeType":"Return","src":"10539:13:12"}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"9725:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2462,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:12","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"set","nameLocation":"10294:3:12","nodeType":"VariableDeclaration","scope":2462,"src":"10275:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2435,"nodeType":"UserDefinedTypeName","pathNode":{"id":2434,"name":"AddressSet","nameLocations":["10275:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"10275:10:12"},"referencedDeclaration":2309,"src":"10275:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2309_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:12"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2462,"src":"10322:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2438,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2439,"nodeType":"ArrayTypeName","src":"10322:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:12"},"scope":2596,"src":"10259:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2466,"members":[{"constant":false,"id":2465,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:12","nodeType":"VariableDeclaration","scope":2466,"src":"10606:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2464,"nodeType":"UserDefinedTypeName","pathNode":{"id":2463,"name":"Set","nameLocations":["10606:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"10606:3:12"},"referencedDeclaration":1994,"src":"10606:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:12","nodeType":"StructDefinition","scope":2596,"src":"10581:42:12","visibility":"public"},{"body":{"id":2486,"nodeType":"Block","src":"10866:56:12","statements":[{"expression":{"arguments":[{"expression":{"id":2478,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"10888:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"10888:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"10908:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:12","typeDescriptions":{}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2477,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"10883:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2476,"id":2485,"nodeType":"Return","src":"10876:39:12"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"10629:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2487,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:12","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"set","nameLocation":"10822:3:12","nodeType":"VariableDeclaration","scope":2487,"src":"10806:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2469,"nodeType":"UserDefinedTypeName","pathNode":{"id":2468,"name":"UintSet","nameLocations":["10806:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"10806:7:12"},"referencedDeclaration":2466,"src":"10806:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"value","nameLocation":"10835:5:12","nodeType":"VariableDeclaration","scope":2487,"src":"10827:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:12"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2487,"src":"10860:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:12"},"scope":2596,"src":"10793:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2507,"nodeType":"Block","src":"11166:59:12","statements":[{"expression":{"arguments":[{"expression":{"id":2499,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"11191:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"11191:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"11211:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:12","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2498,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"11183:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2497,"id":2506,"nodeType":"Return","src":"11176:42:12"}]},"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"10928:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:12","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"set","nameLocation":"11122:3:12","nodeType":"VariableDeclaration","scope":2508,"src":"11106:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2490,"nodeType":"UserDefinedTypeName","pathNode":{"id":2489,"name":"UintSet","nameLocations":["11106:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"11106:7:12"},"referencedDeclaration":2466,"src":"11106:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"value","nameLocation":"11135:5:12","nodeType":"VariableDeclaration","scope":2508,"src":"11127:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:12"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2508,"src":"11160:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2495,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:12"},"scope":2596,"src":"11090:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2528,"nodeType":"Block","src":"11389:61:12","statements":[{"expression":{"arguments":[{"expression":{"id":2520,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"11416:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"11416:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"11436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:12","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2519,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"11406:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2518,"id":2527,"nodeType":"Return","src":"11399:44:12"}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"11231:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":2529,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:12","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"set","nameLocation":"11340:3:12","nodeType":"VariableDeclaration","scope":2529,"src":"11324:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2511,"nodeType":"UserDefinedTypeName","pathNode":{"id":2510,"name":"UintSet","nameLocations":["11324:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"11324:7:12"},"referencedDeclaration":2466,"src":"11324:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"value","nameLocation":"11353:5:12","nodeType":"VariableDeclaration","scope":2529,"src":"11345:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:12"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2529,"src":"11383:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2516,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:12"},"scope":2596,"src":"11306:144:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2543,"nodeType":"Block","src":"11600:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":2539,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"11625:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"11625:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2538,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"11617:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2537,"id":2542,"nodeType":"Return","src":"11610:26:12"}]},"documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"11456:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":2544,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:12","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"set","nameLocation":"11563:3:12","nodeType":"VariableDeclaration","scope":2544,"src":"11547:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2532,"nodeType":"UserDefinedTypeName","pathNode":{"id":2531,"name":"UintSet","nameLocations":["11547:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"11547:7:12"},"referencedDeclaration":2466,"src":"11547:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:12"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2544,"src":"11591:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:12"},"scope":2596,"src":"11531:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2564,"nodeType":"Block","src":"12065:55:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2558,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"12094:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"12094:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2560,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"12106:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2557,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"12090:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:12","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2554,"id":2563,"nodeType":"Return","src":"12075:38:12"}]},"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"11649:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:12","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"set","nameLocation":"12013:3:12","nodeType":"VariableDeclaration","scope":2565,"src":"11997:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2547,"nodeType":"UserDefinedTypeName","pathNode":{"id":2546,"name":"UintSet","nameLocations":["11997:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"11997:7:12"},"referencedDeclaration":2466,"src":"11997:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"index","nameLocation":"12026:5:12","nodeType":"VariableDeclaration","scope":2565,"src":"12018:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:12"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"12056:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:12"},"scope":2596,"src":"11985:135:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2594,"nodeType":"Block","src":"12738:219:12","statements":[{"assignments":[2579],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"store","nameLocation":"12765:5:12","nodeType":"VariableDeclaration","scope":2594,"src":"12748:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2578,"nodeType":"ArrayTypeName","src":"12748:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2584,"initialValue":{"arguments":[{"expression":{"id":2581,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"12781:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"12781:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1994_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2580,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"12773:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1994_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:12"},{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"result","nameLocation":"12819:6:12","nodeType":"VariableDeclaration","scope":2594,"src":"12802:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2588,"nodeType":"ArrayTypeName","src":"12802:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2590,"nodeType":"VariableDeclarationStatement","src":"12802:23:12"},{"AST":{"nodeType":"YulBlock","src":"12888:39:12","statements":[{"nodeType":"YulAssignment","src":"12902:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2589,"isOffset":false,"isSlot":false,"src":"12902:6:12","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"12912:5:12","valueSize":1}],"id":2591,"nodeType":"InlineAssembly","src":"12879:48:12"},{"expression":{"id":2592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"12944:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2574,"id":2593,"nodeType":"Return","src":"12937:13:12"}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"12126:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:12","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"set","nameLocation":"12692:3:12","nodeType":"VariableDeclaration","scope":2595,"src":"12676:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2568,"nodeType":"UserDefinedTypeName","pathNode":{"id":2567,"name":"UintSet","nameLocations":["12676:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"12676:7:12"},"referencedDeclaration":2466,"src":"12676:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2466_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:12"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"12720:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2572,"nodeType":"ArrayTypeName","src":"12720:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:12"},"scope":2596,"src":"12660:297:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2597,"src":"1329:11630:12","usedErrors":[]}],"src":"205:12755:12"},"id":12},"contracts/Notarize.sol":{"ast":{"absolutePath":"contracts/Notarize.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Context":[673],"Counters":[747],"ERC165":[1000],"EnumerableSet":[2596],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[1012],"Math":[1878],"Notarize":[2782],"SignedMath":[1983],"Strings":[976],"docAlreadyRegistered":[2602],"indexNotFound":[2604]},"id":2783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2598,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"33:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":2599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2783,"sourceUnit":748,"src":"60:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","id":2600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2783,"sourceUnit":441,"src":"114:68:13","symbolAliases":[],"unitAlias":""},{"errorSelector":"9e2c2020","id":2602,"name":"docAlreadyRegistered","nameLocation":"192:20:13","nodeType":"ErrorDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[],"src":"212:2:13"},"src":"186:29:13"},{"errorSelector":"22f7b18c","id":2604,"name":"indexNotFound","nameLocation":"223:13:13","nodeType":"ErrorDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"236:2:13"},"src":"217:22:13"},{"abstract":false,"baseContracts":[{"baseName":{"id":2605,"name":"AccessControlEnumerable","nameLocations":["298:23:13"],"nodeType":"IdentifierPath","referencedDeclaration":440,"src":"298:23:13"},"id":2606,"nodeType":"InheritanceSpecifier","src":"298:23:13"}],"canonicalName":"Notarize","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2782,"linearizedBaseContracts":[2782,440,315,1000,1012,538,513,673],"name":"Notarize","nameLocation":"286:8:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2610,"libraryName":{"id":2607,"name":"Counters","nameLocations":["438:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"438:8:13"},"nodeType":"UsingForDirective","src":"432:36:13","typeName":{"id":2609,"nodeType":"UserDefinedTypeName","pathNode":{"id":2608,"name":"Counters.Counter","nameLocations":["451:8:13","460:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":679,"src":"451:16:13"},"referencedDeclaration":679,"src":"451:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":true,"functionSelector":"2220de21","id":2615,"mutability":"constant","name":"HASH_WRITER","nameLocation":"638:11:13","nodeType":"VariableDeclaration","scope":2782,"src":"614:62:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"614:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"484153485f575249544552","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"662:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d6","typeString":"literal_string \"HASH_WRITER\""},"value":"HASH_WRITER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d6","typeString":"literal_string \"HASH_WRITER\""}],"id":2612,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"652:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"652:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":2618,"mutability":"mutable","name":"_docCounter","nameLocation":"710:11:13","nodeType":"VariableDeclaration","scope":2782,"src":"685:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage","typeString":"struct Counters.Counter"},"typeName":{"id":2617,"nodeType":"UserDefinedTypeName","pathNode":{"id":2616,"name":"Counters.Counter","nameLocations":["685:8:13","694:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":679,"src":"685:16:13"},"referencedDeclaration":679,"src":"685:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":2623,"mutability":"mutable","name":"_documents","nameLocation":"760:10:13","nodeType":"VariableDeclaration","scope":2782,"src":"728:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Doc_$2640_storage_$","typeString":"mapping(uint256 => struct Notarize.Doc)"},"typeName":{"id":2622,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"728:23:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Doc_$2640_storage_$","typeString":"mapping(uint256 => struct Notarize.Doc)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2621,"nodeType":"UserDefinedTypeName","pathNode":{"id":2620,"name":"Doc","nameLocations":["747:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"747:3:13"},"referencedDeclaration":2640,"src":"747:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Doc_$2640_storage_ptr","typeString":"struct Notarize.Doc"}}},"visibility":"private"},{"constant":false,"id":2627,"mutability":"mutable","name":"_regHashes","nameLocation":"810:10:13","nodeType":"VariableDeclaration","scope":2782,"src":"777:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":2626,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"785:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"777:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2625,"name":"bool","nodeType":"ElementaryTypeName","src":"796:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"3652677d7cefd12c889b15a7ced31cc0e0d120417a9febcb93eddf8ce7b43f98","id":2635,"name":"DocHashAdded","nameLocation":"835:12:13","nodeType":"EventDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"indexed":true,"mutability":"mutable","name":"docCounter","nameLocation":"874:10:13","nodeType":"VariableDeclaration","scope":2635,"src":"858:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2631,"indexed":false,"mutability":"mutable","name":"docUrl","nameLocation":"902:6:13","nodeType":"VariableDeclaration","scope":2635,"src":"895:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2630,"name":"string","nodeType":"ElementaryTypeName","src":"895:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2633,"indexed":false,"mutability":"mutable","name":"dochash","nameLocation":"927:7:13","nodeType":"VariableDeclaration","scope":2635,"src":"919:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"919:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"847:94:13"},"src":"829:113:13"},{"canonicalName":"Notarize.Doc","id":2640,"members":[{"constant":false,"id":2637,"mutability":"mutable","name":"docUrl","nameLocation":"983:6:13","nodeType":"VariableDeclaration","scope":2640,"src":"976:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"976:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"docHash","nameLocation":"1051:7:13","nodeType":"VariableDeclaration","scope":2640,"src":"1043:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1043:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Doc","nameLocation":"961:3:13","nodeType":"StructDefinition","scope":2782,"src":"954:135:13","visibility":"public"},{"body":{"id":2649,"nodeType":"Block","src":"1111:62:13","statements":[{"expression":{"arguments":[{"id":2644,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1133:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2645,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"1153:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2643,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1122:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1122:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2648,"nodeType":"ExpressionStatement","src":"1122:44:13"}]},"id":2650,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2641,"nodeType":"ParameterList","parameters":[],"src":"1108:2:13"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[],"src":"1111:0:13"},"scope":2782,"src":"1097:76:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2663,"nodeType":"Block","src":"1283:54:13","statements":[{"expression":{"arguments":[{"id":2659,"name":"HASH_WRITER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"1304:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2660,"name":"_hashWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"1317:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2658,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"1294:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1294:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"ExpressionStatement","src":"1294:35:13"}]},"functionSelector":"b46beb4f","id":2664,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2655,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1263:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2656,"kind":"modifierInvocation","modifierName":{"id":2654,"name":"onlyRole","nameLocations":["1254:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1254:8:13"},"nodeType":"ModifierInvocation","src":"1254:28:13"}],"name":"setHashWriterRole","nameLocation":"1190:17:13","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"_hashWriter","nameLocation":"1226:11:13","nodeType":"VariableDeclaration","scope":2664,"src":"1218:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1207:37:13"},"returnParameters":{"id":2657,"nodeType":"ParameterList","parameters":[],"src":"1283:0:13"},"scope":2782,"src":"1181:156:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2677,"nodeType":"Block","src":"1433:54:13","statements":[{"expression":{"arguments":[{"id":2673,"name":"HASH_WRITER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"1455:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2674,"name":"_hashWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1467:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2672,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"1444:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2676,"nodeType":"ExpressionStatement","src":"1444:35:13"}]},"functionSelector":"efcd473c","id":2678,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2669,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1413:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2670,"kind":"modifierInvocation","modifierName":{"id":2668,"name":"onlyRole","nameLocations":["1403:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1403:8:13"},"nodeType":"ModifierInvocation","src":"1403:29:13"}],"name":"removeHashWriterRole","nameLocation":"1352:20:13","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"_hashWriter","nameLocation":"1381:11:13","nodeType":"VariableDeclaration","scope":2678,"src":"1373:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1372:21:13"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[],"src":"1433:0:13"},"scope":2782,"src":"1343:144:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2728,"nodeType":"Block","src":"1610:332:13","statements":[{"condition":{"baseExpression":{"id":2688,"name":"_regHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"1624:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2690,"indexExpression":{"id":2689,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1635:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1624:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2695,"nodeType":"IfStatement","src":"1621:77:13","trueBody":{"id":2694,"nodeType":"Block","src":"1642:56:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2691,"name":"docAlreadyRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1664:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"RevertStatement","src":"1657:29:13"}]}},{"assignments":[2697],"declarations":[{"constant":false,"id":2697,"mutability":"mutable","name":"counter","nameLocation":"1716:7:13","nodeType":"VariableDeclaration","scope":2728,"src":"1708:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2701,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2698,"name":"_docCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1726:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage","typeString":"struct Counters.Counter storage ref"}},"id":2699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1738:7:13","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":691,"src":"1726:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$679_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$679_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1726:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1708:39:13"},{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2702,"name":"_documents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1758:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Doc_$2640_storage_$","typeString":"mapping(uint256 => struct Notarize.Doc storage ref)"}},"id":2704,"indexExpression":{"id":2703,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"1769:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1758:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Doc_$2640_storage","typeString":"struct Notarize.Doc storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2706,"name":"_url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1793:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2707,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1808:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2705,"name":"Doc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"1780:3:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Doc_$2640_storage_ptr_$","typeString":"type(struct Notarize.Doc storage pointer)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1785:6:13","1799:7:13"],"names":["docUrl","docHash"],"nodeType":"FunctionCall","src":"1780:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Doc_$2640_memory_ptr","typeString":"struct Notarize.Doc memory"}},"src":"1758:57:13","typeDescriptions":{"typeIdentifier":"t_struct$_Doc_$2640_storage","typeString":"struct Notarize.Doc storage ref"}},"id":2710,"nodeType":"ExpressionStatement","src":"1758:57:13"},{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2711,"name":"_regHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"1826:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2713,"indexExpression":{"id":2712,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1837:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1826:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1846:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1826:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2716,"nodeType":"ExpressionStatement","src":"1826:24:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2717,"name":"_docCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"1861:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage","typeString":"struct Counters.Counter storage ref"}},"id":2719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1873:9:13","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":705,"src":"1861:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$679_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$679_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1861:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"ExpressionStatement","src":"1861:23:13"},{"eventCall":{"arguments":[{"id":2723,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"1913:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2724,"name":"_url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1922:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2725,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1928:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2722,"name":"DocHashAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"1900:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_bytes32_$returns$__$","typeString":"function (uint256,string memory,bytes32)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1900:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2727,"nodeType":"EmitStatement","src":"1895:39:13"}]},"functionSelector":"abb0688f","id":2729,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2685,"name":"HASH_WRITER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"1597:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2686,"kind":"modifierInvocation","modifierName":{"id":2684,"name":"onlyRole","nameLocations":["1588:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1588:8:13"},"nodeType":"ModifierInvocation","src":"1588:21:13"}],"name":"addNewDocument","nameLocation":"1504:14:13","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"_url","nameLocation":"1543:4:13","nodeType":"VariableDeclaration","scope":2729,"src":"1529:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2679,"name":"string","nodeType":"ElementaryTypeName","src":"1529:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"_hash","nameLocation":"1566:5:13","nodeType":"VariableDeclaration","scope":2729,"src":"1558:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1558:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1518:60:13"},"returnParameters":{"id":2687,"nodeType":"ParameterList","parameters":[],"src":"1610:0:13"},"scope":2782,"src":"1495:447:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2758,"nodeType":"Block","src":"2047:168:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"_num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"2061:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2739,"name":"_docCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"2068:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage","typeString":"struct Counters.Counter storage ref"}},"id":2740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2080:7:13","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":691,"src":"2068:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$679_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$679_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"nodeType":"IfStatement","src":"2058:81:13","trueBody":{"id":2746,"nodeType":"Block","src":"2090:49:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2743,"name":"indexNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"2112:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2112:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2745,"nodeType":"RevertStatement","src":"2105:22:13"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":2748,"name":"_documents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2157:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Doc_$2640_storage_$","typeString":"mapping(uint256 => struct Notarize.Doc storage ref)"}},"id":2750,"indexExpression":{"id":2749,"name":"_num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"2168:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2157:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Doc_$2640_storage","typeString":"struct Notarize.Doc storage ref"}},"id":2751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2174:6:13","memberName":"docUrl","nodeType":"MemberAccess","referencedDeclaration":2637,"src":"2157:23:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"baseExpression":{"id":2752,"name":"_documents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2182:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Doc_$2640_storage_$","typeString":"mapping(uint256 => struct Notarize.Doc storage ref)"}},"id":2754,"indexExpression":{"id":2753,"name":"_num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"2193:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2182:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Doc_$2640_storage","typeString":"struct Notarize.Doc storage ref"}},"id":2755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2199:7:13","memberName":"docHash","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"2182:24:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2156:51:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_bytes32_$","typeString":"tuple(string storage ref,bytes32)"}},"functionReturnParameters":2737,"id":2757,"nodeType":"Return","src":"2149:58:13"}]},"functionSelector":"6138fede","id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"getDocInfo","nameLocation":"1959:10:13","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"_num","nameLocation":"1988:4:13","nodeType":"VariableDeclaration","scope":2759,"src":"1980:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1980:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1969:30:13"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"2023:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2733,"name":"string","nodeType":"ElementaryTypeName","src":"2023:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"2038:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2038:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2022:24:13"},"scope":2782,"src":"1950:265:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2768,"nodeType":"Block","src":"2279:47:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2764,"name":"_docCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"2297:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$679_storage","typeString":"struct Counters.Counter storage ref"}},"id":2765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2309:7:13","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":691,"src":"2297:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$679_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$679_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2763,"id":2767,"nodeType":"Return","src":"2290:28:13"}]},"functionSelector":"9e8cb6bd","id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"getDocsCount","nameLocation":"2232:12:13","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"2244:2:13"},"returnParameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2769,"src":"2270:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2269:9:13"},"scope":2782,"src":"2223:103:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2780,"nodeType":"Block","src":"2405:43:13","statements":[{"expression":{"baseExpression":{"id":2776,"name":"_regHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"2423:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2778,"indexExpression":{"id":2777,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"2434:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2423:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2775,"id":2779,"nodeType":"Return","src":"2416:24:13"}]},"functionSelector":"34efe036","id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"getRegisteredHash","nameLocation":"2343:17:13","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"_hash","nameLocation":"2369:5:13","nodeType":"VariableDeclaration","scope":2781,"src":"2361:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2360:15:13"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"2399:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2773,"name":"bool","nodeType":"ElementaryTypeName","src":"2399:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:6:13"},"scope":2782,"src":"2334:114:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2783,"src":"277:2174:13","usedErrors":[2602,2604]}],"src":"33:2420:13"},"id":13},"contracts/VotingContract .sol":{"ast":{"absolutePath":"contracts/VotingContract .sol","exportedSymbols":{"Context":[673],"DonationVault":[3226],"Ownable":[651],"VotingContract":[3186],"amountZero":[2798],"ethNotSent":[2804],"notEnoughValue":[3191],"proposalNotPending":[2802],"proposalNotValid":[2800],"timeElapsed":[2788],"timeNotElapsed":[2790],"voted":[2794],"votingClosed":[2792],"votingNotClosed":[2796]},"id":3187,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2784,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:14"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3187,"sourceUnit":652,"src":"64:52:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/DonationVault.sol","file":"./utils/DonationVault.sol","id":2786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3187,"sourceUnit":3227,"src":"117:35:14","symbolAliases":[],"unitAlias":""},{"errorSelector":"dc2cf3f5","id":2788,"name":"timeElapsed","nameLocation":"207:11:14","nodeType":"ErrorDefinition","parameters":{"id":2787,"nodeType":"ParameterList","parameters":[],"src":"218:2:14"},"src":"201:20:14"},{"errorSelector":"851f0715","id":2790,"name":"timeNotElapsed","nameLocation":"228:14:14","nodeType":"ErrorDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[],"src":"242:2:14"},"src":"222:23:14"},{"errorSelector":"2479ecb8","id":2792,"name":"votingClosed","nameLocation":"252:12:14","nodeType":"ErrorDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[],"src":"264:2:14"},"src":"246:21:14"},{"errorSelector":"3500f91e","id":2794,"name":"voted","nameLocation":"274:5:14","nodeType":"ErrorDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[],"src":"279:2:14"},"src":"268:14:14"},{"errorSelector":"c9c6a7d8","id":2796,"name":"votingNotClosed","nameLocation":"289:15:14","nodeType":"ErrorDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[],"src":"304:2:14"},"src":"283:24:14"},{"errorSelector":"bcb27c3e","id":2798,"name":"amountZero","nameLocation":"314:10:14","nodeType":"ErrorDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[],"src":"324:2:14"},"src":"308:19:14"},{"errorSelector":"f87f8f62","id":2800,"name":"proposalNotValid","nameLocation":"334:16:14","nodeType":"ErrorDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"350:2:14"},"src":"328:25:14"},{"errorSelector":"f751eebe","id":2802,"name":"proposalNotPending","nameLocation":"360:18:14","nodeType":"ErrorDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[],"src":"378:2:14"},"src":"354:27:14"},{"errorSelector":"043deed5","id":2804,"name":"ethNotSent","nameLocation":"388:10:14","nodeType":"ErrorDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[],"src":"398:2:14"},"src":"382:19:14"},{"abstract":false,"baseContracts":[{"baseName":{"id":2805,"name":"Ownable","nameLocations":["455:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"455:7:14"},"id":2806,"nodeType":"InheritanceSpecifier","src":"455:7:14"}],"canonicalName":"VotingContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3186,"linearizedBaseContracts":[3186,651,673],"name":"VotingContract","nameLocation":"437:14:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1ea736e0","id":2808,"mutability":"mutable","name":"votingEndTime","nameLocation":"484:13:14","nodeType":"VariableDeclaration","scope":3186,"src":"469:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"469:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7d2f7190","id":2810,"mutability":"mutable","name":"donationGoal","nameLocation":"518:12:14","nodeType":"VariableDeclaration","scope":3186,"src":"503:27:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4bed6c23","id":2812,"mutability":"mutable","name":"donationAmount","nameLocation":"551:14:14","nodeType":"VariableDeclaration","scope":3186,"src":"536:29:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"536:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"45825c58","id":2814,"mutability":"mutable","name":"isVotingClosed","nameLocation":"583:14:14","nodeType":"VariableDeclaration","scope":3186,"src":"571:26:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2813,"name":"bool","nodeType":"ElementaryTypeName","src":"571:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"c64963c5","id":2816,"mutability":"mutable","name":"winningProposalId","nameLocation":"618:17:14","nodeType":"VariableDeclaration","scope":3186,"src":"603:32:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3f1b4081","id":2818,"mutability":"mutable","name":"winningProposalVotes","nameLocation":"656:20:14","nodeType":"VariableDeclaration","scope":3186,"src":"641:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"0a9f46ad","id":2820,"mutability":"mutable","name":"proposalsCount","nameLocation":"697:14:14","nodeType":"VariableDeclaration","scope":3186,"src":"682:29:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":2822,"mutability":"mutable","name":"vaultAddress","nameLocation":"733:12:14","nodeType":"VariableDeclaration","scope":3186,"src":"717:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"717:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"canonicalName":"VotingContract.Proposal","id":2827,"members":[{"constant":false,"id":2824,"mutability":"mutable","name":"name","nameLocation":"786:4:14","nodeType":"VariableDeclaration","scope":2827,"src":"778:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"778:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"weidhtedVotes","nameLocation":"808:13:14","nodeType":"VariableDeclaration","scope":2827,"src":"800:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"800:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"759:8:14","nodeType":"StructDefinition","scope":3186,"src":"752:76:14","visibility":"public"},{"canonicalName":"VotingContract.Voter","id":2834,"members":[{"constant":false,"id":2829,"mutability":"mutable","name":"vote","nameLocation":"862:4:14","nodeType":"VariableDeclaration","scope":2834,"src":"857:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint","nodeType":"ElementaryTypeName","src":"857:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"weightVote","nameLocation":"884:10:14","nodeType":"VariableDeclaration","scope":2834,"src":"876:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"876:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"voted","nameLocation":"909:5:14","nodeType":"VariableDeclaration","scope":2834,"src":"904:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2832,"name":"bool","nodeType":"ElementaryTypeName","src":"904:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Voter","nameLocation":"841:5:14","nodeType":"StructDefinition","scope":3186,"src":"834:87:14","visibility":"public"},{"constant":false,"functionSelector":"013cf08b","id":2839,"mutability":"mutable","name":"proposals","nameLocation":"963:9:14","nodeType":"VariableDeclaration","scope":3186,"src":"927:45:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$2827_storage_$","typeString":"mapping(uint256 => struct VotingContract.Proposal)"},"typeName":{"id":2838,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"927:28:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$2827_storage_$","typeString":"mapping(uint256 => struct VotingContract.Proposal)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2837,"nodeType":"UserDefinedTypeName","pathNode":{"id":2836,"name":"Proposal","nameLocations":["946:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2827,"src":"946:8:14"},"referencedDeclaration":2827,"src":"946:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_storage_ptr","typeString":"struct VotingContract.Proposal"}}},"visibility":"public"},{"constant":false,"functionSelector":"a3ec138d","id":2844,"mutability":"mutable","name":"voters","nameLocation":"1011:6:14","nodeType":"VariableDeclaration","scope":3186,"src":"978:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$2834_storage_$","typeString":"mapping(address => struct VotingContract.Voter)"},"typeName":{"id":2843,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"986:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"978:25:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$2834_storage_$","typeString":"mapping(address => struct VotingContract.Voter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2842,"nodeType":"UserDefinedTypeName","pathNode":{"id":2841,"name":"Voter","nameLocations":["997:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":2834,"src":"997:5:14"},"referencedDeclaration":2834,"src":"997:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2834_storage_ptr","typeString":"struct VotingContract.Voter"}}},"visibility":"public"},{"body":{"id":2856,"nodeType":"Block","src":"1115:109:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2846,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1129:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1135:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"1129:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2848,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"1147:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1129:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"nodeType":"IfStatement","src":"1125:82:14","trueBody":{"id":2853,"nodeType":"Block","src":"1162:45:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2850,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1183:11:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2852,"nodeType":"RevertStatement","src":"1176:20:14"}]}},{"id":2855,"nodeType":"PlaceholderStatement","src":"1216:1:14"}]},"id":2857,"name":"onlyDuringVotingPeriod","nameLocation":"1090:22:14","nodeType":"ModifierDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[],"src":"1112:2:14"},"src":"1081:143:14","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"1311:96:14","statements":[{"condition":{"expression":{"baseExpression":{"id":2859,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"1325:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$2834_storage_$","typeString":"mapping(address => struct VotingContract.Voter storage ref)"}},"id":2862,"indexExpression":{"expression":{"id":2860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1332:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1336:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1332:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1325:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2834_storage","typeString":"struct VotingContract.Voter storage ref"}},"id":2863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1344:5:14","memberName":"voted","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"1325:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2868,"nodeType":"IfStatement","src":"1321:69:14","trueBody":{"id":2867,"nodeType":"Block","src":"1351:39:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2864,"name":"voted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"1372:5:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2866,"nodeType":"RevertStatement","src":"1365:14:14"}]}},{"id":2869,"nodeType":"PlaceholderStatement","src":"1399:1:14"}]},"id":2871,"name":"onlyNewVoter","nameLocation":"1296:12:14","nodeType":"ModifierDefinition","parameters":{"id":2858,"nodeType":"ParameterList","parameters":[],"src":"1308:2:14"},"src":"1287:120:14","virtual":false,"visibility":"internal"},{"body":{"id":2880,"nodeType":"Block","src":"1485:93:14","statements":[{"condition":{"id":2873,"name":"isVotingClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"1499:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2878,"nodeType":"IfStatement","src":"1495:66:14","trueBody":{"id":2877,"nodeType":"Block","src":"1515:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2874,"name":"votingClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"1536:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2876,"nodeType":"RevertStatement","src":"1529:21:14"}]}},{"id":2879,"nodeType":"PlaceholderStatement","src":"1570:1:14"}]},"id":2881,"name":"onlyIfVotingOpen","nameLocation":"1466:16:14","nodeType":"ModifierDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[],"src":"1482:2:14"},"src":"1457:121:14","virtual":false,"visibility":"internal"},{"body":{"id":2893,"nodeType":"Block","src":"1657:91:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1671:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1675:5:14","memberName":"value","nodeType":"MemberAccess","src":"1671:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1684:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1671:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"nodeType":"IfStatement","src":"1667:64:14","trueBody":{"id":2890,"nodeType":"Block","src":"1687:44:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2887,"name":"amountZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"1708:10:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1708:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"RevertStatement","src":"1701:19:14"}]}},{"id":2892,"nodeType":"PlaceholderStatement","src":"1740:1:14"}]},"id":2894,"name":"donationRequired","nameLocation":"1638:16:14","nodeType":"ModifierDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[],"src":"1654:2:14"},"src":"1629:119:14","virtual":false,"visibility":"internal"},{"anonymous":false,"eventSelector":"10a412bf229fbac2408912cb271b8ff9eb39eb72da91dd0c8accab0fb1011135","id":2900,"name":"Vote","nameLocation":"1760:4:14","nodeType":"EventDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"indexed":true,"mutability":"mutable","name":"proposalId","nameLocation":"1781:10:14","nodeType":"VariableDeclaration","scope":2900,"src":"1765:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1765:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2898,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1809:5:14","nodeType":"VariableDeclaration","scope":2900,"src":"1793:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"1793:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1764:51:14"},"src":"1754:62:14"},{"anonymous":false,"eventSelector":"aff28777f2409f4b37134d80d0e47af000be7515d291c576b1412337f3eeb653","id":2906,"name":"VotingClosed","nameLocation":"1827:12:14","nodeType":"EventDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"indexed":false,"mutability":"mutable","name":"winningProposalId","nameLocation":"1848:17:14","nodeType":"VariableDeclaration","scope":2906,"src":"1840:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1840:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2904,"indexed":false,"mutability":"mutable","name":"winningProposalVotes","nameLocation":"1875:20:14","nodeType":"VariableDeclaration","scope":2906,"src":"1867:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1839:57:14"},"src":"1821:76:14"},{"body":{"id":2968,"nodeType":"Block","src":"2063:368:14","statements":[{"expression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2918,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"2073:12:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2919,"name":"_vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"2088:13:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2073:28:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2921,"nodeType":"ExpressionStatement","src":"2073:28:14"},{"expression":{"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2922,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2111:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2923,"name":"_votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2127:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2924,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2142:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2148:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"2142:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2127:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2111:46:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2928,"nodeType":"ExpressionStatement","src":"2111:46:14"},{"expression":{"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2929,"name":"donationGoal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2167:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2930,"name":"_donationGoal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2182:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2167:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2932,"nodeType":"ExpressionStatement","src":"2167:28:14"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2933,"name":"isVotingClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"2205:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2222:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2205:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2936,"nodeType":"ExpressionStatement","src":"2205:22:14"},{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"proposalsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"2237:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2254:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2237:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"2237:18:14"},{"body":{"id":2966,"nodeType":"Block","src":"2313:112:14","statements":[{"expression":{"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2327:16:14","subExpression":{"id":2952,"name":"proposalsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"2327:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2954,"nodeType":"ExpressionStatement","src":"2327:16:14"},{"expression":{"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2955,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"2357:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$2827_storage_$","typeString":"mapping(uint256 => struct VotingContract.Proposal storage ref)"}},"id":2957,"indexExpression":{"id":2956,"name":"proposalsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"2367:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2357:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2959,"name":"proposalNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"2394:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2961,"indexExpression":{"id":2960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"2408:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2394:16:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2412:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2958,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"2385:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$2827_storage_ptr_$","typeString":"type(struct VotingContract.Proposal storage pointer)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2385:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_memory_ptr","typeString":"struct VotingContract.Proposal memory"}},"src":"2357:57:14","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_storage","typeString":"struct VotingContract.Proposal storage ref"}},"id":2965,"nodeType":"ExpressionStatement","src":"2357:57:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"2282:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2946,"name":"proposalNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"2286:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2300:6:14","memberName":"length","nodeType":"MemberAccess","src":"2286:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2282:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2967,"initializationExpression":{"assignments":[2942],"declarations":[{"constant":false,"id":2942,"mutability":"mutable","name":"i","nameLocation":"2275:1:14","nodeType":"VariableDeclaration","scope":2967,"src":"2270:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint","nodeType":"ElementaryTypeName","src":"2270:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2944,"initialValue":{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2279:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2270:10:14"},"loopExpression":{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2308:3:14","subExpression":{"id":2949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"2308:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"2308:3:14"},"nodeType":"ForStatement","src":"2265:160:14"}]},"id":2969,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"_vaultAddress","nameLocation":"1940:13:14","nodeType":"VariableDeclaration","scope":2969,"src":"1924:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"1924:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2910,"mutability":"mutable","name":"_votingEndTime","nameLocation":"1971:14:14","nodeType":"VariableDeclaration","scope":2969,"src":"1963:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1963:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"_donationGoal","nameLocation":"2003:13:14","nodeType":"VariableDeclaration","scope":2969,"src":"1995:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"proposalNames","nameLocation":"2043:13:14","nodeType":"VariableDeclaration","scope":2969,"src":"2026:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2026:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2914,"nodeType":"ArrayTypeName","src":"2026:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1914:148:14"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[],"src":"2063:0:14"},"scope":3186,"src":"1903:528:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2990,"nodeType":"Block","src":"2551:88:14","statements":[{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2561:16:14","subExpression":{"id":2978,"name":"proposalsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"2561:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"2561:16:14"},{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2981,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"2587:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$2827_storage_$","typeString":"mapping(uint256 => struct VotingContract.Proposal storage ref)"}},"id":2983,"indexExpression":{"id":2982,"name":"proposalsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"2597:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2587:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_storage","typeString":"struct VotingContract.Proposal storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2985,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2624:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2630:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2984,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"2615:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$2827_storage_ptr_$","typeString":"type(struct VotingContract.Proposal storage pointer)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2615:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_memory_ptr","typeString":"struct VotingContract.Proposal memory"}},"src":"2587:45:14","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_storage","typeString":"struct VotingContract.Proposal storage ref"}},"id":2989,"nodeType":"ExpressionStatement","src":"2587:45:14"}]},"functionSelector":"06efe3b0","id":2991,"implemented":true,"kind":"function","modifiers":[{"id":2974,"kind":"modifierInvocation","modifierName":{"id":2973,"name":"onlyOwner","nameLocations":["2524:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"2524:9:14"},"nodeType":"ModifierInvocation","src":"2524:9:14"},{"id":2976,"kind":"modifierInvocation","modifierName":{"id":2975,"name":"onlyIfVotingOpen","nameLocations":["2534:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":2881,"src":"2534:16:14"},"nodeType":"ModifierInvocation","src":"2534:16:14"}],"name":"addProposal","nameLocation":"2489:11:14","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"name","nameLocation":"2509:4:14","nodeType":"VariableDeclaration","scope":2991,"src":"2501:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2501:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2500:14:14"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[],"src":"2551:0:14"},"scope":3186,"src":"2480:159:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3064,"nodeType":"Block","src":"2895:596:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2928:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2942:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2928:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3011,"nodeType":"IfStatement","src":"2924:71:14","trueBody":{"id":3010,"nodeType":"Block","src":"2945:50:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3007,"name":"proposalNotValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"2966:16:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2966:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3009,"nodeType":"RevertStatement","src":"2959:25:14"}]}},{"assignments":[3013],"declarations":[{"constant":false,"id":3013,"mutability":"mutable","name":"_amount","nameLocation":"3034:7:14","nodeType":"VariableDeclaration","scope":3064,"src":"3029:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint","nodeType":"ElementaryTypeName","src":"3029:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3016,"initialValue":{"expression":{"id":3014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3044:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3048:5:14","memberName":"value","nodeType":"MemberAccess","src":"3044:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3029:24:14"},{"expression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3017,"name":"donationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"3063:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3018,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3081:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3063:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3020,"nodeType":"ExpressionStatement","src":"3063:25:14"},{"expression":{"arguments":[{"id":3022,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3108:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3021,"name":"moveFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"3098:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3024,"nodeType":"ExpressionStatement","src":"3098:18:14"},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"voter","nameLocation":"3168:5:14","nodeType":"VariableDeclaration","scope":3064,"src":"3154:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2834_storage_ptr","typeString":"struct VotingContract.Voter"},"typeName":{"id":3026,"nodeType":"UserDefinedTypeName","pathNode":{"id":3025,"name":"Voter","nameLocations":["3154:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":2834,"src":"3154:5:14"},"referencedDeclaration":2834,"src":"3154:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2834_storage_ptr","typeString":"struct VotingContract.Voter"}},"visibility":"internal"}],"id":3032,"initialValue":{"baseExpression":{"id":3028,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"3176:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$2834_storage_$","typeString":"mapping(address => struct VotingContract.Voter storage ref)"}},"id":3031,"indexExpression":{"expression":{"id":3029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3183:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3187:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3183:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3176:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2834_storage","typeString":"struct VotingContract.Voter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3154:40:14"},{"expression":{"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3033,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3204:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2834_storage_ptr","typeString":"struct VotingContract.Voter storage pointer"}},"id":3035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3210:4:14","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":2829,"src":"3204:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3036,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"3217:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3204:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3038,"nodeType":"ExpressionStatement","src":"3204:23:14"},{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3039,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3237:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2834_storage_ptr","typeString":"struct VotingContract.Voter storage pointer"}},"id":3041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3243:10:14","memberName":"weightVote","nodeType":"MemberAccess","referencedDeclaration":2831,"src":"3237:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3042,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3237:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3044,"nodeType":"ExpressionStatement","src":"3237:26:14"},{"expression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3045,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3273:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$2834_storage_ptr","typeString":"struct VotingContract.Voter storage pointer"}},"id":3047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3279:5:14","memberName":"voted","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"3273:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3287:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3273:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3050,"nodeType":"ExpressionStatement","src":"3273:18:14"},{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3051,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3371:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$2827_storage_$","typeString":"mapping(uint256 => struct VotingContract.Proposal storage ref)"}},"id":3053,"indexExpression":{"id":3052,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"3381:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3371:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_storage","typeString":"struct VotingContract.Proposal storage ref"}},"id":3054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3393:13:14","memberName":"weidhtedVotes","nodeType":"MemberAccess","referencedDeclaration":2826,"src":"3371:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3055,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3371:46:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"3371:46:14"},{"eventCall":{"arguments":[{"id":3059,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"3461:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3060,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3473:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3477:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3473:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3058,"name":"Vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3456:4:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3456:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3063,"nodeType":"EmitStatement","src":"3451:33:14"}]},"functionSelector":"0121b93f","id":3065,"implemented":true,"kind":"function","modifiers":[{"id":2996,"kind":"modifierInvocation","modifierName":{"id":2995,"name":"onlyDuringVotingPeriod","nameLocations":["2797:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":2857,"src":"2797:22:14"},"nodeType":"ModifierInvocation","src":"2797:22:14"},{"id":2998,"kind":"modifierInvocation","modifierName":{"id":2997,"name":"onlyIfVotingOpen","nameLocations":["2828:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":2881,"src":"2828:16:14"},"nodeType":"ModifierInvocation","src":"2828:16:14"},{"id":3000,"kind":"modifierInvocation","modifierName":{"id":2999,"name":"donationRequired","nameLocations":["2853:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"2853:16:14"},"nodeType":"ModifierInvocation","src":"2853:16:14"},{"id":3002,"kind":"modifierInvocation","modifierName":{"id":3001,"name":"onlyNewVoter","nameLocations":["2878:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"2878:12:14"},"nodeType":"ModifierInvocation","src":"2878:12:14"}],"name":"vote","nameLocation":"2717:4:14","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"proposalId","nameLocation":"2739:10:14","nodeType":"VariableDeclaration","scope":3065,"src":"2731:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"2731:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2721:34:14"},"returnParameters":{"id":3003,"nodeType":"ParameterList","parameters":[],"src":"2895:0:14"},"scope":3186,"src":"2708:783:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3091,"nodeType":"Block","src":"3577:232:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3070,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3591:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3597:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"3591:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3072,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3610:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3591:32:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3078,"nodeType":"IfStatement","src":"3587:86:14","trueBody":{"id":3077,"nodeType":"Block","src":"3625:48:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3074,"name":"timeNotElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"3646:14:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3646:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3076,"nodeType":"RevertStatement","src":"3639:23:14"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3079,"name":"findWinningProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"3682:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3682:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3081,"nodeType":"ExpressionStatement","src":"3682:21:14"},{"expression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3082,"name":"isVotingClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"3713:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3730:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3713:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3085,"nodeType":"ExpressionStatement","src":"3713:21:14"},{"eventCall":{"arguments":[{"id":3087,"name":"winningProposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"3762:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3088,"name":"winningProposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"3781:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3086,"name":"VotingClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"3749:12:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3749:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3090,"nodeType":"EmitStatement","src":"3744:58:14"}]},"functionSelector":"c631b292","id":3092,"implemented":true,"kind":"function","modifiers":[{"id":3068,"kind":"modifierInvocation","modifierName":{"id":3067,"name":"onlyOwner","nameLocations":["3567:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"3567:9:14"},"nodeType":"ModifierInvocation","src":"3567:9:14"}],"name":"closeVoting","nameLocation":"3544:11:14","nodeType":"FunctionDefinition","parameters":{"id":3066,"nodeType":"ParameterList","parameters":[],"src":"3555:2:14"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[],"src":"3577:0:14"},"scope":3186,"src":"3535:274:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3134,"nodeType":"Block","src":"3895:317:14","statements":[{"assignments":[3096],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"maxVotes","nameLocation":"3913:8:14","nodeType":"VariableDeclaration","scope":3134,"src":"3905:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"3905:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3098,"initialValue":{"hexValue":"30","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3924:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3905:20:14"},{"body":{"id":3132,"nodeType":"Block","src":"3981:225:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3109,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3999:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$2827_storage_$","typeString":"mapping(uint256 => struct VotingContract.Proposal storage ref)"}},"id":3111,"indexExpression":{"id":3110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"4009:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3999:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_storage","typeString":"struct VotingContract.Proposal storage ref"}},"id":3112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4012:13:14","memberName":"weidhtedVotes","nodeType":"MemberAccess","referencedDeclaration":2826,"src":"3999:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3113,"name":"maxVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"4028:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3999:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"nodeType":"IfStatement","src":"3995:201:14","trueBody":{"id":3130,"nodeType":"Block","src":"4038:158:14","statements":[{"expression":{"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3115,"name":"maxVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"4056:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3116,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"4067:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Proposal_$2827_storage_$","typeString":"mapping(uint256 => struct VotingContract.Proposal storage ref)"}},"id":3118,"indexExpression":{"id":3117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"4077:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4067:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$2827_storage","typeString":"struct VotingContract.Proposal storage ref"}},"id":3119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:13:14","memberName":"weidhtedVotes","nodeType":"MemberAccess","referencedDeclaration":2826,"src":"4067:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4056:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3121,"nodeType":"ExpressionStatement","src":"4056:37:14"},{"expression":{"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3122,"name":"winningProposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"4111:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"4131:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4111:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3125,"nodeType":"ExpressionStatement","src":"4111:21:14"},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"winningProposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"4150:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3127,"name":"maxVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"4173:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4150:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"4150:31:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"3955:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3104,"name":"proposalsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"3960:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3955:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3133,"initializationExpression":{"assignments":[3100],"declarations":[{"constant":false,"id":3100,"mutability":"mutable","name":"i","nameLocation":"3948:1:14","nodeType":"VariableDeclaration","scope":3133,"src":"3940:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"3940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3102,"initialValue":{"hexValue":"31","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3940:13:14"},"loopExpression":{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3976:3:14","subExpression":{"id":3106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"3976:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3108,"nodeType":"ExpressionStatement","src":"3976:3:14"},"nodeType":"ForStatement","src":"3935:271:14"}]},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"findWinningProposal","nameLocation":"3864:19:14","nodeType":"FunctionDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[],"src":"3883:2:14"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[],"src":"3895:0:14"},"scope":3186,"src":"3855:357:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"4358:144:14","statements":[{"condition":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4372:15:14","subExpression":{"id":3144,"name":"isVotingClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"4373:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"nodeType":"IfStatement","src":"4368:70:14","trueBody":{"id":3149,"nodeType":"Block","src":"4389:49:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3146,"name":"votingNotClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"4410:15:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4410:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3148,"nodeType":"RevertStatement","src":"4403:24:14"}]}},{"expression":{"arguments":[{"id":3155,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"4484:2:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3156,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4488:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3152,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"4461:12:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":3151,"name":"DonationVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"4447:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DonationVault_$3226_$","typeString":"type(contract DonationVault)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DonationVault_$3226","typeString":"contract DonationVault"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4475:8:14","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3225,"src":"4447:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3158,"nodeType":"ExpressionStatement","src":"4447:48:14"}]},"functionSelector":"5ab08f00","id":3160,"implemented":true,"kind":"function","modifiers":[{"id":3142,"kind":"modifierInvocation","modifierName":{"id":3141,"name":"onlyOwner","nameLocations":["4349:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"4349:9:14"},"nodeType":"ModifierInvocation","src":"4349:9:14"}],"name":"withdrawDonations","nameLocation":"4264:17:14","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"to","nameLocation":"4307:2:14","nodeType":"VariableDeclaration","scope":3160,"src":"4291:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"4291:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"amount","nameLocation":"4327:6:14","nodeType":"VariableDeclaration","scope":3160,"src":"4319:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"4319:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4281:58:14"},"returnParameters":{"id":3143,"nodeType":"ParameterList","parameters":[],"src":"4358:0:14"},"scope":3186,"src":"4255:247:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3184,"nodeType":"Block","src":"4608:143:14","statements":[{"assignments":[3166,null],"declarations":[{"constant":false,"id":3166,"mutability":"mutable","name":"sent","nameLocation":"4624:4:14","nodeType":"VariableDeclaration","scope":3184,"src":"4619:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3165,"name":"bool","nodeType":"ElementaryTypeName","src":"4619:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3176,"initialValue":{"arguments":[{"hexValue":"","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4677:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":3169,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"4642:12:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4634:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3167,"name":"address","nodeType":"ElementaryTypeName","src":"4634:8:14","stateMutability":"payable","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4634:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4656:4:14","memberName":"call","nodeType":"MemberAccess","src":"4634:26:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3172,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"4668:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4634:42:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4634:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4618:62:14"},{"condition":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4694:5:14","subExpression":{"id":3177,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"4695:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3183,"nodeType":"IfStatement","src":"4690:55:14","trueBody":{"id":3182,"nodeType":"Block","src":"4701:44:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3179,"name":"ethNotSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"4722:10:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3181,"nodeType":"RevertStatement","src":"4715:19:14"}]}}]},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"moveFound","nameLocation":"4573:9:14","nodeType":"FunctionDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"_amount","nameLocation":"4591:7:14","nodeType":"VariableDeclaration","scope":3185,"src":"4583:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4583:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4582:17:14"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[],"src":"4608:0:14"},"scope":3186,"src":"4564:187:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3187,"src":"428:4325:14","usedErrors":[2788,2790,2792,2794,2796,2798,2800,2804]}],"src":"39:4715:14"},"id":14},"contracts/utils/DonationVault.sol":{"ast":{"absolutePath":"contracts/utils/DonationVault.sol","exportedSymbols":{"Context":[673],"DonationVault":[3226],"Ownable":[651],"notEnoughValue":[3191]},"id":3227,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3188,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3227,"sourceUnit":652,"src":"67:52:15","symbolAliases":[],"unitAlias":""},{"errorSelector":"2211d12b","id":3191,"name":"notEnoughValue","nameLocation":"129:14:15","nodeType":"ErrorDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[],"src":"143:2:15"},"src":"123:23:15"},{"abstract":false,"baseContracts":[{"baseName":{"id":3192,"name":"Ownable","nameLocations":["199:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"199:7:15"},"id":3193,"nodeType":"InheritanceSpecifier","src":"199:7:15"}],"canonicalName":"DonationVault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3226,"linearizedBaseContracts":[3226,651,673],"name":"DonationVault","nameLocation":"182:13:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3196,"nodeType":"Block","src":"276:2:15","statements":[]},"id":3197,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[],"src":"256:2:15"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[],"src":"276:0:15"},"scope":3226,"src":"249:29:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3224,"nodeType":"Block","src":"423:132:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"437:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3209,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"454:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_DonationVault_$3226","typeString":"contract DonationVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DonationVault_$3226","typeString":"contract DonationVault"}],"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"446:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:15","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"446:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"460:7:15","memberName":"balance","nodeType":"MemberAccess","src":"446:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"437:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3217,"nodeType":"IfStatement","src":"434:84:15","trueBody":{"id":3216,"nodeType":"Block","src":"468:50:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3213,"name":"notEnoughValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"490:14:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"490:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3215,"nodeType":"RevertStatement","src":"483:23:15"}]}},{"expression":{"arguments":[{"id":3221,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"540:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3218,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"528:2:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"531:8:15","memberName":"transfer","nodeType":"MemberAccess","src":"528:11:15","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"528:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3223,"nodeType":"ExpressionStatement","src":"528:19:15"}]},"functionSelector":"f3fef3a3","id":3225,"implemented":true,"kind":"function","modifiers":[{"id":3204,"kind":"modifierInvocation","modifierName":{"id":3203,"name":"onlyOwner","nameLocations":["414:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"414:9:15"},"nodeType":"ModifierInvocation","src":"414:9:15"}],"name":"withdraw","nameLocation":"360:8:15","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"to","nameLocation":"385:2:15","nodeType":"VariableDeclaration","scope":3225,"src":"369:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"369:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"amount","nameLocation":"397:6:15","nodeType":"VariableDeclaration","scope":3225,"src":"389:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"368:36:15"},"returnParameters":{"id":3205,"nodeType":"ParameterList","parameters":[],"src":"423:0:15"},"scope":3226,"src":"351:204:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3227,"src":"173:385:15","usedErrors":[3191]}],"src":"40:520:15"},"id":15},"contracts/utils/PriceConsumer.sol":{"ast":{"absolutePath":"contracts/utils/PriceConsumer.sol","exportedSymbols":{},"id":3228,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[],"src":"1121:0:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 0xD PUSH32 0x86E1AB2F8303D17696B97E631053FD399CF240C2D50EF4C88FDBA17564736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"424:971:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 0xD PUSH32 0x86E1AB2F8303D17696B97E631053FD399CF240C2D50EF4C88FDBA17564736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"424:971:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2e3c639b25fe7dd66051b150ad6d4fc54abc0bdf00877d2fe20dbd83f94120864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xE3 0xC6 CODECOPY 0xB2 0x5F 0xE7 0xDD PUSH7 0x51B150AD6D4FC SLOAD 0xAB 0xC0 0xBD CREATE ADDMOD PUSH24 0xD2FE20DBD83F94120864736F6C6343000813003300000000 ","sourceMap":"220:2559:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2e3c639b25fe7dd66051b150ad6d4fc54abc0bdf00877d2fe20dbd83f94120864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xE3 0xC6 CODECOPY 0xB2 0x5F 0xE7 0xDD PUSH7 0x51B150AD6D4FC SLOAD 0xAB 0xC0 0xBD CREATE ADDMOD PUSH24 0xD2FE20DBD83F94120864736F6C6343000813003300000000 ","sourceMap":"220:2559:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e43ca308c8369fc15a2001a17a85cff4ee9a28330f9ae1e7ff2b25f2c22eb12f64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EXTCODECOPY LOG3 ADDMOD 0xC8 CALLDATASIZE SWAP16 0xC1 GAS KECCAK256 ADD LOG1 PUSH27 0x85CFF4EE9A28330F9AE1E7FF2B25F2C22EB12F64736F6C63430008 SGT STOP CALLER ","sourceMap":"202:12582:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e43ca308c8369fc15a2001a17a85cff4ee9a28330f9ae1e7ff2b25f2c22eb12f64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EXTCODECOPY LOG3 ADDMOD 0xC8 CALLDATASIZE SWAP16 0xC1 GAS KECCAK256 ADD LOG1 PUSH27 0x85CFF4EE9A28330F9AE1E7FF2B25F2C22EB12F64736F6C63430008 SGT STOP CALLER ","sourceMap":"202:12582:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208033b5a6c324fdcc20d0911e83115e8bf3b22b861b07464c80cb392818b4cfcd64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 CALLER 0xB5 0xA6 0xC3 0x24 REVERT 0xCC KECCAK256 0xD0 SWAP2 0x1E DUP4 GT 0x5E DUP12 RETURN 0xB2 0x2B DUP7 SHL SMOD CHAINID 0x4C DUP1 0xCB CODECOPY 0x28 XOR 0xB4 0xCF 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"215:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208033b5a6c324fdcc20d0911e83115e8bf3b22b861b07464c80cb392818b4cfcd64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 CALLER 0xB5 0xA6 0xC3 0x24 REVERT 0xCC KECCAK256 0xD0 SWAP2 0x1E DUP4 GT 0x5E DUP12 RETURN 0xB2 0x2B DUP7 SHL SMOD CHAINID 0x4C DUP1 0xCB CODECOPY 0x28 XOR 0xB4 0xCF 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"215:1047:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220132f5c7c8da4283aa45946987e4245121b7eef11c4e9859346044daf722bcf0764736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x2F 0x5C PUSH29 0x8DA4283AA45946987E4245121B7EEF11C4E9859346044DAF722BCF0764 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1329:11630:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220132f5c7c8da4283aa45946987e4245121b7eef11c4e9859346044daf722bcf0764736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x2F 0x5C PUSH29 0x8DA4283AA45946987E4245121B7EEF11C4E9859346044DAF722BCF0764 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1329:11630:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/Notarize.sol":{"Notarize":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"docAlreadyRegistered","type":"error"},{"inputs":[],"name":"indexNotFound","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"docCounter","type":"uint256"},{"indexed":false,"internalType":"string","name":"docUrl","type":"string"},{"indexed":false,"internalType":"bytes32","name":"dochash","type":"bytes32"}],"name":"DocHashAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HASH_WRITER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_url","type":"string"},{"internalType":"bytes32","name":"_hash","type":"bytes32"}],"name":"addNewDocument","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_num","type":"uint256"}],"name":"getDocInfo","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDocsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_hash","type":"bytes32"}],"name":"getRegisteredHash","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_hashWriter","type":"address"}],"name":"removeHashWriterRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_hashWriter","type":"address"}],"name":"setHashWriterRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2650":{"entryPoint":null,"id":2650,"parameterSlots":0,"returnSlots":0},"@_add_2036":{"entryPoint":555,"id":2036,"parameterSlots":2,"returnSlots":1},"@_contains_2139":{"entryPoint":677,"id":2139,"parameterSlots":2,"returnSlots":1},"@_grantRole_283":{"entryPoint":152,"id":283,"parameterSlots":2,"returnSlots":0},"@_grantRole_415":{"entryPoint":90,"id":415,"parameterSlots":2,"returnSlots":0},"@_msgSender_663":{"entryPoint":60,"id":663,"parameterSlots":0,"returnSlots":1},"@_setupRole_223":{"entryPoint":68,"id":223,"parameterSlots":2,"returnSlots":0},"@add_2336":{"entryPoint":393,"id":2336,"parameterSlots":2,"returnSlots":1},"@hasRole_79":{"entryPoint":449,"id":79,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000366000801b6200002a6200003c60201b60201c565b6200004460201b60201c565b620002c8565b600033905090565b6200005682826200005a60201b60201c565b5050565b6200006c82826200009860201b60201c565b6200009381600160008581526020019081526020016000206200018960201b90919060201c565b505050565b620000aa8282620001c160201b60201c565b6200018557600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200012a6200003c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620001b9836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200022b60201b60201c565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006200023f8383620002a560201b60201c565b6200029a5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506200029f565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b611d6780620002d86000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806391d1485411610097578063b46beb4f11610066578063b46beb4f146102d4578063ca15c873146102f0578063d547741f14610320578063efcd473c1461033c57610100565b806391d148541461024c5780639e8cb6bd1461027c578063a217fddf1461029a578063abb0688f146102b857610100565b806334efe036116100d357806334efe0361461019f57806336568abe146101cf5780636138fede146101eb5780639010d07c1461021c57610100565b806301ffc9a7146101055780632220de2114610135578063248a9ca3146101535780632f2ff15d14610183575b600080fd5b61011f600480360381019061011a91906111c2565b610358565b60405161012c919061120a565b60405180910390f35b61013d6103d2565b60405161014a919061123e565b60405180910390f35b61016d60048036038101906101689190611285565b6103f6565b60405161017a919061123e565b60405180910390f35b61019d60048036038101906101989190611310565b610415565b005b6101b960048036038101906101b49190611285565b610436565b6040516101c6919061120a565b60405180910390f35b6101e960048036038101906101e49190611310565b610460565b005b61020560048036038101906102009190611386565b6104e3565b604051610213929190611443565b60405180910390f35b61023660048036038101906102319190611473565b6105ec565b60405161024391906114c2565b60405180910390f35b61026660048036038101906102619190611310565b61061b565b604051610273919061120a565b60405180910390f35b610284610685565b60405161029191906114ec565b60405180910390f35b6102a2610696565b6040516102af919061123e565b60405180910390f35b6102d260048036038101906102cd919061163c565b61069d565b005b6102ee60048036038101906102e99190611698565b6107ee565b005b61030a60048036038101906103059190611285565b610829565b60405161031791906114ec565b60405180910390f35b61033a60048036038101906103359190611310565b61084d565b005b61035660048036038101906103519190611698565b61086e565b005b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103cb57506103ca826108a9565b5b9050919050565b7f9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d681565b6000806000838152602001908152602001600020600101549050919050565b61041e826103f6565b61042781610923565b6104318383610937565b505050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b61046861096b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc90611737565b60405180910390fd5b6104df8282610973565b5050565b606060006104f160026109a7565b83111561052a576040517f22f7b18c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036000848152602001908152602001600020600001600360008581526020019081526020016000206001015481805461056390611786565b80601f016020809104026020016040519081016040528092919081815260200182805461058f90611786565b80156105dc5780601f106105b1576101008083540402835291602001916105dc565b820191906000526020600020905b8154815290600101906020018083116105bf57829003601f168201915b5050505050915091509150915091565b600061061382600160008681526020019081526020016000206109b590919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061069160026109a7565b905090565b6000801b81565b7f9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d66106c781610923565b6004600083815260200190815260200160002060009054906101000a900460ff161561071f576040517f9e2c202000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061072b60026109a7565b905060405180604001604052808581526020018481525060036000838152602001908152602001600020600082015181600001908161076a9190611963565b506020820151816001015590505060016004600085815260200190815260200160002060006101000a81548160ff0219169083151502179055506107ae60026109cf565b807f3652677d7cefd12c889b15a7ced31cc0e0d120417a9febcb93eddf8ce7b43f9885856040516107e0929190611443565b60405180910390a250505050565b6000801b6107fb81610923565b6108257f9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d683610415565b5050565b6000610846600160008481526020019081526020016000206109e5565b9050919050565b610856826103f6565b61085f81610923565b6108698383610973565b505050565b6000801b61087b81610923565b6108a57f9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d68361084d565b5050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061091c575061091b826109fa565b5b9050919050565b6109348161092f61096b565b610a64565b50565b6109418282610ae9565b6109668160016000858152602001908152602001600020610bc990919063ffffffff16565b505050565b600033905090565b61097d8282610bf9565b6109a28160016000858152602001908152602001600020610cda90919063ffffffff16565b505050565b600081600001549050919050565b60006109c48360000183610d0a565b60001c905092915050565b6001816000016000828254019250508190555050565b60006109f382600001610d35565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a6e828261061b565b610ae557610a7b81610d46565b610a898360001c6020610d73565b604051602001610a9a929190611b09565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc9190611b43565b60405180910390fd5b5050565b610af3828261061b565b610bc557600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b6a61096b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000610bf1836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610faf565b905092915050565b610c03828261061b565b15610cd657600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c7b61096b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000610d02836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61101f565b905092915050565b6000826000018281548110610d2257610d21611b65565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b6060610d6c8273ffffffffffffffffffffffffffffffffffffffff16601460ff16610d73565b9050919050565b606060006002836002610d869190611bc3565b610d909190611c05565b67ffffffffffffffff811115610da957610da8611511565b5b6040519080825280601f01601f191660200182016040528015610ddb5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e1357610e12611b65565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610e7757610e76611b65565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610eb79190611bc3565b610ec19190611c05565b90505b6001811115610f61577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610f0357610f02611b65565b5b1a60f81b828281518110610f1a57610f19611b65565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610f5a90611c39565b9050610ec4565b5060008414610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c90611cae565b60405180910390fd5b8091505092915050565b6000610fbb8383611133565b611014578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611019565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146111275760006001826110519190611cce565b90506000600186600001805490506110699190611cce565b90508181146110d857600086600001828154811061108a57611089611b65565b5b90600052602060002001549050808760000184815481106110ae576110ad611b65565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806110ec576110eb611d02565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061112d565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61119f8161116a565b81146111aa57600080fd5b50565b6000813590506111bc81611196565b92915050565b6000602082840312156111d8576111d7611160565b5b60006111e6848285016111ad565b91505092915050565b60008115159050919050565b611204816111ef565b82525050565b600060208201905061121f60008301846111fb565b92915050565b6000819050919050565b61123881611225565b82525050565b6000602082019050611253600083018461122f565b92915050565b61126281611225565b811461126d57600080fd5b50565b60008135905061127f81611259565b92915050565b60006020828403121561129b5761129a611160565b5b60006112a984828501611270565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112dd826112b2565b9050919050565b6112ed816112d2565b81146112f857600080fd5b50565b60008135905061130a816112e4565b92915050565b6000806040838503121561132757611326611160565b5b600061133585828601611270565b9250506020611346858286016112fb565b9150509250929050565b6000819050919050565b61136381611350565b811461136e57600080fd5b50565b6000813590506113808161135a565b92915050565b60006020828403121561139c5761139b611160565b5b60006113aa84828501611371565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113ed5780820151818401526020810190506113d2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611415826113b3565b61141f81856113be565b935061142f8185602086016113cf565b611438816113f9565b840191505092915050565b6000604082019050818103600083015261145d818561140a565b905061146c602083018461122f565b9392505050565b6000806040838503121561148a57611489611160565b5b600061149885828601611270565b92505060206114a985828601611371565b9150509250929050565b6114bc816112d2565b82525050565b60006020820190506114d760008301846114b3565b92915050565b6114e681611350565b82525050565b600060208201905061150160008301846114dd565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611549826113f9565b810181811067ffffffffffffffff8211171561156857611567611511565b5b80604052505050565b600061157b611156565b90506115878282611540565b919050565b600067ffffffffffffffff8211156115a7576115a6611511565b5b6115b0826113f9565b9050602081019050919050565b82818337600083830152505050565b60006115df6115da8461158c565b611571565b9050828152602081018484840111156115fb576115fa61150c565b5b6116068482856115bd565b509392505050565b600082601f83011261162357611622611507565b5b81356116338482602086016115cc565b91505092915050565b6000806040838503121561165357611652611160565b5b600083013567ffffffffffffffff81111561167157611670611165565b5b61167d8582860161160e565b925050602061168e85828601611270565b9150509250929050565b6000602082840312156116ae576116ad611160565b5b60006116bc848285016112fb565b91505092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611721602f836113be565b915061172c826116c5565b604082019050919050565b6000602082019050818103600083015261175081611714565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061179e57607f821691505b6020821081036117b1576117b0611757565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117dc565b61182386836117dc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061186061185b61185684611350565b61183b565b611350565b9050919050565b6000819050919050565b61187a83611845565b61188e61188682611867565b8484546117e9565b825550505050565b600090565b6118a3611896565b6118ae818484611871565b505050565b5b818110156118d2576118c760008261189b565b6001810190506118b4565b5050565b601f821115611917576118e8816117b7565b6118f1846117cc565b81016020851015611900578190505b61191461190c856117cc565b8301826118b3565b50505b505050565b600082821c905092915050565b600061193a6000198460080261191c565b1980831691505092915050565b60006119538383611929565b9150826002028217905092915050565b61196c826113b3565b67ffffffffffffffff81111561198557611984611511565b5b61198f8254611786565b61199a8282856118d6565b600060209050601f8311600181146119cd57600084156119bb578287015190505b6119c58582611947565b865550611a2d565b601f1984166119db866117b7565b60005b82811015611a03578489015182556001820191506020850194506020810190506119de565b86831015611a205784890151611a1c601f891682611929565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611a76601783611a35565b9150611a8182611a40565b601782019050919050565b6000611a97826113b3565b611aa18185611a35565b9350611ab18185602086016113cf565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611af3601183611a35565b9150611afe82611abd565b601182019050919050565b6000611b1482611a69565b9150611b208285611a8c565b9150611b2b82611ae6565b9150611b378284611a8c565b91508190509392505050565b60006020820190508181036000830152611b5d818461140a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bce82611350565b9150611bd983611350565b9250828202611be781611350565b91508282048414831517611bfe57611bfd611b94565b5b5092915050565b6000611c1082611350565b9150611c1b83611350565b9250828201905080821115611c3357611c32611b94565b5b92915050565b6000611c4482611350565b915060008203611c5757611c56611b94565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611c986020836113be565b9150611ca382611c62565b602082019050919050565b60006020820190508181036000830152611cc781611c8b565b9050919050565b6000611cd982611350565b9150611ce483611350565b9250828203905081811115611cfc57611cfb611b94565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220bb5a88d03b87fef7ff04e24cf544025cc57fef33a4bec420bba6eb164e97fc6364736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x36 PUSH1 0x0 DUP1 SHL PUSH3 0x2A PUSH3 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x44 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2C8 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x56 DUP3 DUP3 PUSH3 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x6C DUP3 DUP3 PUSH3 0x98 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x93 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x189 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0xAA DUP3 DUP3 PUSH3 0x1C1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x185 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x12A PUSH3 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B9 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x22B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x23F DUP4 DUP4 PUSH3 0x2A5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x29A JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x29F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D67 DUP1 PUSH3 0x2D8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB46BEB4F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB46BEB4F EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xEFCD473C EQ PUSH2 0x33C JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x9E8CB6BD EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xABB0688F EQ PUSH2 0x2B8 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x34EFE036 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x34EFE036 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x6138FEDE EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x21C JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2220DE21 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP3 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3CB JUMPI POP PUSH2 0x3CA DUP3 PUSH2 0x8A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9BD7B39E404EC8163DDB5278C0044198CA50A2BF864985CBC93F934A5AFED5D6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41E DUP3 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x431 DUP4 DUP4 PUSH2 0x937 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x468 PUSH2 0x96B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DF DUP3 DUP3 PUSH2 0x973 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x4F1 PUSH1 0x2 PUSH2 0x9A7 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0x22F7B18C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 DUP1 SLOAD PUSH2 0x563 SWAP1 PUSH2 0x1786 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x1786 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x613 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x9B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x691 PUSH1 0x2 PUSH2 0x9A7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x9BD7B39E404EC8163DDB5278C0044198CA50A2BF864985CBC93F934A5AFED5D6 PUSH2 0x6C7 DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH32 0x9E2C202000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x72B PUSH1 0x2 PUSH2 0x9A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x7AE PUSH1 0x2 PUSH2 0x9CF JUMP JUMPDEST DUP1 PUSH32 0x3652677D7CEFD12C889B15A7CED31CC0E0D120417A9FEBCB93EDDF8CE7B43F98 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x7E0 SWAP3 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x7FB DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x825 PUSH32 0x9BD7B39E404EC8163DDB5278C0044198CA50A2BF864985CBC93F934A5AFED5D6 DUP4 PUSH2 0x415 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x846 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x856 DUP3 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x85F DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x869 DUP4 DUP4 PUSH2 0x973 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x87B DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x8A5 PUSH32 0x9BD7B39E404EC8163DDB5278C0044198CA50A2BF864985CBC93F934A5AFED5D6 DUP4 PUSH2 0x84D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x91C JUMPI POP PUSH2 0x91B DUP3 PUSH2 0x9FA JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0x92F PUSH2 0x96B JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x941 DUP3 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x966 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xBC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x97D DUP3 DUP3 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x9A2 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xCDA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C4 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH1 0x0 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6E DUP3 DUP3 PUSH2 0x61B JUMP JUMPDEST PUSH2 0xAE5 JUMPI PUSH2 0xA7B DUP2 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0xA89 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA9A SWAP3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAF3 DUP3 DUP3 PUSH2 0x61B JUMP JUMPDEST PUSH2 0xBC5 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB6A PUSH2 0x96B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF1 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC03 DUP3 DUP3 PUSH2 0x61B JUMP JUMPDEST ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC7B PUSH2 0x96B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD02 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD22 JUMPI PUSH2 0xD21 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD6C DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xD73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xD86 SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0xD90 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA9 JUMPI PUSH2 0xDA8 PUSH2 0x1511 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDDB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xEB7 SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF61 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xF03 JUMPI PUSH2 0xF02 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xF5A SWAP1 PUSH2 0x1C39 JUMP JUMPDEST SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP1 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBB DUP4 DUP4 PUSH2 0x1133 JUMP JUMPDEST PUSH2 0x1014 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1127 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1051 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x10D8 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x108A JUMPI PUSH2 0x1089 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10AE JUMPI PUSH2 0x10AD PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x10EC JUMPI PUSH2 0x10EB PUSH2 0x1D02 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x112D JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119F DUP2 PUSH2 0x116A JUMP JUMPDEST DUP2 EQ PUSH2 0x11AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11BC DUP2 PUSH2 0x1196 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11D7 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11E6 DUP5 DUP3 DUP6 ADD PUSH2 0x11AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0x11EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x121F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1238 DUP2 PUSH2 0x1225 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1253 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x122F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0x1225 JUMP JUMPDEST DUP2 EQ PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127F DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129B JUMPI PUSH2 0x129A PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A9 DUP5 DUP3 DUP6 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DD DUP3 PUSH2 0x12B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12ED DUP2 PUSH2 0x12D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x130A DUP2 PUSH2 0x12E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1327 JUMPI PUSH2 0x1326 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1335 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1346 DUP6 DUP3 DUP7 ADD PUSH2 0x12FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1363 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP2 EQ PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1380 DUP2 PUSH2 0x135A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13AA DUP5 DUP3 DUP6 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13ED JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1415 DUP3 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x141F DUP2 DUP6 PUSH2 0x13BE JUMP JUMPDEST SWAP4 POP PUSH2 0x142F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x1438 DUP2 PUSH2 0x13F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x145D DUP2 DUP6 PUSH2 0x140A JUMP JUMPDEST SWAP1 POP PUSH2 0x146C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x122F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH2 0x1489 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1498 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BC DUP2 PUSH2 0x12D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E6 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1501 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1549 DUP3 PUSH2 0x13F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1567 PUSH2 0x1511 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157B PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP PUSH2 0x1587 DUP3 DUP3 PUSH2 0x1540 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x1511 JUMP JUMPDEST JUMPDEST PUSH2 0x15B0 DUP3 PUSH2 0x13F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DF PUSH2 0x15DA DUP5 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x1571 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15FB JUMPI PUSH2 0x15FA PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH2 0x1606 DUP5 DUP3 DUP6 PUSH2 0x15BD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1623 JUMPI PUSH2 0x1622 PUSH2 0x1507 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1633 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1671 JUMPI PUSH2 0x1670 PUSH2 0x1165 JUMP JUMPDEST JUMPDEST PUSH2 0x167D DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x168E DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AE JUMPI PUSH2 0x16AD PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BC DUP5 DUP3 DUP6 ADD PUSH2 0x12FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1721 PUSH1 0x2F DUP4 PUSH2 0x13BE JUMP JUMPDEST SWAP2 POP PUSH2 0x172C DUP3 PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1750 DUP2 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x179E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17B1 JUMPI PUSH2 0x17B0 PUSH2 0x1757 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1819 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0x1823 DUP7 DUP4 PUSH2 0x17DC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1860 PUSH2 0x185B PUSH2 0x1856 DUP5 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0x183B JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187A DUP4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x188E PUSH2 0x1886 DUP3 PUSH2 0x1867 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x17E9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x18A3 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x18AE DUP2 DUP5 DUP5 PUSH2 0x1871 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D2 JUMPI PUSH2 0x18C7 PUSH1 0x0 DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1917 JUMPI PUSH2 0x18E8 DUP2 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x18F1 DUP5 PUSH2 0x17CC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1900 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1914 PUSH2 0x190C DUP6 PUSH2 0x17CC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x18B3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x191C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP4 DUP4 PUSH2 0x1929 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196C DUP3 PUSH2 0x13B3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1985 JUMPI PUSH2 0x1984 PUSH2 0x1511 JUMP JUMPDEST JUMPDEST PUSH2 0x198F DUP3 SLOAD PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x199A DUP3 DUP3 DUP6 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x19CD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x19BB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x19C5 DUP6 DUP3 PUSH2 0x1947 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x19DB DUP7 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A03 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19DE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1A20 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1A1C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1929 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A76 PUSH1 0x17 DUP4 PUSH2 0x1A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A81 DUP3 PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A97 DUP3 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x1AA1 DUP2 DUP6 PUSH2 0x1A35 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AB1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF3 PUSH1 0x11 DUP4 PUSH2 0x1A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFE DUP3 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B14 DUP3 PUSH2 0x1A69 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B20 DUP3 DUP6 PUSH2 0x1A8C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2B DUP3 PUSH2 0x1AE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B37 DUP3 DUP5 PUSH2 0x1A8C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B5D DUP2 DUP5 PUSH2 0x140A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BCE DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD9 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1BE7 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BFE JUMPI PUSH2 0x1BFD PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C10 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1B DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C33 JUMPI PUSH2 0x1C32 PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C44 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1C57 JUMPI PUSH2 0x1C56 PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C98 PUSH1 0x20 DUP4 PUSH2 0x13BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA3 DUP3 PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC7 DUP2 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB GAS DUP9 0xD0 EXTCODESIZE DUP8 INVALID 0xF7 SELFDESTRUCT DIV 0xE2 0x4C CREATE2 PREVRANDAO MUL 0x5C 0xC5 PUSH32 0xEF33A4BEC420BBA6EB164E97FC6364736F6C6343000813003300000000000000 ","sourceMap":"277:2174:13:-:0;;;1097:76;;;;;;;;;;1122:44;2198:4:0;1133:18:13;;1153:12;:10;;;:12;;:::i;:::-;1122:10;;;:44;;:::i;:::-;277:2174;;640:96:5;693:7;719:10;712:17;;640:96;:::o;6937:110:0:-;7015:25;7026:4;7032:7;7015:10;;;:25;;:::i;:::-;6937:110;;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;;;:31;;:::i;:::-;2106;2129:7;2106:12;:18;2119:4;2106:18;;;;;;;;;;;:22;;;;:31;;;;:::i;:::-;;1978:166;;:::o;7587:233:0:-;7670:22;7678:4;7684:7;7670;;;:22;;:::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;;;:12;;:::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;8305:150:12:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;;;:50;;:::i;:::-;8391:57;;8305:150;;;;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2214:404:12:-;2277:4;2298:21;2308:3;2313:5;2298:9;;;:21;;:::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;4255:127::-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;277:2174:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":1686,"id":27,"parameterSlots":0,"returnSlots":0},"@HASH_WRITER_2615":{"entryPoint":978,"id":2615,"parameterSlots":0,"returnSlots":0},"@_add_2036":{"entryPoint":4015,"id":2036,"parameterSlots":2,"returnSlots":1},"@_at_2170":{"entryPoint":3338,"id":2170,"parameterSlots":2,"returnSlots":1},"@_checkRole_131":{"entryPoint":2660,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":2339,"id":92,"parameterSlots":1,"returnSlots":0},"@_contains_2139":{"entryPoint":4403,"id":2139,"parameterSlots":2,"returnSlots":1},"@_grantRole_283":{"entryPoint":2793,"id":283,"parameterSlots":2,"returnSlots":0},"@_grantRole_415":{"entryPoint":2359,"id":415,"parameterSlots":2,"returnSlots":0},"@_length_2153":{"entryPoint":3381,"id":2153,"parameterSlots":1,"returnSlots":1},"@_msgSender_663":{"entryPoint":2411,"id":663,"parameterSlots":0,"returnSlots":1},"@_remove_2120":{"entryPoint":4127,"id":2120,"parameterSlots":2,"returnSlots":1},"@_revokeRole_314":{"entryPoint":3065,"id":314,"parameterSlots":2,"returnSlots":0},"@_revokeRole_439":{"entryPoint":2419,"id":439,"parameterSlots":2,"returnSlots":0},"@addNewDocument_2729":{"entryPoint":1693,"id":2729,"parameterSlots":2,"returnSlots":0},"@add_2336":{"entryPoint":3017,"id":2336,"parameterSlots":2,"returnSlots":1},"@at_2432":{"entryPoint":2485,"id":2432,"parameterSlots":2,"returnSlots":1},"@current_691":{"entryPoint":2471,"id":691,"parameterSlots":1,"returnSlots":1},"@getDocInfo_2759":{"entryPoint":1251,"id":2759,"parameterSlots":1,"returnSlots":2},"@getDocsCount_2769":{"entryPoint":1669,"id":2769,"parameterSlots":0,"returnSlots":1},"@getRegisteredHash_2781":{"entryPoint":1078,"id":2781,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":1014,"id":146,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_391":{"entryPoint":2089,"id":391,"parameterSlots":1,"returnSlots":1},"@getRoleMember_375":{"entryPoint":1516,"id":375,"parameterSlots":2,"returnSlots":1},"@grantRole_166":{"entryPoint":1045,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":1563,"id":79,"parameterSlots":2,"returnSlots":1},"@increment_705":{"entryPoint":2511,"id":705,"parameterSlots":1,"returnSlots":0},"@length_2405":{"entryPoint":2533,"id":2405,"parameterSlots":1,"returnSlots":1},"@removeHashWriterRole_2678":{"entryPoint":2158,"id":2678,"parameterSlots":1,"returnSlots":0},"@remove_2363":{"entryPoint":3290,"id":2363,"parameterSlots":2,"returnSlots":1},"@renounceRole_209":{"entryPoint":1120,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":2125,"id":186,"parameterSlots":2,"returnSlots":0},"@setHashWriterRole_2664":{"entryPoint":2030,"id":2664,"parameterSlots":1,"returnSlots":0},"@supportsInterface_356":{"entryPoint":856,"id":356,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":2217,"id":60,"parameterSlots":1,"returnSlots":1},"@supportsInterface_999":{"entryPoint":2554,"id":999,"parameterSlots":1,"returnSlots":1},"@toHexString_930":{"entryPoint":3443,"id":930,"parameterSlots":2,"returnSlots":1},"@toHexString_950":{"entryPoint":3398,"id":950,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":5580,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":4525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":5646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":4741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":4880,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":5235,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_bytes32":{"entryPoint":5692,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5299,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4603,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6796,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":7307,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6761,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6886,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":5908,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5341,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6921,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":4670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed":{"entryPoint":5187,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7342,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5943,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5356,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5489,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4438,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":5516,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":6071,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5043,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5054,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6709,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7173,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7107,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7374,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":6358,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":4818,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4591,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4645,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4458,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4944,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":6323,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":6213,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6499,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5565,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5071,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":7225,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":6092,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6022,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":6471,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":5440,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6203,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":6441,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7060,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5975,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":7426,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7013,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5393,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":6247,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5383,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5388,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4453,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4448,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5113,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":6108,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":6428,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":6299,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":7266,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":6720,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":6845,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":5829,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":6121,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":6257,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4836,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":4697,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":4502,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4954,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":6294,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21411:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:105:17","statements":[{"nodeType":"YulAssignment","src":"388:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:149:17"},{"body":{"nodeType":"YulBlock","src":"531:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:17"},"nodeType":"YulFunctionCall","src":"589:12:17"},"nodeType":"YulExpressionStatement","src":"589:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:17"},"nodeType":"YulFunctionCall","src":"561:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:17"},"nodeType":"YulFunctionCall","src":"551:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:17"},"nodeType":"YulFunctionCall","src":"544:42:17"},"nodeType":"YulIf","src":"541:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:17","type":""}],"src":"489:120:17"},{"body":{"nodeType":"YulBlock","src":"666:86:17","statements":[{"nodeType":"YulAssignment","src":"676:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:17"},"nodeType":"YulFunctionCall","src":"685:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:17"},"nodeType":"YulFunctionCall","src":"714:32:17"},"nodeType":"YulExpressionStatement","src":"714:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:17","type":""}],"src":"615:137:17"},{"body":{"nodeType":"YulBlock","src":"823:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:17"},"nodeType":"YulFunctionCall","src":"871:79:17"},"nodeType":"YulExpressionStatement","src":"871:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:17"},"nodeType":"YulFunctionCall","src":"840:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:17"},"nodeType":"YulFunctionCall","src":"836:32:17"},"nodeType":"YulIf","src":"833:119:17"},{"nodeType":"YulBlock","src":"962:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:17"},"nodeType":"YulFunctionCall","src":"1016:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:17","type":""}],"src":"758:327:17"},{"body":{"nodeType":"YulBlock","src":"1133:48:17","statements":[{"nodeType":"YulAssignment","src":"1143:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:17"},"nodeType":"YulFunctionCall","src":"1161:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:17"},"nodeType":"YulFunctionCall","src":"1154:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:17","type":""}],"src":"1091:90:17"},{"body":{"nodeType":"YulBlock","src":"1246:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:17"},"nodeType":"YulFunctionCall","src":"1268:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:17"},"nodeType":"YulFunctionCall","src":"1256:34:17"},"nodeType":"YulExpressionStatement","src":"1256:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:17","type":""}],"src":"1187:109:17"},{"body":{"nodeType":"YulBlock","src":"1394:118:17","statements":[{"nodeType":"YulAssignment","src":"1404:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:17"},"nodeType":"YulFunctionCall","src":"1412:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:17"},"nodeType":"YulFunctionCall","src":"1487:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:17"},"nodeType":"YulFunctionCall","src":"1440:65:17"},"nodeType":"YulExpressionStatement","src":"1440:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:17","type":""}],"src":"1302:210:17"},{"body":{"nodeType":"YulBlock","src":"1563:32:17","statements":[{"nodeType":"YulAssignment","src":"1573:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:17","type":""}],"src":"1518:77:17"},{"body":{"nodeType":"YulBlock","src":"1666:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1683:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1706:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1688:17:17"},"nodeType":"YulFunctionCall","src":"1688:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1676:6:17"},"nodeType":"YulFunctionCall","src":"1676:37:17"},"nodeType":"YulExpressionStatement","src":"1676:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1654:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1661:3:17","type":""}],"src":"1601:118:17"},{"body":{"nodeType":"YulBlock","src":"1823:124:17","statements":[{"nodeType":"YulAssignment","src":"1833:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1845:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1856:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1841:3:17"},"nodeType":"YulFunctionCall","src":"1841:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1833:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1913:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1937:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1922:3:17"},"nodeType":"YulFunctionCall","src":"1922:17:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"1869:43:17"},"nodeType":"YulFunctionCall","src":"1869:71:17"},"nodeType":"YulExpressionStatement","src":"1869:71:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1795:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1807:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1818:4:17","type":""}],"src":"1725:222:17"},{"body":{"nodeType":"YulBlock","src":"1996:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2053:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2062:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2065:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2055:6:17"},"nodeType":"YulFunctionCall","src":"2055:12:17"},"nodeType":"YulExpressionStatement","src":"2055:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2019:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2044:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2026:17:17"},"nodeType":"YulFunctionCall","src":"2026:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2016:2:17"},"nodeType":"YulFunctionCall","src":"2016:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2009:6:17"},"nodeType":"YulFunctionCall","src":"2009:43:17"},"nodeType":"YulIf","src":"2006:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1989:5:17","type":""}],"src":"1953:122:17"},{"body":{"nodeType":"YulBlock","src":"2133:87:17","statements":[{"nodeType":"YulAssignment","src":"2143:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2165:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2152:12:17"},"nodeType":"YulFunctionCall","src":"2152:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2143:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2208:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2181:26:17"},"nodeType":"YulFunctionCall","src":"2181:33:17"},"nodeType":"YulExpressionStatement","src":"2181:33:17"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2111:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2119:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2127:5:17","type":""}],"src":"2081:139:17"},{"body":{"nodeType":"YulBlock","src":"2292:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"2338:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2340:77:17"},"nodeType":"YulFunctionCall","src":"2340:79:17"},"nodeType":"YulExpressionStatement","src":"2340:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2313:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2322:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2309:3:17"},"nodeType":"YulFunctionCall","src":"2309:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2334:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2305:3:17"},"nodeType":"YulFunctionCall","src":"2305:32:17"},"nodeType":"YulIf","src":"2302:119:17"},{"nodeType":"YulBlock","src":"2431:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2446:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2460:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2450:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2475:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2510:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2521:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2506:3:17"},"nodeType":"YulFunctionCall","src":"2506:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2530:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2485:20:17"},"nodeType":"YulFunctionCall","src":"2485:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2475:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2262:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2273:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2285:6:17","type":""}],"src":"2226:329:17"},{"body":{"nodeType":"YulBlock","src":"2606:81:17","statements":[{"nodeType":"YulAssignment","src":"2616:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2631:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2638:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2627:3:17"},"nodeType":"YulFunctionCall","src":"2627:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2616:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2588:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2598:7:17","type":""}],"src":"2561:126:17"},{"body":{"nodeType":"YulBlock","src":"2738:51:17","statements":[{"nodeType":"YulAssignment","src":"2748:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2777:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2759:17:17"},"nodeType":"YulFunctionCall","src":"2759:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2748:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2720:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2730:7:17","type":""}],"src":"2693:96:17"},{"body":{"nodeType":"YulBlock","src":"2838:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2895:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2904:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2907:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2897:6:17"},"nodeType":"YulFunctionCall","src":"2897:12:17"},"nodeType":"YulExpressionStatement","src":"2897:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2861:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2886:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2868:17:17"},"nodeType":"YulFunctionCall","src":"2868:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2858:2:17"},"nodeType":"YulFunctionCall","src":"2858:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2851:6:17"},"nodeType":"YulFunctionCall","src":"2851:43:17"},"nodeType":"YulIf","src":"2848:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2831:5:17","type":""}],"src":"2795:122:17"},{"body":{"nodeType":"YulBlock","src":"2975:87:17","statements":[{"nodeType":"YulAssignment","src":"2985:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3007:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2994:12:17"},"nodeType":"YulFunctionCall","src":"2994:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2985:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3050:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3023:26:17"},"nodeType":"YulFunctionCall","src":"3023:33:17"},"nodeType":"YulExpressionStatement","src":"3023:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2953:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2961:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2969:5:17","type":""}],"src":"2923:139:17"},{"body":{"nodeType":"YulBlock","src":"3151:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"3197:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3199:77:17"},"nodeType":"YulFunctionCall","src":"3199:79:17"},"nodeType":"YulExpressionStatement","src":"3199:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3172:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3181:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3168:3:17"},"nodeType":"YulFunctionCall","src":"3168:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3193:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3164:3:17"},"nodeType":"YulFunctionCall","src":"3164:32:17"},"nodeType":"YulIf","src":"3161:119:17"},{"nodeType":"YulBlock","src":"3290:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3305:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3319:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3309:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3334:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3369:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3380:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3365:3:17"},"nodeType":"YulFunctionCall","src":"3365:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3389:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3344:20:17"},"nodeType":"YulFunctionCall","src":"3344:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3334:6:17"}]}]},{"nodeType":"YulBlock","src":"3417:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3432:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3446:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3436:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3462:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3497:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3508:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:17"},"nodeType":"YulFunctionCall","src":"3493:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3517:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3472:20:17"},"nodeType":"YulFunctionCall","src":"3472:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3462:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3113:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3124:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3136:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3144:6:17","type":""}],"src":"3068:474:17"},{"body":{"nodeType":"YulBlock","src":"3593:32:17","statements":[{"nodeType":"YulAssignment","src":"3603:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"3614:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3603:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3575:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3585:7:17","type":""}],"src":"3548:77:17"},{"body":{"nodeType":"YulBlock","src":"3674:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"3731:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3740:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3743:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3733:6:17"},"nodeType":"YulFunctionCall","src":"3733:12:17"},"nodeType":"YulExpressionStatement","src":"3733:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3697:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3722:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3704:17:17"},"nodeType":"YulFunctionCall","src":"3704:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3694:2:17"},"nodeType":"YulFunctionCall","src":"3694:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3687:6:17"},"nodeType":"YulFunctionCall","src":"3687:43:17"},"nodeType":"YulIf","src":"3684:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3667:5:17","type":""}],"src":"3631:122:17"},{"body":{"nodeType":"YulBlock","src":"3811:87:17","statements":[{"nodeType":"YulAssignment","src":"3821:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3843:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3830:12:17"},"nodeType":"YulFunctionCall","src":"3830:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3821:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3886:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3859:26:17"},"nodeType":"YulFunctionCall","src":"3859:33:17"},"nodeType":"YulExpressionStatement","src":"3859:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3789:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3797:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3805:5:17","type":""}],"src":"3759:139:17"},{"body":{"nodeType":"YulBlock","src":"3970:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"4016:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4018:77:17"},"nodeType":"YulFunctionCall","src":"4018:79:17"},"nodeType":"YulExpressionStatement","src":"4018:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3991:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4000:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3987:3:17"},"nodeType":"YulFunctionCall","src":"3987:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4012:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3983:3:17"},"nodeType":"YulFunctionCall","src":"3983:32:17"},"nodeType":"YulIf","src":"3980:119:17"},{"nodeType":"YulBlock","src":"4109:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4124:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4138:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4128:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4153:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4188:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4199:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4184:3:17"},"nodeType":"YulFunctionCall","src":"4184:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4208:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4163:20:17"},"nodeType":"YulFunctionCall","src":"4163:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4153:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3940:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3951:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3963:6:17","type":""}],"src":"3904:329:17"},{"body":{"nodeType":"YulBlock","src":"4298:40:17","statements":[{"nodeType":"YulAssignment","src":"4309:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4325:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4319:5:17"},"nodeType":"YulFunctionCall","src":"4319:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4309:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4281:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4291:6:17","type":""}],"src":"4239:99:17"},{"body":{"nodeType":"YulBlock","src":"4440:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4457:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4462:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4450:6:17"},"nodeType":"YulFunctionCall","src":"4450:19:17"},"nodeType":"YulExpressionStatement","src":"4450:19:17"},{"nodeType":"YulAssignment","src":"4478:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4497:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4502:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4493:3:17"},"nodeType":"YulFunctionCall","src":"4493:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4478:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4412:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4417:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4428:11:17","type":""}],"src":"4344:169:17"},{"body":{"nodeType":"YulBlock","src":"4581:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4591:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4600:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4595:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4660:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4685:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"4690:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4681:3:17"},"nodeType":"YulFunctionCall","src":"4681:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4704:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"4709:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:17"},"nodeType":"YulFunctionCall","src":"4700:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4694:5:17"},"nodeType":"YulFunctionCall","src":"4694:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4674:6:17"},"nodeType":"YulFunctionCall","src":"4674:39:17"},"nodeType":"YulExpressionStatement","src":"4674:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4621:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"4624:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4618:2:17"},"nodeType":"YulFunctionCall","src":"4618:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4632:19:17","statements":[{"nodeType":"YulAssignment","src":"4634:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4643:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"4646:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4639:3:17"},"nodeType":"YulFunctionCall","src":"4639:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4634:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4614:3:17","statements":[]},"src":"4610:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4743:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4748:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4739:3:17"},"nodeType":"YulFunctionCall","src":"4739:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"4757:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4732:6:17"},"nodeType":"YulFunctionCall","src":"4732:27:17"},"nodeType":"YulExpressionStatement","src":"4732:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4563:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4568:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4573:6:17","type":""}],"src":"4519:246:17"},{"body":{"nodeType":"YulBlock","src":"4819:54:17","statements":[{"nodeType":"YulAssignment","src":"4829:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4847:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4854:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4843:3:17"},"nodeType":"YulFunctionCall","src":"4843:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4863:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4859:3:17"},"nodeType":"YulFunctionCall","src":"4859:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4839:3:17"},"nodeType":"YulFunctionCall","src":"4839:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4829:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4802:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4812:6:17","type":""}],"src":"4771:102:17"},{"body":{"nodeType":"YulBlock","src":"4971:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4981:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5028:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4995:32:17"},"nodeType":"YulFunctionCall","src":"4995:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4985:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5043:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5109:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5114:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5050:58:17"},"nodeType":"YulFunctionCall","src":"5050:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5043:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5169:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5176:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5165:3:17"},"nodeType":"YulFunctionCall","src":"5165:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"5183:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5188:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5130:34:17"},"nodeType":"YulFunctionCall","src":"5130:65:17"},"nodeType":"YulExpressionStatement","src":"5130:65:17"},{"nodeType":"YulAssignment","src":"5204:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5215:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5242:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5220:21:17"},"nodeType":"YulFunctionCall","src":"5220:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5211:3:17"},"nodeType":"YulFunctionCall","src":"5211:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5204:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4952:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4959:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4967:3:17","type":""}],"src":"4879:377:17"},{"body":{"nodeType":"YulBlock","src":"5408:277:17","statements":[{"nodeType":"YulAssignment","src":"5418:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5430:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5441:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5426:3:17"},"nodeType":"YulFunctionCall","src":"5426:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5418:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5465:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5476:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5461:3:17"},"nodeType":"YulFunctionCall","src":"5461:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5484:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5490:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5480:3:17"},"nodeType":"YulFunctionCall","src":"5480:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5454:6:17"},"nodeType":"YulFunctionCall","src":"5454:47:17"},"nodeType":"YulExpressionStatement","src":"5454:47:17"},{"nodeType":"YulAssignment","src":"5510:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5582:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"5591:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5518:63:17"},"nodeType":"YulFunctionCall","src":"5518:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5510:4:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5650:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5663:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5674:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5659:3:17"},"nodeType":"YulFunctionCall","src":"5659:18:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5606:43:17"},"nodeType":"YulFunctionCall","src":"5606:72:17"},"nodeType":"YulExpressionStatement","src":"5606:72:17"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5372:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5384:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5392:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5403:4:17","type":""}],"src":"5262:423:17"},{"body":{"nodeType":"YulBlock","src":"5774:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"5820:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5822:77:17"},"nodeType":"YulFunctionCall","src":"5822:79:17"},"nodeType":"YulExpressionStatement","src":"5822:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5795:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5804:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5791:3:17"},"nodeType":"YulFunctionCall","src":"5791:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5816:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5787:3:17"},"nodeType":"YulFunctionCall","src":"5787:32:17"},"nodeType":"YulIf","src":"5784:119:17"},{"nodeType":"YulBlock","src":"5913:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5928:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5942:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5932:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5957:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5992:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6003:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5988:3:17"},"nodeType":"YulFunctionCall","src":"5988:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6012:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5967:20:17"},"nodeType":"YulFunctionCall","src":"5967:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5957:6:17"}]}]},{"nodeType":"YulBlock","src":"6040:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6055:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6069:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6059:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6085:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6120:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6131:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6116:3:17"},"nodeType":"YulFunctionCall","src":"6116:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6140:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6095:20:17"},"nodeType":"YulFunctionCall","src":"6095:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6085:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5736:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5747:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5759:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5767:6:17","type":""}],"src":"5691:474:17"},{"body":{"nodeType":"YulBlock","src":"6236:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6253:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6276:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6258:17:17"},"nodeType":"YulFunctionCall","src":"6258:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6246:6:17"},"nodeType":"YulFunctionCall","src":"6246:37:17"},"nodeType":"YulExpressionStatement","src":"6246:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6224:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6231:3:17","type":""}],"src":"6171:118:17"},{"body":{"nodeType":"YulBlock","src":"6393:124:17","statements":[{"nodeType":"YulAssignment","src":"6403:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6415:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6426:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6411:3:17"},"nodeType":"YulFunctionCall","src":"6411:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6403:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6483:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6496:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6507:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6492:3:17"},"nodeType":"YulFunctionCall","src":"6492:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6439:43:17"},"nodeType":"YulFunctionCall","src":"6439:71:17"},"nodeType":"YulExpressionStatement","src":"6439:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6365:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6377:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6388:4:17","type":""}],"src":"6295:222:17"},{"body":{"nodeType":"YulBlock","src":"6588:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6605:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6628:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6610:17:17"},"nodeType":"YulFunctionCall","src":"6610:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6598:6:17"},"nodeType":"YulFunctionCall","src":"6598:37:17"},"nodeType":"YulExpressionStatement","src":"6598:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6576:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6583:3:17","type":""}],"src":"6523:118:17"},{"body":{"nodeType":"YulBlock","src":"6745:124:17","statements":[{"nodeType":"YulAssignment","src":"6755:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6767:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6778:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6763:3:17"},"nodeType":"YulFunctionCall","src":"6763:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6755:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6835:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6848:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6859:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6844:3:17"},"nodeType":"YulFunctionCall","src":"6844:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6791:43:17"},"nodeType":"YulFunctionCall","src":"6791:71:17"},"nodeType":"YulExpressionStatement","src":"6791:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6717:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6729:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6740:4:17","type":""}],"src":"6647:222:17"},{"body":{"nodeType":"YulBlock","src":"6964:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6981:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6984:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6974:6:17"},"nodeType":"YulFunctionCall","src":"6974:12:17"},"nodeType":"YulExpressionStatement","src":"6974:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6875:117:17"},{"body":{"nodeType":"YulBlock","src":"7087:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7104:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7107:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7097:6:17"},"nodeType":"YulFunctionCall","src":"7097:12:17"},"nodeType":"YulExpressionStatement","src":"7097:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6998:117:17"},{"body":{"nodeType":"YulBlock","src":"7149:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7159:6:17"},"nodeType":"YulFunctionCall","src":"7159:88:17"},"nodeType":"YulExpressionStatement","src":"7159:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7263:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7266:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7256:6:17"},"nodeType":"YulFunctionCall","src":"7256:15:17"},"nodeType":"YulExpressionStatement","src":"7256:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7287:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7290:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7280:6:17"},"nodeType":"YulFunctionCall","src":"7280:15:17"},"nodeType":"YulExpressionStatement","src":"7280:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7121:180:17"},{"body":{"nodeType":"YulBlock","src":"7350:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7360:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7382:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7412:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7390:21:17"},"nodeType":"YulFunctionCall","src":"7390:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7378:3:17"},"nodeType":"YulFunctionCall","src":"7378:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7364:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7529:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7531:16:17"},"nodeType":"YulFunctionCall","src":"7531:18:17"},"nodeType":"YulExpressionStatement","src":"7531:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7472:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"7484:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7469:2:17"},"nodeType":"YulFunctionCall","src":"7469:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7508:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7520:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7505:2:17"},"nodeType":"YulFunctionCall","src":"7505:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7466:2:17"},"nodeType":"YulFunctionCall","src":"7466:62:17"},"nodeType":"YulIf","src":"7463:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7567:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7571:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7560:6:17"},"nodeType":"YulFunctionCall","src":"7560:22:17"},"nodeType":"YulExpressionStatement","src":"7560:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7336:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"7344:4:17","type":""}],"src":"7307:281:17"},{"body":{"nodeType":"YulBlock","src":"7635:88:17","statements":[{"nodeType":"YulAssignment","src":"7645:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7655:18:17"},"nodeType":"YulFunctionCall","src":"7655:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7645:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7704:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"7712:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7684:19:17"},"nodeType":"YulFunctionCall","src":"7684:33:17"},"nodeType":"YulExpressionStatement","src":"7684:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7619:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7628:6:17","type":""}],"src":"7594:129:17"},{"body":{"nodeType":"YulBlock","src":"7796:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"7901:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7903:16:17"},"nodeType":"YulFunctionCall","src":"7903:18:17"},"nodeType":"YulExpressionStatement","src":"7903:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7873:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7881:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7870:2:17"},"nodeType":"YulFunctionCall","src":"7870:30:17"},"nodeType":"YulIf","src":"7867:56:17"},{"nodeType":"YulAssignment","src":"7933:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7963:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7941:21:17"},"nodeType":"YulFunctionCall","src":"7941:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7933:4:17"}]},{"nodeType":"YulAssignment","src":"8007:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8019:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8025:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8015:3:17"},"nodeType":"YulFunctionCall","src":"8015:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8007:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7780:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7791:4:17","type":""}],"src":"7729:308:17"},{"body":{"nodeType":"YulBlock","src":"8107:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8130:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"8135:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8140:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8117:12:17"},"nodeType":"YulFunctionCall","src":"8117:30:17"},"nodeType":"YulExpressionStatement","src":"8117:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8167:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8172:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8163:3:17"},"nodeType":"YulFunctionCall","src":"8163:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"8181:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8156:6:17"},"nodeType":"YulFunctionCall","src":"8156:27:17"},"nodeType":"YulExpressionStatement","src":"8156:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8089:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8094:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8099:6:17","type":""}],"src":"8043:146:17"},{"body":{"nodeType":"YulBlock","src":"8279:341:17","statements":[{"nodeType":"YulAssignment","src":"8289:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8356:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8314:41:17"},"nodeType":"YulFunctionCall","src":"8314:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8298:15:17"},"nodeType":"YulFunctionCall","src":"8298:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8289:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8380:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"8387:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8373:6:17"},"nodeType":"YulFunctionCall","src":"8373:21:17"},"nodeType":"YulExpressionStatement","src":"8373:21:17"},{"nodeType":"YulVariableDeclaration","src":"8403:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8418:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8425:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8414:3:17"},"nodeType":"YulFunctionCall","src":"8414:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8407:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8468:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8470:77:17"},"nodeType":"YulFunctionCall","src":"8470:79:17"},"nodeType":"YulExpressionStatement","src":"8470:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8449:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8454:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8445:3:17"},"nodeType":"YulFunctionCall","src":"8445:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"8463:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8442:2:17"},"nodeType":"YulFunctionCall","src":"8442:25:17"},"nodeType":"YulIf","src":"8439:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8597:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"8602:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8607:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8560:36:17"},"nodeType":"YulFunctionCall","src":"8560:54:17"},"nodeType":"YulExpressionStatement","src":"8560:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8252:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8257:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8265:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8273:5:17","type":""}],"src":"8195:425:17"},{"body":{"nodeType":"YulBlock","src":"8702:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"8751:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8753:77:17"},"nodeType":"YulFunctionCall","src":"8753:79:17"},"nodeType":"YulExpressionStatement","src":"8753:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8730:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8738:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8726:3:17"},"nodeType":"YulFunctionCall","src":"8726:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"8745:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8722:3:17"},"nodeType":"YulFunctionCall","src":"8722:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8715:6:17"},"nodeType":"YulFunctionCall","src":"8715:35:17"},"nodeType":"YulIf","src":"8712:122:17"},{"nodeType":"YulVariableDeclaration","src":"8843:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8870:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8857:12:17"},"nodeType":"YulFunctionCall","src":"8857:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8847:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8886:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8947:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8955:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8943:3:17"},"nodeType":"YulFunctionCall","src":"8943:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"8962:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"8970:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8895:47:17"},"nodeType":"YulFunctionCall","src":"8895:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8886:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8680:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8688:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8696:5:17","type":""}],"src":"8640:340:17"},{"body":{"nodeType":"YulBlock","src":"9079:561:17","statements":[{"body":{"nodeType":"YulBlock","src":"9125:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9127:77:17"},"nodeType":"YulFunctionCall","src":"9127:79:17"},"nodeType":"YulExpressionStatement","src":"9127:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9100:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9109:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9096:3:17"},"nodeType":"YulFunctionCall","src":"9096:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9121:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9092:3:17"},"nodeType":"YulFunctionCall","src":"9092:32:17"},"nodeType":"YulIf","src":"9089:119:17"},{"nodeType":"YulBlock","src":"9218:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9233:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9264:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9275:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9260:3:17"},"nodeType":"YulFunctionCall","src":"9260:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9247:12:17"},"nodeType":"YulFunctionCall","src":"9247:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9237:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9325:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9327:77:17"},"nodeType":"YulFunctionCall","src":"9327:79:17"},"nodeType":"YulExpressionStatement","src":"9327:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9297:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9305:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9294:2:17"},"nodeType":"YulFunctionCall","src":"9294:30:17"},"nodeType":"YulIf","src":"9291:117:17"},{"nodeType":"YulAssignment","src":"9422:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9467:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9478:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9463:3:17"},"nodeType":"YulFunctionCall","src":"9463:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9487:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9432:30:17"},"nodeType":"YulFunctionCall","src":"9432:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9422:6:17"}]}]},{"nodeType":"YulBlock","src":"9515:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9530:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9544:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9560:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9595:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9606:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9591:3:17"},"nodeType":"YulFunctionCall","src":"9591:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9615:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"9570:20:17"},"nodeType":"YulFunctionCall","src":"9570:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9560:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9041:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9052:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9064:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9072:6:17","type":""}],"src":"8986:654:17"},{"body":{"nodeType":"YulBlock","src":"9712:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"9758:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9760:77:17"},"nodeType":"YulFunctionCall","src":"9760:79:17"},"nodeType":"YulExpressionStatement","src":"9760:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9733:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9742:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9729:3:17"},"nodeType":"YulFunctionCall","src":"9729:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9754:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9725:3:17"},"nodeType":"YulFunctionCall","src":"9725:32:17"},"nodeType":"YulIf","src":"9722:119:17"},{"nodeType":"YulBlock","src":"9851:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9866:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9880:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9870:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9895:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9930:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9941:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:17"},"nodeType":"YulFunctionCall","src":"9926:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9950:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9905:20:17"},"nodeType":"YulFunctionCall","src":"9905:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9895:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9682:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9693:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9705:6:17","type":""}],"src":"9646:329:17"},{"body":{"nodeType":"YulBlock","src":"10087:128:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10109:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10117:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10105:3:17"},"nodeType":"YulFunctionCall","src":"10105:14:17"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"10121:34:17","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10098:6:17"},"nodeType":"YulFunctionCall","src":"10098:58:17"},"nodeType":"YulExpressionStatement","src":"10098:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10177:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10185:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:17"},"nodeType":"YulFunctionCall","src":"10173:15:17"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"10190:17:17","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10166:6:17"},"nodeType":"YulFunctionCall","src":"10166:42:17"},"nodeType":"YulExpressionStatement","src":"10166:42:17"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10079:6:17","type":""}],"src":"9981:234:17"},{"body":{"nodeType":"YulBlock","src":"10367:220:17","statements":[{"nodeType":"YulAssignment","src":"10377:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10443:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10448:2:17","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10384:58:17"},"nodeType":"YulFunctionCall","src":"10384:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10377:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10549:3:17"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"10460:88:17"},"nodeType":"YulFunctionCall","src":"10460:93:17"},"nodeType":"YulExpressionStatement","src":"10460:93:17"},{"nodeType":"YulAssignment","src":"10562:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10573:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10578:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10569:3:17"},"nodeType":"YulFunctionCall","src":"10569:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10562:3:17"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10355:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10363:3:17","type":""}],"src":"10221:366:17"},{"body":{"nodeType":"YulBlock","src":"10764:248:17","statements":[{"nodeType":"YulAssignment","src":"10774:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10786:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10797:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10782:3:17"},"nodeType":"YulFunctionCall","src":"10782:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10774:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10821:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10832:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10817:3:17"},"nodeType":"YulFunctionCall","src":"10817:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10840:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10846:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10836:3:17"},"nodeType":"YulFunctionCall","src":"10836:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10810:6:17"},"nodeType":"YulFunctionCall","src":"10810:47:17"},"nodeType":"YulExpressionStatement","src":"10810:47:17"},{"nodeType":"YulAssignment","src":"10866:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11000:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10874:124:17"},"nodeType":"YulFunctionCall","src":"10874:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10866:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10744:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10759:4:17","type":""}],"src":"10593:419:17"},{"body":{"nodeType":"YulBlock","src":"11046:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11063:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11066:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11056:6:17"},"nodeType":"YulFunctionCall","src":"11056:88:17"},"nodeType":"YulExpressionStatement","src":"11056:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11160:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11163:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11153:6:17"},"nodeType":"YulFunctionCall","src":"11153:15:17"},"nodeType":"YulExpressionStatement","src":"11153:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11184:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11187:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11177:6:17"},"nodeType":"YulFunctionCall","src":"11177:15:17"},"nodeType":"YulExpressionStatement","src":"11177:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11018:180:17"},{"body":{"nodeType":"YulBlock","src":"11255:269:17","statements":[{"nodeType":"YulAssignment","src":"11265:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11279:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11285:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11275:3:17"},"nodeType":"YulFunctionCall","src":"11275:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11265:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"11296:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11326:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11332:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11322:3:17"},"nodeType":"YulFunctionCall","src":"11322:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11300:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11373:51:17","statements":[{"nodeType":"YulAssignment","src":"11387:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11401:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11409:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11397:3:17"},"nodeType":"YulFunctionCall","src":"11397:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11387:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11353:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11346:6:17"},"nodeType":"YulFunctionCall","src":"11346:26:17"},"nodeType":"YulIf","src":"11343:81:17"},{"body":{"nodeType":"YulBlock","src":"11476:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11490:16:17"},"nodeType":"YulFunctionCall","src":"11490:18:17"},"nodeType":"YulExpressionStatement","src":"11490:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11440:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11463:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11471:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11460:2:17"},"nodeType":"YulFunctionCall","src":"11460:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11437:2:17"},"nodeType":"YulFunctionCall","src":"11437:38:17"},"nodeType":"YulIf","src":"11434:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11239:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11248:6:17","type":""}],"src":"11204:320:17"},{"body":{"nodeType":"YulBlock","src":"11584:87:17","statements":[{"nodeType":"YulAssignment","src":"11594:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11602:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11594:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11622:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11625:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11615:6:17"},"nodeType":"YulFunctionCall","src":"11615:14:17"},"nodeType":"YulExpressionStatement","src":"11615:14:17"},{"nodeType":"YulAssignment","src":"11638:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11656:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11659:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11646:9:17"},"nodeType":"YulFunctionCall","src":"11646:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11638:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11571:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11579:4:17","type":""}],"src":"11530:141:17"},{"body":{"nodeType":"YulBlock","src":"11721:49:17","statements":[{"nodeType":"YulAssignment","src":"11731:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11749:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11756:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11745:3:17"},"nodeType":"YulFunctionCall","src":"11745:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"11761:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11741:3:17"},"nodeType":"YulFunctionCall","src":"11741:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11731:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11704:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11714:6:17","type":""}],"src":"11677:93:17"},{"body":{"nodeType":"YulBlock","src":"11829:54:17","statements":[{"nodeType":"YulAssignment","src":"11839:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"11864:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"11870:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11860:3:17"},"nodeType":"YulFunctionCall","src":"11860:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"11839:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"11804:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"11810:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"11820:8:17","type":""}],"src":"11776:107:17"},{"body":{"nodeType":"YulBlock","src":"11965:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11975:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"11996:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"12008:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11992:3:17"},"nodeType":"YulFunctionCall","src":"11992:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"11979:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12019:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"12050:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12061:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"12031:18:17"},"nodeType":"YulFunctionCall","src":"12031:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"12023:4:17","type":""}]},{"nodeType":"YulAssignment","src":"12137:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"12168:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"12179:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"12149:18:17"},"nodeType":"YulFunctionCall","src":"12149:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"12137:8:17"}]},{"nodeType":"YulAssignment","src":"12197:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12210:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"12221:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12217:3:17"},"nodeType":"YulFunctionCall","src":"12217:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12206:3:17"},"nodeType":"YulFunctionCall","src":"12206:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12197:5:17"}]},{"nodeType":"YulAssignment","src":"12236:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12249:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"12260:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"12270:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12256:3:17"},"nodeType":"YulFunctionCall","src":"12256:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12246:2:17"},"nodeType":"YulFunctionCall","src":"12246:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12236:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11926:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"11933:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"11945:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11958:6:17","type":""}],"src":"11889:393:17"},{"body":{"nodeType":"YulBlock","src":"12320:28:17","statements":[{"nodeType":"YulAssignment","src":"12330:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"12337:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12330:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12306:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12316:3:17","type":""}],"src":"12288:60:17"},{"body":{"nodeType":"YulBlock","src":"12414:82:17","statements":[{"nodeType":"YulAssignment","src":"12424:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12482:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12464:17:17"},"nodeType":"YulFunctionCall","src":"12464:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12455:8:17"},"nodeType":"YulFunctionCall","src":"12455:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12437:17:17"},"nodeType":"YulFunctionCall","src":"12437:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12424:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12394:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12404:9:17","type":""}],"src":"12354:142:17"},{"body":{"nodeType":"YulBlock","src":"12549:28:17","statements":[{"nodeType":"YulAssignment","src":"12559:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"12566:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12559:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12535:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12545:3:17","type":""}],"src":"12502:75:17"},{"body":{"nodeType":"YulBlock","src":"12659:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12669:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"12724:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12693:30:17"},"nodeType":"YulFunctionCall","src":"12693:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"12673:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12748:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12788:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12782:5:17"},"nodeType":"YulFunctionCall","src":"12782:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12795:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"12827:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"12803:23:17"},"nodeType":"YulFunctionCall","src":"12803:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"12754:27:17"},"nodeType":"YulFunctionCall","src":"12754:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12741:6:17"},"nodeType":"YulFunctionCall","src":"12741:105:17"},"nodeType":"YulExpressionStatement","src":"12741:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12636:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12642:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"12650:7:17","type":""}],"src":"12583:269:17"},{"body":{"nodeType":"YulBlock","src":"12907:24:17","statements":[{"nodeType":"YulAssignment","src":"12917:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12924:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12917:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12903:3:17","type":""}],"src":"12858:73:17"},{"body":{"nodeType":"YulBlock","src":"12990:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13000:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"13014:30:17"},"nodeType":"YulFunctionCall","src":"13014:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"13004:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13099:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13105:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"13113:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13055:43:17"},"nodeType":"YulFunctionCall","src":"13055:65:17"},"nodeType":"YulExpressionStatement","src":"13055:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12976:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12982:6:17","type":""}],"src":"12937:189:17"},{"body":{"nodeType":"YulBlock","src":"13182:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"13249:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13293:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13300:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"13263:29:17"},"nodeType":"YulFunctionCall","src":"13263:39:17"},"nodeType":"YulExpressionStatement","src":"13263:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13202:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"13209:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13199:2:17"},"nodeType":"YulFunctionCall","src":"13199:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13214:26:17","statements":[{"nodeType":"YulAssignment","src":"13216:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13229:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13236:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13225:3:17"},"nodeType":"YulFunctionCall","src":"13225:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"13216:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"13196:2:17","statements":[]},"src":"13192:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"13170:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"13177:3:17","type":""}],"src":"13132:186:17"},{"body":{"nodeType":"YulBlock","src":"13403:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"13429:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13443:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13491:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"13459:31:17"},"nodeType":"YulFunctionCall","src":"13459:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"13447:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13510:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13533:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13561:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13543:17:17"},"nodeType":"YulFunctionCall","src":"13543:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13529:3:17"},"nodeType":"YulFunctionCall","src":"13529:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"13514:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13730:27:17","statements":[{"nodeType":"YulAssignment","src":"13732:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"13747:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13732:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13714:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"13726:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13711:2:17"},"nodeType":"YulFunctionCall","src":"13711:18:17"},"nodeType":"YulIf","src":"13708:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13799:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13816:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13844:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13826:17:17"},"nodeType":"YulFunctionCall","src":"13826:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13812:3:17"},"nodeType":"YulFunctionCall","src":"13812:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"13770:28:17"},"nodeType":"YulFunctionCall","src":"13770:80:17"},"nodeType":"YulExpressionStatement","src":"13770:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13420:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13425:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13417:2:17"},"nodeType":"YulFunctionCall","src":"13417:11:17"},"nodeType":"YulIf","src":"13414:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13379:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"13386:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"13391:10:17","type":""}],"src":"13324:543:17"},{"body":{"nodeType":"YulBlock","src":"13936:54:17","statements":[{"nodeType":"YulAssignment","src":"13946:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"13971:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"13977:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13967:3:17"},"nodeType":"YulFunctionCall","src":"13967:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13946:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"13911:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"13917:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13927:8:17","type":""}],"src":"13873:117:17"},{"body":{"nodeType":"YulBlock","src":"14047:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14057:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14106:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"14109:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14102:3:17"},"nodeType":"YulFunctionCall","src":"14102:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14121:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14117:3:17"},"nodeType":"YulFunctionCall","src":"14117:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"14073:28:17"},"nodeType":"YulFunctionCall","src":"14073:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14069:3:17"},"nodeType":"YulFunctionCall","src":"14069:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"14061:4:17","type":""}]},{"nodeType":"YulAssignment","src":"14134:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14148:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"14154:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14144:3:17"},"nodeType":"YulFunctionCall","src":"14144:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14134:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14024:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"14030:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"14040:6:17","type":""}],"src":"13996:169:17"},{"body":{"nodeType":"YulBlock","src":"14251:214:17","statements":[{"nodeType":"YulAssignment","src":"14384:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14411:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"14417:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"14392:18:17"},"nodeType":"YulFunctionCall","src":"14392:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14384:4:17"}]},{"nodeType":"YulAssignment","src":"14430:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14441:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14451:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"14454:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14447:3:17"},"nodeType":"YulFunctionCall","src":"14447:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14438:2:17"},"nodeType":"YulFunctionCall","src":"14438:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"14430:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14232:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"14238:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"14246:4:17","type":""}],"src":"14170:295:17"},{"body":{"nodeType":"YulBlock","src":"14562:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14573:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14620:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14587:32:17"},"nodeType":"YulFunctionCall","src":"14587:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"14577:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"14709:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14711:16:17"},"nodeType":"YulFunctionCall","src":"14711:18:17"},"nodeType":"YulExpressionStatement","src":"14711:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14681:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14689:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14678:2:17"},"nodeType":"YulFunctionCall","src":"14678:30:17"},"nodeType":"YulIf","src":"14675:56:17"},{"nodeType":"YulVariableDeclaration","src":"14741:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14787:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14781:5:17"},"nodeType":"YulFunctionCall","src":"14781:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14755:25:17"},"nodeType":"YulFunctionCall","src":"14755:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"14745:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14886:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"14892:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"14900:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"14840:45:17"},"nodeType":"YulFunctionCall","src":"14840:67:17"},"nodeType":"YulExpressionStatement","src":"14840:67:17"},{"nodeType":"YulVariableDeclaration","src":"14917:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14934:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"14921:9:17","type":""}]},{"nodeType":"YulAssignment","src":"14945:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14958:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14945:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15009:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15023:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15042:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15054:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15050:3:17"},"nodeType":"YulFunctionCall","src":"15050:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15038:3:17"},"nodeType":"YulFunctionCall","src":"15038:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"15027:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15074:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15120:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"15088:31:17"},"nodeType":"YulFunctionCall","src":"15088:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"15078:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15138:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15147:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15142:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15206:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15231:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15249:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15254:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15245:3:17"},"nodeType":"YulFunctionCall","src":"15245:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15239:5:17"},"nodeType":"YulFunctionCall","src":"15239:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15224:6:17"},"nodeType":"YulFunctionCall","src":"15224:42:17"},"nodeType":"YulExpressionStatement","src":"15224:42:17"},{"nodeType":"YulAssignment","src":"15283:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15297:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15305:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15293:3:17"},"nodeType":"YulFunctionCall","src":"15293:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15283:6:17"}]},{"nodeType":"YulAssignment","src":"15324:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15341:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15352:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15337:3:17"},"nodeType":"YulFunctionCall","src":"15337:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15324:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15172:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"15175:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15169:2:17"},"nodeType":"YulFunctionCall","src":"15169:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15184:21:17","statements":[{"nodeType":"YulAssignment","src":"15186:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15195:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"15198:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15191:3:17"},"nodeType":"YulFunctionCall","src":"15191:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15186:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"15165:3:17","statements":[]},"src":"15161:208:17"},{"body":{"nodeType":"YulBlock","src":"15405:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15423:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15450:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15455:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15446:3:17"},"nodeType":"YulFunctionCall","src":"15446:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15440:5:17"},"nodeType":"YulFunctionCall","src":"15440:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"15427:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15490:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"15517:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15532:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15540:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15528:3:17"},"nodeType":"YulFunctionCall","src":"15528:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"15498:18:17"},"nodeType":"YulFunctionCall","src":"15498:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15483:6:17"},"nodeType":"YulFunctionCall","src":"15483:64:17"},"nodeType":"YulExpressionStatement","src":"15483:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"15388:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"15397:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15385:2:17"},"nodeType":"YulFunctionCall","src":"15385:19:17"},"nodeType":"YulIf","src":"15382:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15581:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15595:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15603:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15591:3:17"},"nodeType":"YulFunctionCall","src":"15591:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"15607:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15587:3:17"},"nodeType":"YulFunctionCall","src":"15587:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15574:6:17"},"nodeType":"YulFunctionCall","src":"15574:36:17"},"nodeType":"YulExpressionStatement","src":"15574:36:17"}]},"nodeType":"YulCase","src":"15002:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15007:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15637:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15651:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15664:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15655:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15688:67:17","statements":[{"nodeType":"YulAssignment","src":"15706:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15725:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15730:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15721:3:17"},"nodeType":"YulFunctionCall","src":"15721:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15715:5:17"},"nodeType":"YulFunctionCall","src":"15715:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15706:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"15681:6:17"},"nodeType":"YulIf","src":"15678:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15775:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15834:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"15841:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"15781:52:17"},"nodeType":"YulFunctionCall","src":"15781:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15768:6:17"},"nodeType":"YulFunctionCall","src":"15768:81:17"},"nodeType":"YulExpressionStatement","src":"15768:81:17"}]},"nodeType":"YulCase","src":"15629:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14982:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14990:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14979:2:17"},"nodeType":"YulFunctionCall","src":"14979:14:17"},"nodeType":"YulSwitch","src":"14972:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14551:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"14557:3:17","type":""}],"src":"14470:1395:17"},{"body":{"nodeType":"YulBlock","src":"15985:34:17","statements":[{"nodeType":"YulAssignment","src":"15995:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"16010:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15995:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15957:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"15962:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15973:11:17","type":""}],"src":"15871:148:17"},{"body":{"nodeType":"YulBlock","src":"16131:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16153:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16161:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16149:3:17"},"nodeType":"YulFunctionCall","src":"16149:14:17"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"16165:25:17","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16142:6:17"},"nodeType":"YulFunctionCall","src":"16142:49:17"},"nodeType":"YulExpressionStatement","src":"16142:49:17"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16123:6:17","type":""}],"src":"16025:173:17"},{"body":{"nodeType":"YulBlock","src":"16368:238:17","statements":[{"nodeType":"YulAssignment","src":"16378:92:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16462:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16467:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16385:76:17"},"nodeType":"YulFunctionCall","src":"16385:85:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16378:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16568:3:17"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"16479:88:17"},"nodeType":"YulFunctionCall","src":"16479:93:17"},"nodeType":"YulExpressionStatement","src":"16479:93:17"},{"nodeType":"YulAssignment","src":"16581:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16592:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16597:2:17","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16588:3:17"},"nodeType":"YulFunctionCall","src":"16588:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16581:3:17"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16356:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16364:3:17","type":""}],"src":"16204:402:17"},{"body":{"nodeType":"YulBlock","src":"16722:280:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16732:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16779:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16746:32:17"},"nodeType":"YulFunctionCall","src":"16746:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16736:6:17","type":""}]},{"nodeType":"YulAssignment","src":"16794:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16878:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16883:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16801:76:17"},"nodeType":"YulFunctionCall","src":"16801:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16794:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16938:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"16945:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16934:3:17"},"nodeType":"YulFunctionCall","src":"16934:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"16952:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16957:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16899:34:17"},"nodeType":"YulFunctionCall","src":"16899:65:17"},"nodeType":"YulExpressionStatement","src":"16899:65:17"},{"nodeType":"YulAssignment","src":"16973:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16984:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16989:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16980:3:17"},"nodeType":"YulFunctionCall","src":"16980:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16973:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16703:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16710:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16718:3:17","type":""}],"src":"16612:390:17"},{"body":{"nodeType":"YulBlock","src":"17114:61:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17136:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17144:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17132:3:17"},"nodeType":"YulFunctionCall","src":"17132:14:17"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"17148:19:17","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17125:6:17"},"nodeType":"YulFunctionCall","src":"17125:43:17"},"nodeType":"YulExpressionStatement","src":"17125:43:17"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17106:6:17","type":""}],"src":"17008:167:17"},{"body":{"nodeType":"YulBlock","src":"17345:238:17","statements":[{"nodeType":"YulAssignment","src":"17355:92:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17439:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17444:2:17","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17362:76:17"},"nodeType":"YulFunctionCall","src":"17362:85:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17355:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17545:3:17"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"17456:88:17"},"nodeType":"YulFunctionCall","src":"17456:93:17"},"nodeType":"YulExpressionStatement","src":"17456:93:17"},{"nodeType":"YulAssignment","src":"17558:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17569:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17574:2:17","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17565:3:17"},"nodeType":"YulFunctionCall","src":"17565:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17558:3:17"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17333:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17341:3:17","type":""}],"src":"17181:402:17"},{"body":{"nodeType":"YulBlock","src":"17975:581:17","statements":[{"nodeType":"YulAssignment","src":"17986:155:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18137:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17993:142:17"},"nodeType":"YulFunctionCall","src":"17993:148:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17986:3:17"}]},{"nodeType":"YulAssignment","src":"18151:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18240:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"18249:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18158:81:17"},"nodeType":"YulFunctionCall","src":"18158:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18151:3:17"}]},{"nodeType":"YulAssignment","src":"18263:155:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18414:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18270:142:17"},"nodeType":"YulFunctionCall","src":"18270:148:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18263:3:17"}]},{"nodeType":"YulAssignment","src":"18428:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18517:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"18526:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18435:81:17"},"nodeType":"YulFunctionCall","src":"18435:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18428:3:17"}]},{"nodeType":"YulAssignment","src":"18540:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"18547:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18540:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17946:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17952:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17960:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17971:3:17","type":""}],"src":"17589:967:17"},{"body":{"nodeType":"YulBlock","src":"18680:195:17","statements":[{"nodeType":"YulAssignment","src":"18690:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18702:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18713:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18698:3:17"},"nodeType":"YulFunctionCall","src":"18698:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18690:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18737:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18748:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18733:3:17"},"nodeType":"YulFunctionCall","src":"18733:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18756:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"18762:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18752:3:17"},"nodeType":"YulFunctionCall","src":"18752:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18726:6:17"},"nodeType":"YulFunctionCall","src":"18726:47:17"},"nodeType":"YulExpressionStatement","src":"18726:47:17"},{"nodeType":"YulAssignment","src":"18782:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18854:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"18863:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18790:63:17"},"nodeType":"YulFunctionCall","src":"18790:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18782:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18652:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18664:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18675:4:17","type":""}],"src":"18562:313:17"},{"body":{"nodeType":"YulBlock","src":"18909:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18926:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18929:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18919:6:17"},"nodeType":"YulFunctionCall","src":"18919:88:17"},"nodeType":"YulExpressionStatement","src":"18919:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19023:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19026:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19016:6:17"},"nodeType":"YulFunctionCall","src":"19016:15:17"},"nodeType":"YulExpressionStatement","src":"19016:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19047:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19050:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19040:6:17"},"nodeType":"YulFunctionCall","src":"19040:15:17"},"nodeType":"YulExpressionStatement","src":"19040:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18881:180:17"},{"body":{"nodeType":"YulBlock","src":"19095:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19112:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19115:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19105:6:17"},"nodeType":"YulFunctionCall","src":"19105:88:17"},"nodeType":"YulExpressionStatement","src":"19105:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19209:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19212:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19202:6:17"},"nodeType":"YulFunctionCall","src":"19202:15:17"},"nodeType":"YulExpressionStatement","src":"19202:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19233:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19236:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19226:6:17"},"nodeType":"YulFunctionCall","src":"19226:15:17"},"nodeType":"YulExpressionStatement","src":"19226:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19067:180:17"},{"body":{"nodeType":"YulBlock","src":"19301:362:17","statements":[{"nodeType":"YulAssignment","src":"19311:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19334:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19316:17:17"},"nodeType":"YulFunctionCall","src":"19316:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19311:1:17"}]},{"nodeType":"YulAssignment","src":"19345:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19368:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19350:17:17"},"nodeType":"YulFunctionCall","src":"19350:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19345:1:17"}]},{"nodeType":"YulVariableDeclaration","src":"19379:28:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19402:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"19405:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19398:3:17"},"nodeType":"YulFunctionCall","src":"19398:9:17"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"19383:11:17","type":""}]},{"nodeType":"YulAssignment","src":"19416:41:17","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"19445:11:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19427:17:17"},"nodeType":"YulFunctionCall","src":"19427:30:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"19416:7:17"}]},{"body":{"nodeType":"YulBlock","src":"19634:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19636:16:17"},"nodeType":"YulFunctionCall","src":"19636:18:17"},"nodeType":"YulExpressionStatement","src":"19636:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19567:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19560:6:17"},"nodeType":"YulFunctionCall","src":"19560:9:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19590:1:17"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"19597:7:17"},{"name":"x","nodeType":"YulIdentifier","src":"19606:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19593:3:17"},"nodeType":"YulFunctionCall","src":"19593:15:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19587:2:17"},"nodeType":"YulFunctionCall","src":"19587:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19540:2:17"},"nodeType":"YulFunctionCall","src":"19540:83:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19520:6:17"},"nodeType":"YulFunctionCall","src":"19520:113:17"},"nodeType":"YulIf","src":"19517:139:17"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19284:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"19287:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"19293:7:17","type":""}],"src":"19253:410:17"},{"body":{"nodeType":"YulBlock","src":"19713:147:17","statements":[{"nodeType":"YulAssignment","src":"19723:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19746:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19728:17:17"},"nodeType":"YulFunctionCall","src":"19728:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19723:1:17"}]},{"nodeType":"YulAssignment","src":"19757:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19780:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19762:17:17"},"nodeType":"YulFunctionCall","src":"19762:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19757:1:17"}]},{"nodeType":"YulAssignment","src":"19791:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19802:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"19805:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19798:3:17"},"nodeType":"YulFunctionCall","src":"19798:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19791:3:17"}]},{"body":{"nodeType":"YulBlock","src":"19831:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19833:16:17"},"nodeType":"YulFunctionCall","src":"19833:18:17"},"nodeType":"YulExpressionStatement","src":"19833:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19823:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"19826:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19820:2:17"},"nodeType":"YulFunctionCall","src":"19820:10:17"},"nodeType":"YulIf","src":"19817:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19700:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"19703:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19709:3:17","type":""}],"src":"19669:191:17"},{"body":{"nodeType":"YulBlock","src":"19909:128:17","statements":[{"nodeType":"YulAssignment","src":"19919:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19946:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19928:17:17"},"nodeType":"YulFunctionCall","src":"19928:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19919:5:17"}]},{"body":{"nodeType":"YulBlock","src":"19980:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19982:16:17"},"nodeType":"YulFunctionCall","src":"19982:18:17"},"nodeType":"YulExpressionStatement","src":"19982:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19967:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"19974:4:17","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19964:2:17"},"nodeType":"YulFunctionCall","src":"19964:15:17"},"nodeType":"YulIf","src":"19961:41:17"},{"nodeType":"YulAssignment","src":"20011:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20022:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20029:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20018:3:17"},"nodeType":"YulFunctionCall","src":"20018:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20011:3:17"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19895:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19905:3:17","type":""}],"src":"19866:171:17"},{"body":{"nodeType":"YulBlock","src":"20149:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20171:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20179:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20167:3:17"},"nodeType":"YulFunctionCall","src":"20167:14:17"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"20183:34:17","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20160:6:17"},"nodeType":"YulFunctionCall","src":"20160:58:17"},"nodeType":"YulExpressionStatement","src":"20160:58:17"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20141:6:17","type":""}],"src":"20043:182:17"},{"body":{"nodeType":"YulBlock","src":"20377:220:17","statements":[{"nodeType":"YulAssignment","src":"20387:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20453:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20458:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20394:58:17"},"nodeType":"YulFunctionCall","src":"20394:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20387:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20559:3:17"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"20470:88:17"},"nodeType":"YulFunctionCall","src":"20470:93:17"},"nodeType":"YulExpressionStatement","src":"20470:93:17"},{"nodeType":"YulAssignment","src":"20572:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20583:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20588:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20579:3:17"},"nodeType":"YulFunctionCall","src":"20579:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20572:3:17"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20365:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20373:3:17","type":""}],"src":"20231:366:17"},{"body":{"nodeType":"YulBlock","src":"20774:248:17","statements":[{"nodeType":"YulAssignment","src":"20784:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20796:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20807:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20792:3:17"},"nodeType":"YulFunctionCall","src":"20792:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20784:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20831:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20842:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20827:3:17"},"nodeType":"YulFunctionCall","src":"20827:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20850:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20856:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20846:3:17"},"nodeType":"YulFunctionCall","src":"20846:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20820:6:17"},"nodeType":"YulFunctionCall","src":"20820:47:17"},"nodeType":"YulExpressionStatement","src":"20820:47:17"},{"nodeType":"YulAssignment","src":"20876:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21010:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20884:124:17"},"nodeType":"YulFunctionCall","src":"20884:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20876:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20754:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20769:4:17","type":""}],"src":"20603:419:17"},{"body":{"nodeType":"YulBlock","src":"21073:149:17","statements":[{"nodeType":"YulAssignment","src":"21083:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21106:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21088:17:17"},"nodeType":"YulFunctionCall","src":"21088:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21083:1:17"}]},{"nodeType":"YulAssignment","src":"21117:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21140:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21122:17:17"},"nodeType":"YulFunctionCall","src":"21122:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21117:1:17"}]},{"nodeType":"YulAssignment","src":"21151:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21163:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"21166:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21159:3:17"},"nodeType":"YulFunctionCall","src":"21159:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21151:4:17"}]},{"body":{"nodeType":"YulBlock","src":"21193:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21195:16:17"},"nodeType":"YulFunctionCall","src":"21195:18:17"},"nodeType":"YulExpressionStatement","src":"21195:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"21184:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"21190:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21181:2:17"},"nodeType":"YulFunctionCall","src":"21181:11:17"},"nodeType":"YulIf","src":"21178:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21059:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"21062:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21068:4:17","type":""}],"src":"21028:194:17"},{"body":{"nodeType":"YulBlock","src":"21256:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21273:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21276:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21266:6:17"},"nodeType":"YulFunctionCall","src":"21266:88:17"},"nodeType":"YulExpressionStatement","src":"21266:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21370:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21373:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21363:6:17"},"nodeType":"YulFunctionCall","src":"21363:15:17"},"nodeType":"YulExpressionStatement","src":"21363:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21394:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21397:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21387:6:17"},"nodeType":"YulFunctionCall","src":"21387:15:17"},"nodeType":"YulExpressionStatement","src":"21387:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"21228:180:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806391d1485411610097578063b46beb4f11610066578063b46beb4f146102d4578063ca15c873146102f0578063d547741f14610320578063efcd473c1461033c57610100565b806391d148541461024c5780639e8cb6bd1461027c578063a217fddf1461029a578063abb0688f146102b857610100565b806334efe036116100d357806334efe0361461019f57806336568abe146101cf5780636138fede146101eb5780639010d07c1461021c57610100565b806301ffc9a7146101055780632220de2114610135578063248a9ca3146101535780632f2ff15d14610183575b600080fd5b61011f600480360381019061011a91906111c2565b610358565b60405161012c919061120a565b60405180910390f35b61013d6103d2565b60405161014a919061123e565b60405180910390f35b61016d60048036038101906101689190611285565b6103f6565b60405161017a919061123e565b60405180910390f35b61019d60048036038101906101989190611310565b610415565b005b6101b960048036038101906101b49190611285565b610436565b6040516101c6919061120a565b60405180910390f35b6101e960048036038101906101e49190611310565b610460565b005b61020560048036038101906102009190611386565b6104e3565b604051610213929190611443565b60405180910390f35b61023660048036038101906102319190611473565b6105ec565b60405161024391906114c2565b60405180910390f35b61026660048036038101906102619190611310565b61061b565b604051610273919061120a565b60405180910390f35b610284610685565b60405161029191906114ec565b60405180910390f35b6102a2610696565b6040516102af919061123e565b60405180910390f35b6102d260048036038101906102cd919061163c565b61069d565b005b6102ee60048036038101906102e99190611698565b6107ee565b005b61030a60048036038101906103059190611285565b610829565b60405161031791906114ec565b60405180910390f35b61033a60048036038101906103359190611310565b61084d565b005b61035660048036038101906103519190611698565b61086e565b005b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103cb57506103ca826108a9565b5b9050919050565b7f9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d681565b6000806000838152602001908152602001600020600101549050919050565b61041e826103f6565b61042781610923565b6104318383610937565b505050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b61046861096b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc90611737565b60405180910390fd5b6104df8282610973565b5050565b606060006104f160026109a7565b83111561052a576040517f22f7b18c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036000848152602001908152602001600020600001600360008581526020019081526020016000206001015481805461056390611786565b80601f016020809104026020016040519081016040528092919081815260200182805461058f90611786565b80156105dc5780601f106105b1576101008083540402835291602001916105dc565b820191906000526020600020905b8154815290600101906020018083116105bf57829003601f168201915b5050505050915091509150915091565b600061061382600160008681526020019081526020016000206109b590919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061069160026109a7565b905090565b6000801b81565b7f9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d66106c781610923565b6004600083815260200190815260200160002060009054906101000a900460ff161561071f576040517f9e2c202000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061072b60026109a7565b905060405180604001604052808581526020018481525060036000838152602001908152602001600020600082015181600001908161076a9190611963565b506020820151816001015590505060016004600085815260200190815260200160002060006101000a81548160ff0219169083151502179055506107ae60026109cf565b807f3652677d7cefd12c889b15a7ced31cc0e0d120417a9febcb93eddf8ce7b43f9885856040516107e0929190611443565b60405180910390a250505050565b6000801b6107fb81610923565b6108257f9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d683610415565b5050565b6000610846600160008481526020019081526020016000206109e5565b9050919050565b610856826103f6565b61085f81610923565b6108698383610973565b505050565b6000801b61087b81610923565b6108a57f9bd7b39e404ec8163ddb5278c0044198ca50a2bf864985cbc93f934a5afed5d68361084d565b5050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061091c575061091b826109fa565b5b9050919050565b6109348161092f61096b565b610a64565b50565b6109418282610ae9565b6109668160016000858152602001908152602001600020610bc990919063ffffffff16565b505050565b600033905090565b61097d8282610bf9565b6109a28160016000858152602001908152602001600020610cda90919063ffffffff16565b505050565b600081600001549050919050565b60006109c48360000183610d0a565b60001c905092915050565b6001816000016000828254019250508190555050565b60006109f382600001610d35565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a6e828261061b565b610ae557610a7b81610d46565b610a898360001c6020610d73565b604051602001610a9a929190611b09565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc9190611b43565b60405180910390fd5b5050565b610af3828261061b565b610bc557600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b6a61096b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000610bf1836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610faf565b905092915050565b610c03828261061b565b15610cd657600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c7b61096b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000610d02836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61101f565b905092915050565b6000826000018281548110610d2257610d21611b65565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b6060610d6c8273ffffffffffffffffffffffffffffffffffffffff16601460ff16610d73565b9050919050565b606060006002836002610d869190611bc3565b610d909190611c05565b67ffffffffffffffff811115610da957610da8611511565b5b6040519080825280601f01601f191660200182016040528015610ddb5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e1357610e12611b65565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610e7757610e76611b65565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610eb79190611bc3565b610ec19190611c05565b90505b6001811115610f61577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610f0357610f02611b65565b5b1a60f81b828281518110610f1a57610f19611b65565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610f5a90611c39565b9050610ec4565b5060008414610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c90611cae565b60405180910390fd5b8091505092915050565b6000610fbb8383611133565b611014578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611019565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146111275760006001826110519190611cce565b90506000600186600001805490506110699190611cce565b90508181146110d857600086600001828154811061108a57611089611b65565b5b90600052602060002001549050808760000184815481106110ae576110ad611b65565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806110ec576110eb611d02565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061112d565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61119f8161116a565b81146111aa57600080fd5b50565b6000813590506111bc81611196565b92915050565b6000602082840312156111d8576111d7611160565b5b60006111e6848285016111ad565b91505092915050565b60008115159050919050565b611204816111ef565b82525050565b600060208201905061121f60008301846111fb565b92915050565b6000819050919050565b61123881611225565b82525050565b6000602082019050611253600083018461122f565b92915050565b61126281611225565b811461126d57600080fd5b50565b60008135905061127f81611259565b92915050565b60006020828403121561129b5761129a611160565b5b60006112a984828501611270565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112dd826112b2565b9050919050565b6112ed816112d2565b81146112f857600080fd5b50565b60008135905061130a816112e4565b92915050565b6000806040838503121561132757611326611160565b5b600061133585828601611270565b9250506020611346858286016112fb565b9150509250929050565b6000819050919050565b61136381611350565b811461136e57600080fd5b50565b6000813590506113808161135a565b92915050565b60006020828403121561139c5761139b611160565b5b60006113aa84828501611371565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113ed5780820151818401526020810190506113d2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611415826113b3565b61141f81856113be565b935061142f8185602086016113cf565b611438816113f9565b840191505092915050565b6000604082019050818103600083015261145d818561140a565b905061146c602083018461122f565b9392505050565b6000806040838503121561148a57611489611160565b5b600061149885828601611270565b92505060206114a985828601611371565b9150509250929050565b6114bc816112d2565b82525050565b60006020820190506114d760008301846114b3565b92915050565b6114e681611350565b82525050565b600060208201905061150160008301846114dd565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611549826113f9565b810181811067ffffffffffffffff8211171561156857611567611511565b5b80604052505050565b600061157b611156565b90506115878282611540565b919050565b600067ffffffffffffffff8211156115a7576115a6611511565b5b6115b0826113f9565b9050602081019050919050565b82818337600083830152505050565b60006115df6115da8461158c565b611571565b9050828152602081018484840111156115fb576115fa61150c565b5b6116068482856115bd565b509392505050565b600082601f83011261162357611622611507565b5b81356116338482602086016115cc565b91505092915050565b6000806040838503121561165357611652611160565b5b600083013567ffffffffffffffff81111561167157611670611165565b5b61167d8582860161160e565b925050602061168e85828601611270565b9150509250929050565b6000602082840312156116ae576116ad611160565b5b60006116bc848285016112fb565b91505092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611721602f836113be565b915061172c826116c5565b604082019050919050565b6000602082019050818103600083015261175081611714565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061179e57607f821691505b6020821081036117b1576117b0611757565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117dc565b61182386836117dc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061186061185b61185684611350565b61183b565b611350565b9050919050565b6000819050919050565b61187a83611845565b61188e61188682611867565b8484546117e9565b825550505050565b600090565b6118a3611896565b6118ae818484611871565b505050565b5b818110156118d2576118c760008261189b565b6001810190506118b4565b5050565b601f821115611917576118e8816117b7565b6118f1846117cc565b81016020851015611900578190505b61191461190c856117cc565b8301826118b3565b50505b505050565b600082821c905092915050565b600061193a6000198460080261191c565b1980831691505092915050565b60006119538383611929565b9150826002028217905092915050565b61196c826113b3565b67ffffffffffffffff81111561198557611984611511565b5b61198f8254611786565b61199a8282856118d6565b600060209050601f8311600181146119cd57600084156119bb578287015190505b6119c58582611947565b865550611a2d565b601f1984166119db866117b7565b60005b82811015611a03578489015182556001820191506020850194506020810190506119de565b86831015611a205784890151611a1c601f891682611929565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611a76601783611a35565b9150611a8182611a40565b601782019050919050565b6000611a97826113b3565b611aa18185611a35565b9350611ab18185602086016113cf565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611af3601183611a35565b9150611afe82611abd565b601182019050919050565b6000611b1482611a69565b9150611b208285611a8c565b9150611b2b82611ae6565b9150611b378284611a8c565b91508190509392505050565b60006020820190508181036000830152611b5d818461140a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bce82611350565b9150611bd983611350565b9250828202611be781611350565b91508282048414831517611bfe57611bfd611b94565b5b5092915050565b6000611c1082611350565b9150611c1b83611350565b9250828201905080821115611c3357611c32611b94565b5b92915050565b6000611c4482611350565b915060008203611c5757611c56611b94565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611c986020836113be565b9150611ca382611c62565b602082019050919050565b60006020820190508181036000830152611cc781611c8b565b9050919050565b6000611cd982611350565b9150611ce483611350565b9250828203905081811115611cfc57611cfb611b94565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220bb5a88d03b87fef7ff04e24cf544025cc57fef33a4bec420bba6eb164e97fc6364736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB46BEB4F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB46BEB4F EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xEFCD473C EQ PUSH2 0x33C JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x9E8CB6BD EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xABB0688F EQ PUSH2 0x2B8 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x34EFE036 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x34EFE036 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x6138FEDE EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x21C JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2220DE21 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP3 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3CB JUMPI POP PUSH2 0x3CA DUP3 PUSH2 0x8A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9BD7B39E404EC8163DDB5278C0044198CA50A2BF864985CBC93F934A5AFED5D6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41E DUP3 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x431 DUP4 DUP4 PUSH2 0x937 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x468 PUSH2 0x96B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DF DUP3 DUP3 PUSH2 0x973 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x4F1 PUSH1 0x2 PUSH2 0x9A7 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0x22F7B18C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 DUP1 SLOAD PUSH2 0x563 SWAP1 PUSH2 0x1786 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x1786 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x613 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x9B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x691 PUSH1 0x2 PUSH2 0x9A7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x9BD7B39E404EC8163DDB5278C0044198CA50A2BF864985CBC93F934A5AFED5D6 PUSH2 0x6C7 DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH32 0x9E2C202000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x72B PUSH1 0x2 PUSH2 0x9A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x7AE PUSH1 0x2 PUSH2 0x9CF JUMP JUMPDEST DUP1 PUSH32 0x3652677D7CEFD12C889B15A7CED31CC0E0D120417A9FEBCB93EDDF8CE7B43F98 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x7E0 SWAP3 SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x7FB DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x825 PUSH32 0x9BD7B39E404EC8163DDB5278C0044198CA50A2BF864985CBC93F934A5AFED5D6 DUP4 PUSH2 0x415 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x846 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x856 DUP3 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x85F DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x869 DUP4 DUP4 PUSH2 0x973 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x87B DUP2 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x8A5 PUSH32 0x9BD7B39E404EC8163DDB5278C0044198CA50A2BF864985CBC93F934A5AFED5D6 DUP4 PUSH2 0x84D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x91C JUMPI POP PUSH2 0x91B DUP3 PUSH2 0x9FA JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0x92F PUSH2 0x96B JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x941 DUP3 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x966 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xBC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x97D DUP3 DUP3 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x9A2 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xCDA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C4 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH1 0x0 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6E DUP3 DUP3 PUSH2 0x61B JUMP JUMPDEST PUSH2 0xAE5 JUMPI PUSH2 0xA7B DUP2 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0xA89 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA9A SWAP3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAF3 DUP3 DUP3 PUSH2 0x61B JUMP JUMPDEST PUSH2 0xBC5 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB6A PUSH2 0x96B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF1 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC03 DUP3 DUP3 PUSH2 0x61B JUMP JUMPDEST ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC7B PUSH2 0x96B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD02 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD22 JUMPI PUSH2 0xD21 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD6C DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xD73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xD86 SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0xD90 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA9 JUMPI PUSH2 0xDA8 PUSH2 0x1511 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDDB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xEB7 SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF61 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xF03 JUMPI PUSH2 0xF02 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xF5A SWAP1 PUSH2 0x1C39 JUMP JUMPDEST SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP1 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBB DUP4 DUP4 PUSH2 0x1133 JUMP JUMPDEST PUSH2 0x1014 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1127 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1051 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x10D8 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x108A JUMPI PUSH2 0x1089 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10AE JUMPI PUSH2 0x10AD PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x10EC JUMPI PUSH2 0x10EB PUSH2 0x1D02 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x112D JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119F DUP2 PUSH2 0x116A JUMP JUMPDEST DUP2 EQ PUSH2 0x11AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11BC DUP2 PUSH2 0x1196 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11D7 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11E6 DUP5 DUP3 DUP6 ADD PUSH2 0x11AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0x11EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x121F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1238 DUP2 PUSH2 0x1225 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1253 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x122F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0x1225 JUMP JUMPDEST DUP2 EQ PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127F DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129B JUMPI PUSH2 0x129A PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A9 DUP5 DUP3 DUP6 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DD DUP3 PUSH2 0x12B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12ED DUP2 PUSH2 0x12D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x130A DUP2 PUSH2 0x12E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1327 JUMPI PUSH2 0x1326 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1335 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1346 DUP6 DUP3 DUP7 ADD PUSH2 0x12FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1363 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP2 EQ PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1380 DUP2 PUSH2 0x135A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13AA DUP5 DUP3 DUP6 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13ED JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1415 DUP3 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x141F DUP2 DUP6 PUSH2 0x13BE JUMP JUMPDEST SWAP4 POP PUSH2 0x142F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x1438 DUP2 PUSH2 0x13F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x145D DUP2 DUP6 PUSH2 0x140A JUMP JUMPDEST SWAP1 POP PUSH2 0x146C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x122F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH2 0x1489 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1498 DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BC DUP2 PUSH2 0x12D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E6 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1501 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1549 DUP3 PUSH2 0x13F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1567 PUSH2 0x1511 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157B PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP PUSH2 0x1587 DUP3 DUP3 PUSH2 0x1540 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x1511 JUMP JUMPDEST JUMPDEST PUSH2 0x15B0 DUP3 PUSH2 0x13F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DF PUSH2 0x15DA DUP5 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x1571 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15FB JUMPI PUSH2 0x15FA PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH2 0x1606 DUP5 DUP3 DUP6 PUSH2 0x15BD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1623 JUMPI PUSH2 0x1622 PUSH2 0x1507 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1633 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1671 JUMPI PUSH2 0x1670 PUSH2 0x1165 JUMP JUMPDEST JUMPDEST PUSH2 0x167D DUP6 DUP3 DUP7 ADD PUSH2 0x160E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x168E DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AE JUMPI PUSH2 0x16AD PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BC DUP5 DUP3 DUP6 ADD PUSH2 0x12FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1721 PUSH1 0x2F DUP4 PUSH2 0x13BE JUMP JUMPDEST SWAP2 POP PUSH2 0x172C DUP3 PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1750 DUP2 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x179E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17B1 JUMPI PUSH2 0x17B0 PUSH2 0x1757 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1819 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0x1823 DUP7 DUP4 PUSH2 0x17DC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1860 PUSH2 0x185B PUSH2 0x1856 DUP5 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0x183B JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187A DUP4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x188E PUSH2 0x1886 DUP3 PUSH2 0x1867 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x17E9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x18A3 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x18AE DUP2 DUP5 DUP5 PUSH2 0x1871 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D2 JUMPI PUSH2 0x18C7 PUSH1 0x0 DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1917 JUMPI PUSH2 0x18E8 DUP2 PUSH2 0x17B7 JUMP JUMPDEST PUSH2 0x18F1 DUP5 PUSH2 0x17CC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1900 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1914 PUSH2 0x190C DUP6 PUSH2 0x17CC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x18B3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x191C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP4 DUP4 PUSH2 0x1929 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196C DUP3 PUSH2 0x13B3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1985 JUMPI PUSH2 0x1984 PUSH2 0x1511 JUMP JUMPDEST JUMPDEST PUSH2 0x198F DUP3 SLOAD PUSH2 0x1786 JUMP JUMPDEST PUSH2 0x199A DUP3 DUP3 DUP6 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x19CD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x19BB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x19C5 DUP6 DUP3 PUSH2 0x1947 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x19DB DUP7 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A03 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19DE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1A20 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1A1C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1929 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A76 PUSH1 0x17 DUP4 PUSH2 0x1A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A81 DUP3 PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A97 DUP3 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x1AA1 DUP2 DUP6 PUSH2 0x1A35 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AB1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13CF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF3 PUSH1 0x11 DUP4 PUSH2 0x1A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFE DUP3 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B14 DUP3 PUSH2 0x1A69 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B20 DUP3 DUP6 PUSH2 0x1A8C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2B DUP3 PUSH2 0x1AE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B37 DUP3 DUP5 PUSH2 0x1A8C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B5D DUP2 DUP5 PUSH2 0x140A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BCE DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD9 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1BE7 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BFE JUMPI PUSH2 0x1BFD PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C10 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1B DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C33 JUMPI PUSH2 0x1C32 PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C44 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1C57 JUMPI PUSH2 0x1C56 PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C98 PUSH1 0x20 DUP4 PUSH2 0x13BE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA3 DUP3 PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC7 DUP2 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 DUP3 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP4 PUSH2 0x1350 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB GAS DUP9 0xD0 EXTCODESIZE DUP8 INVALID 0xF7 SELFDESTRUCT DIV 0xE2 0x4C CREATE2 PREVRANDAO MUL 0x5C 0xC5 PUSH32 0xEF33A4BEC420BBA6EB164E97FC6364736F6C6343000813003300000000000000 ","sourceMap":"277:2174:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:62:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4929:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2334:114:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6038:214:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1950:265:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1431:151:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2223:103:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1495:447:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1181:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1750:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1343:144:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;634:212:1;719:4;757:42;742:57;;;:11;:57;;;;:97;;;;803:36;827:11;803:23;:36::i;:::-;742:97;735:104;;634:212;;;:::o;614:62:13:-;652:24;614:62;:::o;4504:129:0:-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;4929:145::-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;2334:114:13:-;2399:4;2423:10;:17;2434:5;2423:17;;;;;;;;;;;;;;;;;;;;;2416:24;;2334:114;;;:::o;6038:214:0:-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;1950:265:13:-;2023:13;2038:7;2068:21;:11;:19;:21::i;:::-;2061:4;:28;2058:81;;;2112:15;;;;;;;;;;;;;;2058:81;2157:10;:16;2168:4;2157:16;;;;;;;;;;;:23;;2182:10;:16;2193:4;2182:16;;;;;;;;;;;:24;;;2149:58;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:265;;;:::o;1431:151:1:-;1521:7;1547:28;1569:5;1547:12;:18;1560:4;1547:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1540:35;;1431:151;;;;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2223:103:13:-;2270:7;2297:21;:11;:19;:21::i;:::-;2290:28;;2223:103;:::o;2153:49:0:-;2198:4;2153:49;;;:::o;1495:447:13:-;652:24;2631:16:0;2642:4;2631:10;:16::i;:::-;1624:10:13::1;:17;1635:5;1624:17;;;;;;;;;;;;;;;;;;;;;1621:77;;;1664:22;;;;;;;;;;;;;;1621:77;1708:15;1726:21;:11;:19;:21::i;:::-;1708:39;;1780:35;;;;;;;;1793:4;1780:35;;;;1808:5;1780:35;;::::0;1758:10:::1;:19;1769:7;1758:19;;;;;;;;;;;:57;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1846:4;1826:10;:17;1837:5;1826:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1861:23;:11;:21;:23::i;:::-;1913:7;1900:34;1922:4;1928:5;1900:34;;;;;;;:::i;:::-;;;;;;;;1610:332;1495:447:::0;;;:::o;1181:156::-;2198:4:0;1263:18:13;;2631:16:0;2642:4;2631:10;:16::i;:::-;1294:35:13::1;652:24;1317:11;1294:9;:35::i;:::-;1181:156:::0;;:::o;1750:140:1:-;1830:7;1856:27;:12;:18;1869:4;1856:18;;;;;;;;;;;:25;:27::i;:::-;1849:34;;1750:140;;;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;1343:144:13:-;2198:4:0;1413:18:13;;2631:16:0;2642:4;2631:10;:16::i;:::-;1444:35:13::1;652:24;1467:11;1444:10;:35::i;:::-;1343:144:::0;;:::o;2732:202:0:-;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;3460:103::-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106;2129:7;2106:12;:18;2119:4;2106:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;1978:166;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;2233:171:1:-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:34;2389:7;2363:12;:18;2376:4;2363:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2233:171;;:::o;827:112:6:-;892:7;918;:14;;;911:21;;827:112;;;:::o;9563:156:12:-;9637:7;9687:22;9691:3;:10;;9703:5;9687:3;:22::i;:::-;9679:31;;9656:56;;9563:156;;;;:::o;945:123:6:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;9106:115:12:-;9169:7;9195:19;9203:3;:10;;9195:7;:19::i;:::-;9188:26;;9106:115;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;8305:150:12:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;:::o;7991:234:0:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;8623:156:12:-;8696:4;8719:53;8727:3;:10;;8763:5;8747:23;;8739:32;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;:::o;4912:118::-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;;4998:25;;4912:118;;;;:::o;4463:107::-;4519:7;4545:3;:11;;:18;;;;4538:25;;4463:107;;;:::o;2407:149:7:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;2214:404:12:-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;2786:1388::-;2852:4;2968:18;2989:3;:12;;:19;3002:5;2989:19;;;;;;;;;;;;2968:40;;3037:1;3023:10;:15;3019:1149;;3392:21;3429:1;3416:10;:14;;;;:::i;:::-;3392:38;;3444:17;3485:1;3464:3;:11;;:18;;;;:22;;;;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3831:10;3805:3;:12;;:23;3818:9;3805:23;;;;;;;;;;;:36;;;;3533:366;3501:398;3977:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;2786:1388;;;;;:::o;4255:127::-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:63;;2065:1;2062;2055:12;2006:63;1953:122;:::o;2081:139::-;2127:5;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2081:139;;;;:::o;2226:329::-;2285:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:119;;;2340:79;;:::i;:::-;2302:119;2460:1;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2431:117;2226:329;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:77::-;3585:7;3614:5;3603:16;;3548:77;;;:::o;3631:122::-;3704:24;3722:5;3704:24;:::i;:::-;3697:5;3694:35;3684:63;;3743:1;3740;3733:12;3684:63;3631:122;:::o;3759:139::-;3805:5;3843:6;3830:20;3821:29;;3859:33;3886:5;3859:33;:::i;:::-;3759:139;;;;:::o;3904:329::-;3963:6;4012:2;4000:9;3991:7;3987:23;3983:32;3980:119;;;4018:79;;:::i;:::-;3980:119;4138:1;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4109:117;3904:329;;;;:::o;4239:99::-;4291:6;4325:5;4319:12;4309:22;;4239:99;;;:::o;4344:169::-;4428:11;4462:6;4457:3;4450:19;4502:4;4497:3;4493:14;4478:29;;4344:169;;;;:::o;4519:246::-;4600:1;4610:113;4624:6;4621:1;4618:13;4610:113;;;4709:1;4704:3;4700:11;4694:18;4690:1;4685:3;4681:11;4674:39;4646:2;4643:1;4639:10;4634:15;;4610:113;;;4757:1;4748:6;4743:3;4739:16;4732:27;4581:184;4519:246;;;:::o;4771:102::-;4812:6;4863:2;4859:7;4854:2;4847:5;4843:14;4839:28;4829:38;;4771:102;;;:::o;4879:377::-;4967:3;4995:39;5028:5;4995:39;:::i;:::-;5050:71;5114:6;5109:3;5050:71;:::i;:::-;5043:78;;5130:65;5188:6;5183:3;5176:4;5169:5;5165:16;5130:65;:::i;:::-;5220:29;5242:6;5220:29;:::i;:::-;5215:3;5211:39;5204:46;;4971:285;4879:377;;;;:::o;5262:423::-;5403:4;5441:2;5430:9;5426:18;5418:26;;5490:9;5484:4;5480:20;5476:1;5465:9;5461:17;5454:47;5518:78;5591:4;5582:6;5518:78;:::i;:::-;5510:86;;5606:72;5674:2;5663:9;5659:18;5650:6;5606:72;:::i;:::-;5262:423;;;;;:::o;5691:474::-;5759:6;5767;5816:2;5804:9;5795:7;5791:23;5787:32;5784:119;;;5822:79;;:::i;:::-;5784:119;5942:1;5967:53;6012:7;6003:6;5992:9;5988:22;5967:53;:::i;:::-;5957:63;;5913:117;6069:2;6095:53;6140:7;6131:6;6120:9;6116:22;6095:53;:::i;:::-;6085:63;;6040:118;5691:474;;;;;:::o;6171:118::-;6258:24;6276:5;6258:24;:::i;:::-;6253:3;6246:37;6171:118;;:::o;6295:222::-;6388:4;6426:2;6415:9;6411:18;6403:26;;6439:71;6507:1;6496:9;6492:17;6483:6;6439:71;:::i;:::-;6295:222;;;;:::o;6523:118::-;6610:24;6628:5;6610:24;:::i;:::-;6605:3;6598:37;6523:118;;:::o;6647:222::-;6740:4;6778:2;6767:9;6763:18;6755:26;;6791:71;6859:1;6848:9;6844:17;6835:6;6791:71;:::i;:::-;6647:222;;;;:::o;6875:117::-;6984:1;6981;6974:12;6998:117;7107:1;7104;7097:12;7121:180;7169:77;7166:1;7159:88;7266:4;7263:1;7256:15;7290:4;7287:1;7280:15;7307:281;7390:27;7412:4;7390:27;:::i;:::-;7382:6;7378:40;7520:6;7508:10;7505:22;7484:18;7472:10;7469:34;7466:62;7463:88;;;7531:18;;:::i;:::-;7463:88;7571:10;7567:2;7560:22;7350:238;7307:281;;:::o;7594:129::-;7628:6;7655:20;;:::i;:::-;7645:30;;7684:33;7712:4;7704:6;7684:33;:::i;:::-;7594:129;;;:::o;7729:308::-;7791:4;7881:18;7873:6;7870:30;7867:56;;;7903:18;;:::i;:::-;7867:56;7941:29;7963:6;7941:29;:::i;:::-;7933:37;;8025:4;8019;8015:15;8007:23;;7729:308;;;:::o;8043:146::-;8140:6;8135:3;8130;8117:30;8181:1;8172:6;8167:3;8163:16;8156:27;8043:146;;;:::o;8195:425::-;8273:5;8298:66;8314:49;8356:6;8314:49;:::i;:::-;8298:66;:::i;:::-;8289:75;;8387:6;8380:5;8373:21;8425:4;8418:5;8414:16;8463:3;8454:6;8449:3;8445:16;8442:25;8439:112;;;8470:79;;:::i;:::-;8439:112;8560:54;8607:6;8602:3;8597;8560:54;:::i;:::-;8279:341;8195:425;;;;;:::o;8640:340::-;8696:5;8745:3;8738:4;8730:6;8726:17;8722:27;8712:122;;8753:79;;:::i;:::-;8712:122;8870:6;8857:20;8895:79;8970:3;8962:6;8955:4;8947:6;8943:17;8895:79;:::i;:::-;8886:88;;8702:278;8640:340;;;;:::o;8986:654::-;9064:6;9072;9121:2;9109:9;9100:7;9096:23;9092:32;9089:119;;;9127:79;;:::i;:::-;9089:119;9275:1;9264:9;9260:17;9247:31;9305:18;9297:6;9294:30;9291:117;;;9327:79;;:::i;:::-;9291:117;9432:63;9487:7;9478:6;9467:9;9463:22;9432:63;:::i;:::-;9422:73;;9218:287;9544:2;9570:53;9615:7;9606:6;9595:9;9591:22;9570:53;:::i;:::-;9560:63;;9515:118;8986:654;;;;;:::o;9646:329::-;9705:6;9754:2;9742:9;9733:7;9729:23;9725:32;9722:119;;;9760:79;;:::i;:::-;9722:119;9880:1;9905:53;9950:7;9941:6;9930:9;9926:22;9905:53;:::i;:::-;9895:63;;9851:117;9646:329;;;;:::o;9981:234::-;10121:34;10117:1;10109:6;10105:14;10098:58;10190:17;10185:2;10177:6;10173:15;10166:42;9981:234;:::o;10221:366::-;10363:3;10384:67;10448:2;10443:3;10384:67;:::i;:::-;10377:74;;10460:93;10549:3;10460:93;:::i;:::-;10578:2;10573:3;10569:12;10562:19;;10221:366;;;:::o;10593:419::-;10759:4;10797:2;10786:9;10782:18;10774:26;;10846:9;10840:4;10836:20;10832:1;10821:9;10817:17;10810:47;10874:131;11000:4;10874:131;:::i;:::-;10866:139;;10593:419;;;:::o;11018:180::-;11066:77;11063:1;11056:88;11163:4;11160:1;11153:15;11187:4;11184:1;11177:15;11204:320;11248:6;11285:1;11279:4;11275:12;11265:22;;11332:1;11326:4;11322:12;11353:18;11343:81;;11409:4;11401:6;11397:17;11387:27;;11343:81;11471:2;11463:6;11460:14;11440:18;11437:38;11434:84;;11490:18;;:::i;:::-;11434:84;11255:269;11204:320;;;:::o;11530:141::-;11579:4;11602:3;11594:11;;11625:3;11622:1;11615:14;11659:4;11656:1;11646:18;11638:26;;11530:141;;;:::o;11677:93::-;11714:6;11761:2;11756;11749:5;11745:14;11741:23;11731:33;;11677:93;;;:::o;11776:107::-;11820:8;11870:5;11864:4;11860:16;11839:37;;11776:107;;;;:::o;11889:393::-;11958:6;12008:1;11996:10;11992:18;12031:97;12061:66;12050:9;12031:97;:::i;:::-;12149:39;12179:8;12168:9;12149:39;:::i;:::-;12137:51;;12221:4;12217:9;12210:5;12206:21;12197:30;;12270:4;12260:8;12256:19;12249:5;12246:30;12236:40;;11965:317;;11889:393;;;;;:::o;12288:60::-;12316:3;12337:5;12330:12;;12288:60;;;:::o;12354:142::-;12404:9;12437:53;12455:34;12464:24;12482:5;12464:24;:::i;:::-;12455:34;:::i;:::-;12437:53;:::i;:::-;12424:66;;12354:142;;;:::o;12502:75::-;12545:3;12566:5;12559:12;;12502:75;;;:::o;12583:269::-;12693:39;12724:7;12693:39;:::i;:::-;12754:91;12803:41;12827:16;12803:41;:::i;:::-;12795:6;12788:4;12782:11;12754:91;:::i;:::-;12748:4;12741:105;12659:193;12583:269;;;:::o;12858:73::-;12903:3;12858:73;:::o;12937:189::-;13014:32;;:::i;:::-;13055:65;13113:6;13105;13099:4;13055:65;:::i;:::-;12990:136;12937:189;;:::o;13132:186::-;13192:120;13209:3;13202:5;13199:14;13192:120;;;13263:39;13300:1;13293:5;13263:39;:::i;:::-;13236:1;13229:5;13225:13;13216:22;;13192:120;;;13132:186;;:::o;13324:543::-;13425:2;13420:3;13417:11;13414:446;;;13459:38;13491:5;13459:38;:::i;:::-;13543:29;13561:10;13543:29;:::i;:::-;13533:8;13529:44;13726:2;13714:10;13711:18;13708:49;;;13747:8;13732:23;;13708:49;13770:80;13826:22;13844:3;13826:22;:::i;:::-;13816:8;13812:37;13799:11;13770:80;:::i;:::-;13429:431;;13414:446;13324:543;;;:::o;13873:117::-;13927:8;13977:5;13971:4;13967:16;13946:37;;13873:117;;;;:::o;13996:169::-;14040:6;14073:51;14121:1;14117:6;14109:5;14106:1;14102:13;14073:51;:::i;:::-;14069:56;14154:4;14148;14144:15;14134:25;;14047:118;13996:169;;;;:::o;14170:295::-;14246:4;14392:29;14417:3;14411:4;14392:29;:::i;:::-;14384:37;;14454:3;14451:1;14447:11;14441:4;14438:21;14430:29;;14170:295;;;;:::o;14470:1395::-;14587:37;14620:3;14587:37;:::i;:::-;14689:18;14681:6;14678:30;14675:56;;;14711:18;;:::i;:::-;14675:56;14755:38;14787:4;14781:11;14755:38;:::i;:::-;14840:67;14900:6;14892;14886:4;14840:67;:::i;:::-;14934:1;14958:4;14945:17;;14990:2;14982:6;14979:14;15007:1;15002:618;;;;15664:1;15681:6;15678:77;;;15730:9;15725:3;15721:19;15715:26;15706:35;;15678:77;15781:67;15841:6;15834:5;15781:67;:::i;:::-;15775:4;15768:81;15637:222;14972:887;;15002:618;15054:4;15050:9;15042:6;15038:22;15088:37;15120:4;15088:37;:::i;:::-;15147:1;15161:208;15175:7;15172:1;15169:14;15161:208;;;15254:9;15249:3;15245:19;15239:26;15231:6;15224:42;15305:1;15297:6;15293:14;15283:24;;15352:2;15341:9;15337:18;15324:31;;15198:4;15195:1;15191:12;15186:17;;15161:208;;;15397:6;15388:7;15385:19;15382:179;;;15455:9;15450:3;15446:19;15440:26;15498:48;15540:4;15532:6;15528:17;15517:9;15498:48;:::i;:::-;15490:6;15483:64;15405:156;15382:179;15607:1;15603;15595:6;15591:14;15587:22;15581:4;15574:36;15009:611;;;14972:887;;14562:1303;;;14470:1395;;:::o;15871:148::-;15973:11;16010:3;15995:18;;15871:148;;;;:::o;16025:173::-;16165:25;16161:1;16153:6;16149:14;16142:49;16025:173;:::o;16204:402::-;16364:3;16385:85;16467:2;16462:3;16385:85;:::i;:::-;16378:92;;16479:93;16568:3;16479:93;:::i;:::-;16597:2;16592:3;16588:12;16581:19;;16204:402;;;:::o;16612:390::-;16718:3;16746:39;16779:5;16746:39;:::i;:::-;16801:89;16883:6;16878:3;16801:89;:::i;:::-;16794:96;;16899:65;16957:6;16952:3;16945:4;16938:5;16934:16;16899:65;:::i;:::-;16989:6;16984:3;16980:16;16973:23;;16722:280;16612:390;;;;:::o;17008:167::-;17148:19;17144:1;17136:6;17132:14;17125:43;17008:167;:::o;17181:402::-;17341:3;17362:85;17444:2;17439:3;17362:85;:::i;:::-;17355:92;;17456:93;17545:3;17456:93;:::i;:::-;17574:2;17569:3;17565:12;17558:19;;17181:402;;;:::o;17589:967::-;17971:3;17993:148;18137:3;17993:148;:::i;:::-;17986:155;;18158:95;18249:3;18240:6;18158:95;:::i;:::-;18151:102;;18270:148;18414:3;18270:148;:::i;:::-;18263:155;;18435:95;18526:3;18517:6;18435:95;:::i;:::-;18428:102;;18547:3;18540:10;;17589:967;;;;;:::o;18562:313::-;18675:4;18713:2;18702:9;18698:18;18690:26;;18762:9;18756:4;18752:20;18748:1;18737:9;18733:17;18726:47;18790:78;18863:4;18854:6;18790:78;:::i;:::-;18782:86;;18562:313;;;;:::o;18881:180::-;18929:77;18926:1;18919:88;19026:4;19023:1;19016:15;19050:4;19047:1;19040:15;19067:180;19115:77;19112:1;19105:88;19212:4;19209:1;19202:15;19236:4;19233:1;19226:15;19253:410;19293:7;19316:20;19334:1;19316:20;:::i;:::-;19311:25;;19350:20;19368:1;19350:20;:::i;:::-;19345:25;;19405:1;19402;19398:9;19427:30;19445:11;19427:30;:::i;:::-;19416:41;;19606:1;19597:7;19593:15;19590:1;19587:22;19567:1;19560:9;19540:83;19517:139;;19636:18;;:::i;:::-;19517:139;19301:362;19253:410;;;;:::o;19669:191::-;19709:3;19728:20;19746:1;19728:20;:::i;:::-;19723:25;;19762:20;19780:1;19762:20;:::i;:::-;19757:25;;19805:1;19802;19798:9;19791:16;;19826:3;19823:1;19820:10;19817:36;;;19833:18;;:::i;:::-;19817:36;19669:191;;;;:::o;19866:171::-;19905:3;19928:24;19946:5;19928:24;:::i;:::-;19919:33;;19974:4;19967:5;19964:15;19961:41;;19982:18;;:::i;:::-;19961:41;20029:1;20022:5;20018:13;20011:20;;19866:171;;;:::o;20043:182::-;20183:34;20179:1;20171:6;20167:14;20160:58;20043:182;:::o;20231:366::-;20373:3;20394:67;20458:2;20453:3;20394:67;:::i;:::-;20387:74;;20470:93;20559:3;20470:93;:::i;:::-;20588:2;20583:3;20579:12;20572:19;;20231:366;;;:::o;20603:419::-;20769:4;20807:2;20796:9;20792:18;20784:26;;20856:9;20850:4;20846:20;20842:1;20831:9;20827:17;20820:47;20884:131;21010:4;20884:131;:::i;:::-;20876:139;;20603:419;;;:::o;21028:194::-;21068:4;21088:20;21106:1;21088:20;:::i;:::-;21083:25;;21122:20;21140:1;21122:20;:::i;:::-;21117:25;;21166:1;21163;21159:9;21151:17;;21190:1;21184:4;21181:11;21178:37;;;21195:18;;:::i;:::-;21178:37;21028:194;;;;:::o;21228:180::-;21276:77;21273:1;21266:88;21373:4;21370:1;21363:15;21397:4;21394:1;21387:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","HASH_WRITER()":"2220de21","addNewDocument(string,bytes32)":"abb0688f","getDocInfo(uint256)":"6138fede","getDocsCount()":"9e8cb6bd","getRegisteredHash(bytes32)":"34efe036","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","removeHashWriterRole(address)":"efcd473c","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setHashWriterRole(address)":"b46beb4f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"docAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"indexNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"docCounter\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"docUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"dochash\",\"type\":\"bytes32\"}],\"name\":\"DocHashAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HASH_WRITER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"addNewDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"getDocInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getRegisteredHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hashWriter\",\"type\":\"address\"}],\"name\":\"removeHashWriterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hashWriter\",\"type\":\"address\"}],\"name\":\"setHashWriterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Notarize.sol\":\"Notarize\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/Notarize.sol\":{\"keccak256\":\"0x3be94326e0c7569b6e4fa11b077119d7a2a5e99e16c5c414ccee4ff950595c2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9218c194d0cd6d2c126c2e7782530ce6d57194664169d8be46bc04108b8c25a\",\"dweb:/ipfs/QmdRThrtEqEpp5safG8sFGLiDvFGFMN25jdsEwj3Dc4Ffr\"]}},\"version\":1}"}},"contracts/VotingContract .sol":{"VotingContract":{"abi":[{"inputs":[{"internalType":"address payable","name":"_vaultAddress","type":"address"},{"internalType":"uint256","name":"_votingEndTime","type":"uint256"},{"internalType":"uint256","name":"_donationGoal","type":"uint256"},{"internalType":"bytes32[]","name":"proposalNames","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"amountZero","type":"error"},{"inputs":[],"name":"ethNotSent","type":"error"},{"inputs":[],"name":"proposalNotValid","type":"error"},{"inputs":[],"name":"timeElapsed","type":"error"},{"inputs":[],"name":"timeNotElapsed","type":"error"},{"inputs":[],"name":"voted","type":"error"},{"inputs":[],"name":"votingClosed","type":"error"},{"inputs":[],"name":"votingNotClosed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"}],"name":"Vote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"winningProposalId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"winningProposalVotes","type":"uint256"}],"name":"VotingClosed","type":"event"},{"inputs":[{"internalType":"bytes32","name":"name","type":"bytes32"}],"name":"addProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"closeVoting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"donationAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"donationGoal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isVotingClosed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"uint256","name":"weidhtedVotes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"voters","outputs":[{"internalType":"uint256","name":"vote","type":"uint256"},{"internalType":"uint256","name":"weightVote","type":"uint256"},{"internalType":"bool","name":"voted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winningProposalId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winningProposalVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawDonations","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2969":{"entryPoint":null,"id":2969,"parameterSlots":4,"returnSlots":0},"@_562":{"entryPoint":null,"id":562,"parameterSlots":0,"returnSlots":0},"@_msgSender_663":{"entryPoint":381,"id":663,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_650":{"entryPoint":389,"id":650,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory":{"entryPoint":1030,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory":{"entryPoint":1146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":742,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptr_fromMemory":{"entryPoint":1197,"id":null,"parameterSlots":2,"returnSlots":4},"allocate_memory":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":585,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1389,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":637,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":971,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":605,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":706,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":834,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":1448,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1342,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1525,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":787,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":765,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":966,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":600,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":595,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":770,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address_payable":{"entryPoint":657,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":981,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":716,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5897:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"519:51:17","statements":[{"nodeType":"YulAssignment","src":"529:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"558:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"540:17:17"},"nodeType":"YulFunctionCall","src":"540:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"529:7:17"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"501:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"511:7:17","type":""}],"src":"466:104:17"},{"body":{"nodeType":"YulBlock","src":"627:87:17","statements":[{"body":{"nodeType":"YulBlock","src":"692:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"701:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"704:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"694:6:17"},"nodeType":"YulFunctionCall","src":"694:12:17"},"nodeType":"YulExpressionStatement","src":"694:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"650:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"683:5:17"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"657:25:17"},"nodeType":"YulFunctionCall","src":"657:32:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"647:2:17"},"nodeType":"YulFunctionCall","src":"647:43:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"640:6:17"},"nodeType":"YulFunctionCall","src":"640:51:17"},"nodeType":"YulIf","src":"637:71:17"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"620:5:17","type":""}],"src":"576:138:17"},{"body":{"nodeType":"YulBlock","src":"791:88:17","statements":[{"nodeType":"YulAssignment","src":"801:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"816:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"810:5:17"},"nodeType":"YulFunctionCall","src":"810:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"801:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"867:5:17"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"832:34:17"},"nodeType":"YulFunctionCall","src":"832:41:17"},"nodeType":"YulExpressionStatement","src":"832:41:17"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"769:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"777:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"785:5:17","type":""}],"src":"720:159:17"},{"body":{"nodeType":"YulBlock","src":"930:32:17","statements":[{"nodeType":"YulAssignment","src":"940:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"951:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"940:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"912:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"922:7:17","type":""}],"src":"885:77:17"},{"body":{"nodeType":"YulBlock","src":"1011:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1068:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1077:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1080:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1070:6:17"},"nodeType":"YulFunctionCall","src":"1070:12:17"},"nodeType":"YulExpressionStatement","src":"1070:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1034:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1059:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1041:17:17"},"nodeType":"YulFunctionCall","src":"1041:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1031:2:17"},"nodeType":"YulFunctionCall","src":"1031:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1024:6:17"},"nodeType":"YulFunctionCall","src":"1024:43:17"},"nodeType":"YulIf","src":"1021:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1004:5:17","type":""}],"src":"968:122:17"},{"body":{"nodeType":"YulBlock","src":"1159:80:17","statements":[{"nodeType":"YulAssignment","src":"1169:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1184:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1178:5:17"},"nodeType":"YulFunctionCall","src":"1178:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1169:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1227:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1200:26:17"},"nodeType":"YulFunctionCall","src":"1200:33:17"},"nodeType":"YulExpressionStatement","src":"1200:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1137:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1145:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1153:5:17","type":""}],"src":"1096:143:17"},{"body":{"nodeType":"YulBlock","src":"1334:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1351:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1354:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1344:6:17"},"nodeType":"YulFunctionCall","src":"1344:12:17"},"nodeType":"YulExpressionStatement","src":"1344:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1245:117:17"},{"body":{"nodeType":"YulBlock","src":"1416:54:17","statements":[{"nodeType":"YulAssignment","src":"1426:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1444:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1451:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1440:3:17"},"nodeType":"YulFunctionCall","src":"1440:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1460:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1456:3:17"},"nodeType":"YulFunctionCall","src":"1456:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1436:3:17"},"nodeType":"YulFunctionCall","src":"1436:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1426:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1399:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1409:6:17","type":""}],"src":"1368:102:17"},{"body":{"nodeType":"YulBlock","src":"1504:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1521:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1524:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1514:6:17"},"nodeType":"YulFunctionCall","src":"1514:88:17"},"nodeType":"YulExpressionStatement","src":"1514:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1618:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1621:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1611:6:17"},"nodeType":"YulFunctionCall","src":"1611:15:17"},"nodeType":"YulExpressionStatement","src":"1611:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1642:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1645:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1635:6:17"},"nodeType":"YulFunctionCall","src":"1635:15:17"},"nodeType":"YulExpressionStatement","src":"1635:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1476:180:17"},{"body":{"nodeType":"YulBlock","src":"1705:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1715:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1737:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1767:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1745:21:17"},"nodeType":"YulFunctionCall","src":"1745:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1733:3:17"},"nodeType":"YulFunctionCall","src":"1733:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1719:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1884:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1886:16:17"},"nodeType":"YulFunctionCall","src":"1886:18:17"},"nodeType":"YulExpressionStatement","src":"1886:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1827:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1839:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1824:2:17"},"nodeType":"YulFunctionCall","src":"1824:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1863:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1875:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1860:2:17"},"nodeType":"YulFunctionCall","src":"1860:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1821:2:17"},"nodeType":"YulFunctionCall","src":"1821:62:17"},"nodeType":"YulIf","src":"1818:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1922:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1926:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1915:6:17"},"nodeType":"YulFunctionCall","src":"1915:22:17"},"nodeType":"YulExpressionStatement","src":"1915:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1691:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"1699:4:17","type":""}],"src":"1662:281:17"},{"body":{"nodeType":"YulBlock","src":"1990:88:17","statements":[{"nodeType":"YulAssignment","src":"2000:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2010:18:17"},"nodeType":"YulFunctionCall","src":"2010:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2000:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2059:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"2067:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2039:19:17"},"nodeType":"YulFunctionCall","src":"2039:33:17"},"nodeType":"YulExpressionStatement","src":"2039:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1974:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1983:6:17","type":""}],"src":"1949:129:17"},{"body":{"nodeType":"YulBlock","src":"2166:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"2271:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2273:16:17"},"nodeType":"YulFunctionCall","src":"2273:18:17"},"nodeType":"YulExpressionStatement","src":"2273:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2243:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2251:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2240:2:17"},"nodeType":"YulFunctionCall","src":"2240:30:17"},"nodeType":"YulIf","src":"2237:56:17"},{"nodeType":"YulAssignment","src":"2303:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2315:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2323:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2311:3:17"},"nodeType":"YulFunctionCall","src":"2311:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2303:4:17"}]},{"nodeType":"YulAssignment","src":"2365:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2377:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2373:3:17"},"nodeType":"YulFunctionCall","src":"2373:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2365:4:17"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2150:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2161:4:17","type":""}],"src":"2084:311:17"},{"body":{"nodeType":"YulBlock","src":"2490:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2507:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2510:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2500:6:17"},"nodeType":"YulFunctionCall","src":"2500:12:17"},"nodeType":"YulExpressionStatement","src":"2500:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2401:117:17"},{"body":{"nodeType":"YulBlock","src":"2569:32:17","statements":[{"nodeType":"YulAssignment","src":"2579:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2590:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2579:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2551:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2561:7:17","type":""}],"src":"2524:77:17"},{"body":{"nodeType":"YulBlock","src":"2650:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2707:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2716:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2719:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2709:6:17"},"nodeType":"YulFunctionCall","src":"2709:12:17"},"nodeType":"YulExpressionStatement","src":"2709:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2673:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2698:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2680:17:17"},"nodeType":"YulFunctionCall","src":"2680:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2670:2:17"},"nodeType":"YulFunctionCall","src":"2670:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2663:6:17"},"nodeType":"YulFunctionCall","src":"2663:43:17"},"nodeType":"YulIf","src":"2660:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2643:5:17","type":""}],"src":"2607:122:17"},{"body":{"nodeType":"YulBlock","src":"2798:80:17","statements":[{"nodeType":"YulAssignment","src":"2808:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2823:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2817:5:17"},"nodeType":"YulFunctionCall","src":"2817:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2808:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2866:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2839:26:17"},"nodeType":"YulFunctionCall","src":"2839:33:17"},"nodeType":"YulExpressionStatement","src":"2839:33:17"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2776:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2784:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2792:5:17","type":""}],"src":"2735:143:17"},{"body":{"nodeType":"YulBlock","src":"3014:619:17","statements":[{"nodeType":"YulAssignment","src":"3024:90:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3106:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3049:56:17"},"nodeType":"YulFunctionCall","src":"3049:64:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3033:15:17"},"nodeType":"YulFunctionCall","src":"3033:81:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3024:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"3123:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"3134:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3127:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3156:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"3163:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3149:6:17"},"nodeType":"YulFunctionCall","src":"3149:21:17"},"nodeType":"YulExpressionStatement","src":"3149:21:17"},{"nodeType":"YulAssignment","src":"3179:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3190:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3197:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3186:3:17"},"nodeType":"YulFunctionCall","src":"3186:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3179:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"3212:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3230:6:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3242:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3250:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3238:3:17"},"nodeType":"YulFunctionCall","src":"3238:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3226:3:17"},"nodeType":"YulFunctionCall","src":"3226:30:17"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3216:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3284:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3298:77:17"},"nodeType":"YulFunctionCall","src":"3298:79:17"},"nodeType":"YulExpressionStatement","src":"3298:79:17"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3271:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"3279:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3268:2:17"},"nodeType":"YulFunctionCall","src":"3268:15:17"},"nodeType":"YulIf","src":"3265:122:17"},{"body":{"nodeType":"YulBlock","src":"3472:155:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3487:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"3505:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"3491:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3529:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"3566:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"3578:3:17"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"3534:31:17"},"nodeType":"YulFunctionCall","src":"3534:48:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3522:6:17"},"nodeType":"YulFunctionCall","src":"3522:61:17"},"nodeType":"YulExpressionStatement","src":"3522:61:17"},{"nodeType":"YulAssignment","src":"3596:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3607:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3612:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3603:3:17"},"nodeType":"YulFunctionCall","src":"3603:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3596:3:17"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3425:3:17"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3430:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3422:2:17"},"nodeType":"YulFunctionCall","src":"3422:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3438:25:17","statements":[{"nodeType":"YulAssignment","src":"3440:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3451:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3456:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3447:3:17"},"nodeType":"YulFunctionCall","src":"3447:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3440:3:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3400:21:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3402:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"3413:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3406:3:17","type":""}]}]},"src":"3396:231:17"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2984:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2992:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3000:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3008:5:17","type":""}],"src":"2901:732:17"},{"body":{"nodeType":"YulBlock","src":"3744:297:17","statements":[{"body":{"nodeType":"YulBlock","src":"3793:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3795:77:17"},"nodeType":"YulFunctionCall","src":"3795:79:17"},"nodeType":"YulExpressionStatement","src":"3795:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3772:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3780:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3768:3:17"},"nodeType":"YulFunctionCall","src":"3768:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"3787:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3764:3:17"},"nodeType":"YulFunctionCall","src":"3764:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3757:6:17"},"nodeType":"YulFunctionCall","src":"3757:35:17"},"nodeType":"YulIf","src":"3754:122:17"},{"nodeType":"YulVariableDeclaration","src":"3885:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3905:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3899:5:17"},"nodeType":"YulFunctionCall","src":"3899:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3889:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3921:114:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4008:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4016:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4004:3:17"},"nodeType":"YulFunctionCall","src":"4004:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"4023:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"4031:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3930:73:17"},"nodeType":"YulFunctionCall","src":"3930:105:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3921:5:17"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3722:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3730:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3738:5:17","type":""}],"src":"3656:385:17"},{"body":{"nodeType":"YulBlock","src":"4208:878:17","statements":[{"body":{"nodeType":"YulBlock","src":"4255:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4257:77:17"},"nodeType":"YulFunctionCall","src":"4257:79:17"},"nodeType":"YulExpressionStatement","src":"4257:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4229:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4238:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4225:3:17"},"nodeType":"YulFunctionCall","src":"4225:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4250:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4221:3:17"},"nodeType":"YulFunctionCall","src":"4221:33:17"},"nodeType":"YulIf","src":"4218:120:17"},{"nodeType":"YulBlock","src":"4348:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4363:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4377:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4367:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4392:82:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4457:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:17"},"nodeType":"YulFunctionCall","src":"4442:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:17"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"4402:39:17"},"nodeType":"YulFunctionCall","src":"4402:72:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4392:6:17"}]}]},{"nodeType":"YulBlock","src":"4494:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4509:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4523:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4513:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4539:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4585:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4596:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:17"},"nodeType":"YulFunctionCall","src":"4581:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4605:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4549:31:17"},"nodeType":"YulFunctionCall","src":"4549:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4539:6:17"}]}]},{"nodeType":"YulBlock","src":"4633:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4648:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4662:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4652:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4678:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4724:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4735:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4720:3:17"},"nodeType":"YulFunctionCall","src":"4720:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4744:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4688:31:17"},"nodeType":"YulFunctionCall","src":"4688:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4678:6:17"}]}]},{"nodeType":"YulBlock","src":"4772:307:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4787:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4811:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4822:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4807:3:17"},"nodeType":"YulFunctionCall","src":"4807:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4801:5:17"},"nodeType":"YulFunctionCall","src":"4801:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4791:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4873:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4875:77:17"},"nodeType":"YulFunctionCall","src":"4875:79:17"},"nodeType":"YulExpressionStatement","src":"4875:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4845:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4853:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4842:2:17"},"nodeType":"YulFunctionCall","src":"4842:30:17"},"nodeType":"YulIf","src":"4839:117:17"},{"nodeType":"YulAssignment","src":"4970:99:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5041:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5052:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5037:3:17"},"nodeType":"YulFunctionCall","src":"5037:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5061:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4980:56:17"},"nodeType":"YulFunctionCall","src":"4980:89:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4970:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4154:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4165:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4177:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4185:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4193:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4201:6:17","type":""}],"src":"4047:1039:17"},{"body":{"nodeType":"YulBlock","src":"5120:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5137:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5140:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:17"},"nodeType":"YulFunctionCall","src":"5130:88:17"},"nodeType":"YulExpressionStatement","src":"5130:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5234:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5237:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5227:6:17"},"nodeType":"YulFunctionCall","src":"5227:15:17"},"nodeType":"YulExpressionStatement","src":"5227:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5258:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5261:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5251:6:17"},"nodeType":"YulFunctionCall","src":"5251:15:17"},"nodeType":"YulExpressionStatement","src":"5251:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5092:180:17"},{"body":{"nodeType":"YulBlock","src":"5322:147:17","statements":[{"nodeType":"YulAssignment","src":"5332:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5355:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5337:17:17"},"nodeType":"YulFunctionCall","src":"5337:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5332:1:17"}]},{"nodeType":"YulAssignment","src":"5366:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5389:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5371:17:17"},"nodeType":"YulFunctionCall","src":"5371:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5366:1:17"}]},{"nodeType":"YulAssignment","src":"5400:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5411:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"5414:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5407:3:17"},"nodeType":"YulFunctionCall","src":"5407:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5400:3:17"}]},{"body":{"nodeType":"YulBlock","src":"5440:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5442:16:17"},"nodeType":"YulFunctionCall","src":"5442:18:17"},"nodeType":"YulExpressionStatement","src":"5442:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5432:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"5435:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5429:2:17"},"nodeType":"YulFunctionCall","src":"5429:10:17"},"nodeType":"YulIf","src":"5426:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5309:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"5312:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5318:3:17","type":""}],"src":"5278:191:17"},{"body":{"nodeType":"YulBlock","src":"5518:190:17","statements":[{"nodeType":"YulAssignment","src":"5528:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5555:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5537:17:17"},"nodeType":"YulFunctionCall","src":"5537:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5528:5:17"}]},{"body":{"nodeType":"YulBlock","src":"5651:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5653:16:17"},"nodeType":"YulFunctionCall","src":"5653:18:17"},"nodeType":"YulExpressionStatement","src":"5653:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5576:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5583:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5573:2:17"},"nodeType":"YulFunctionCall","src":"5573:77:17"},"nodeType":"YulIf","src":"5570:103:17"},{"nodeType":"YulAssignment","src":"5682:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5693:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5700:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5689:3:17"},"nodeType":"YulFunctionCall","src":"5689:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5682:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5504:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5514:3:17","type":""}],"src":"5475:233:17"},{"body":{"nodeType":"YulBlock","src":"5742:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5759:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5762:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5752:6:17"},"nodeType":"YulFunctionCall","src":"5752:88:17"},"nodeType":"YulExpressionStatement","src":"5752:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5856:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5859:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5849:6:17"},"nodeType":"YulFunctionCall","src":"5849:15:17"},"nodeType":"YulExpressionStatement","src":"5849:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5880:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5883:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5873:6:17"},"nodeType":"YulFunctionCall","src":"5873:15:17"},"nodeType":"YulExpressionStatement","src":"5873:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5714:180:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17BC CODESIZE SUB DUP1 PUSH3 0x17BC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4AD JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x17D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x185 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP4 PUSH3 0xA6 SWAP2 SWAP1 PUSH3 0x56D JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x172 JUMPI PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xF8 SWAP1 PUSH3 0x5A8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x11E JUMPI PUSH3 0x11D PUSH3 0x5F5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 DUP1 PUSH3 0x169 SWAP1 PUSH3 0x5A8 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xD9 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x624 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28A DUP3 PUSH3 0x25D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x29C DUP2 PUSH3 0x27D JUMP JUMPDEST DUP2 EQ PUSH3 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2BC DUP2 PUSH3 0x291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D7 DUP2 PUSH3 0x2C2 JUMP JUMPDEST DUP2 EQ PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F7 DUP2 PUSH3 0x2CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x34D DUP3 PUSH3 0x302 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x36F JUMPI PUSH3 0x36E PUSH3 0x313 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x384 PUSH3 0x249 JUMP JUMPDEST SWAP1 POP PUSH3 0x392 DUP3 DUP3 PUSH3 0x342 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x3B5 JUMPI PUSH3 0x3B4 PUSH3 0x313 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E0 DUP2 PUSH3 0x3CB JUMP JUMPDEST DUP2 EQ PUSH3 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x400 DUP2 PUSH3 0x3D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x41D PUSH3 0x417 DUP5 PUSH3 0x397 JUMP JUMPDEST PUSH3 0x378 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x443 JUMPI PUSH3 0x442 PUSH3 0x3C6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x470 JUMPI DUP1 PUSH3 0x45B DUP9 DUP3 PUSH3 0x3EF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x445 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x492 JUMPI PUSH3 0x491 PUSH3 0x2FD JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4A4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x406 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x4CA JUMPI PUSH3 0x4C9 PUSH3 0x253 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x4DA DUP8 DUP3 DUP9 ADD PUSH3 0x2AB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x4ED DUP8 DUP3 DUP9 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x500 DUP8 DUP3 DUP9 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x524 JUMPI PUSH3 0x523 PUSH3 0x258 JUMP JUMPDEST JUMPDEST PUSH3 0x532 DUP8 DUP3 DUP9 ADD PUSH3 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x57A DUP3 PUSH3 0x2C2 JUMP JUMPDEST SWAP2 POP PUSH3 0x587 DUP4 PUSH3 0x2C2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x5A2 JUMPI PUSH3 0x5A1 PUSH3 0x53E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5B5 DUP3 PUSH3 0x2C2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x5EA JUMPI PUSH3 0x5E9 PUSH3 0x53E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1188 DUP1 PUSH3 0x634 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5AB08F00 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA3EC138D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xC631B292 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xC64963C5 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x369 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5AB08F00 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x7D2F7190 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1EA736E0 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1EA736E0 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x3F1B4081 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x45825C58 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x4BED6C23 EQ PUSH2 0x227 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x6EFE3B0 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xA9F46AD EQ PUSH2 0x17B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP3 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH2 0x875 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x353 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC2CF3F500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2479ECB800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SUB PUSH2 0x44F JUMPI PUSH1 0x40 MLOAD PUSH32 0xBCB27C3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3500F91E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF87F8F6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xF20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x537 DUP2 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0xF20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x10A412BF229FBAC2408912CB271B8FF9EB39EB72DA91DD0C8ACCAB0FB1011135 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x64B PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2479ECB800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6A5 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x722 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC9C6A7D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF3FEF3A3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP3 SWAP2 SWAP1 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x80D PUSH1 0x0 PUSH2 0xAEA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x87D PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x851F071500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C0 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAFF28777F2409F4B37134D80D0E47AF000BE7515D291C576B1412337F3EEB653 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x910 SWAP3 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x928 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A0 DUP2 PUSH2 0xAEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP1 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x43DEED500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA74 PUSH2 0xC1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA92 PUSH2 0x815 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT PUSH2 0xC18 JUMPI DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xC05 JUMPI PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0xC10 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBB6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3C DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP2 EQ PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC59 DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0xC24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP5 DUP3 DUP6 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9F DUP2 PUSH2 0xC8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCAE DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCC9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xCD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCE6 DUP2 PUSH2 0xC8C JUMP JUMPDEST DUP2 EQ PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD03 DUP2 PUSH2 0xCDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH2 0xD1E PUSH2 0xC24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP5 DUP3 DUP6 ADD PUSH2 0xCF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xD51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD81 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB2 DUP3 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC2 DUP2 PUSH2 0xDA7 JUMP JUMPDEST DUP2 EQ PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDF DUP2 PUSH2 0xDB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFC JUMPI PUSH2 0xDFB PUSH2 0xC24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE0A DUP6 DUP3 DUP7 ADD PUSH2 0xDD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE1B DUP6 DUP3 DUP7 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE30 DUP3 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE40 DUP2 PUSH2 0xE25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6A DUP2 PUSH2 0xE25 JUMP JUMPDEST DUP2 EQ PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE87 DUP2 PUSH2 0xE61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA3 JUMPI PUSH2 0xEA2 PUSH2 0xC24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB1 DUP5 DUP3 DUP6 ADD PUSH2 0xE78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xECF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xEDC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xEE9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP3 PUSH2 0xC29 JUMP JUMPDEST SWAP2 POP PUSH2 0xF36 DUP4 PUSH2 0xC29 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4D PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0xC29 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xF91 JUMPI PUSH2 0xF90 PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA5 DUP2 PUSH2 0xDA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xFCD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xFF6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106A PUSH1 0x26 DUP4 PUSH2 0xFFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1075 DUP3 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1099 DUP2 PUSH2 0x105D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BB PUSH1 0x0 DUP4 PUSH2 0x10A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C6 DUP3 PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10DC DUP3 PUSH2 0x10AE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x111C PUSH1 0x20 DUP4 PUSH2 0xFFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1127 DUP3 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114B DUP2 PUSH2 0x110F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 LOG3 JUMPI 0xB3 0x4A PUSH27 0xB5114D79008AF1611BE94E2A5F1F7E468D5A1D8C39A3570AEEC464 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"428:4325:14:-:0;;;1903:528;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;2088:13:14;2073:12;;:28;;;;;;;;;;;;;;;;;;2142:15;2127:14;:30;;;;:::i;:::-;2111:13;:46;;;;2182:13;2167:12;:28;;;;2222:5;2205:14;;:22;;;;;;;;;;;;;;;;;;2254:1;2237:14;:18;;;;2270:6;2265:160;2286:13;:20;2282:1;:24;2265:160;;;2327:14;;:16;;;;;;;;;:::i;:::-;;;;;;2385:29;;;;;;;;2394:13;2408:1;2394:16;;;;;;;;:::i;:::-;;;;;;;;2385:29;;;;2412:1;2385:29;;;2357:9;:25;2367:14;;2357:25;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;2308:3;;;;;:::i;:::-;;;;2265:160;;;;1903:528;;;;428:4325;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2426:187:4:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:77::-;922:7;951:5;940:16;;885:77;;;:::o;968:122::-;1041:24;1059:5;1041:24;:::i;:::-;1034:5;1031:35;1021:63;;1080:1;1077;1070:12;1021:63;968:122;:::o;1096:143::-;1153:5;1184:6;1178:13;1169:22;;1200:33;1227:5;1200:33;:::i;:::-;1096:143;;;;:::o;1245:117::-;1354:1;1351;1344:12;1368:102;1409:6;1460:2;1456:7;1451:2;1444:5;1440:14;1436:28;1426:38;;1368:102;;;:::o;1476:180::-;1524:77;1521:1;1514:88;1621:4;1618:1;1611:15;1645:4;1642:1;1635:15;1662:281;1745:27;1767:4;1745:27;:::i;:::-;1737:6;1733:40;1875:6;1863:10;1860:22;1839:18;1827:10;1824:34;1821:62;1818:88;;;1886:18;;:::i;:::-;1818:88;1926:10;1922:2;1915:22;1705:238;1662:281;;:::o;1949:129::-;1983:6;2010:20;;:::i;:::-;2000:30;;2039:33;2067:4;2059:6;2039:33;:::i;:::-;1949:129;;;:::o;2084:311::-;2161:4;2251:18;2243:6;2240:30;2237:56;;;2273:18;;:::i;:::-;2237:56;2323:4;2315:6;2311:17;2303:25;;2383:4;2377;2373:15;2365:23;;2084:311;;;:::o;2401:117::-;2510:1;2507;2500:12;2524:77;2561:7;2590:5;2579:16;;2524:77;;;:::o;2607:122::-;2680:24;2698:5;2680:24;:::i;:::-;2673:5;2670:35;2660:63;;2719:1;2716;2709:12;2660:63;2607:122;:::o;2735:143::-;2792:5;2823:6;2817:13;2808:22;;2839:33;2866:5;2839:33;:::i;:::-;2735:143;;;;:::o;2901:732::-;3008:5;3033:81;3049:64;3106:6;3049:64;:::i;:::-;3033:81;:::i;:::-;3024:90;;3134:5;3163:6;3156:5;3149:21;3197:4;3190:5;3186:16;3179:23;;3250:4;3242:6;3238:17;3230:6;3226:30;3279:3;3271:6;3268:15;3265:122;;;3298:79;;:::i;:::-;3265:122;3413:6;3396:231;3430:6;3425:3;3422:15;3396:231;;;3505:3;3534:48;3578:3;3566:10;3534:48;:::i;:::-;3529:3;3522:61;3612:4;3607:3;3603:14;3596:21;;3472:155;3456:4;3451:3;3447:14;3440:21;;3396:231;;;3400:21;3014:619;;2901:732;;;;;:::o;3656:385::-;3738:5;3787:3;3780:4;3772:6;3768:17;3764:27;3754:122;;3795:79;;:::i;:::-;3754:122;3905:6;3899:13;3930:105;4031:3;4023:6;4016:4;4008:6;4004:17;3930:105;:::i;:::-;3921:114;;3744:297;3656:385;;;;:::o;4047:1039::-;4177:6;4185;4193;4201;4250:3;4238:9;4229:7;4225:23;4221:33;4218:120;;;4257:79;;:::i;:::-;4218:120;4377:1;4402:72;4466:7;4457:6;4446:9;4442:22;4402:72;:::i;:::-;4392:82;;4348:136;4523:2;4549:64;4605:7;4596:6;4585:9;4581:22;4549:64;:::i;:::-;4539:74;;4494:129;4662:2;4688:64;4744:7;4735:6;4724:9;4720:22;4688:64;:::i;:::-;4678:74;;4633:129;4822:2;4811:9;4807:18;4801:25;4853:18;4845:6;4842:30;4839:117;;;4875:79;;:::i;:::-;4839:117;4980:89;5061:7;5052:6;5041:9;5037:22;4980:89;:::i;:::-;4970:99;;4772:307;4047:1039;;;;;;;:::o;5092:180::-;5140:77;5137:1;5130:88;5237:4;5234:1;5227:15;5261:4;5258:1;5251:15;5278:191;5318:3;5337:20;5355:1;5337:20;:::i;:::-;5332:25;;5371:20;5389:1;5371:20;:::i;:::-;5366:25;;5414:1;5411;5407:9;5400:16;;5435:3;5432:1;5429:10;5426:36;;;5442:18;;:::i;:::-;5426:36;5278:191;;;;:::o;5475:233::-;5514:3;5537:24;5555:5;5537:24;:::i;:::-;5528:33;;5583:66;5576:5;5573:77;5570:103;;5653:18;;:::i;:::-;5570:103;5700:1;5693:5;5689:13;5682:20;;5475:233;;;:::o;5714:180::-;5762:77;5759:1;5752:88;5859:4;5856:1;5849:15;5883:4;5880:1;5873:15;428:4325:14;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_593":{"entryPoint":2668,"id":593,"parameterSlots":0,"returnSlots":0},"@_msgSender_663":{"entryPoint":3100,"id":663,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_650":{"entryPoint":2794,"id":650,"parameterSlots":1,"returnSlots":0},"@addProposal_2991":{"entryPoint":1603,"id":2991,"parameterSlots":1,"returnSlots":0},"@closeVoting_3092":{"entryPoint":2165,"id":3092,"parameterSlots":0,"returnSlots":0},"@donationAmount_2812":{"entryPoint":1812,"id":2812,"parameterSlots":0,"returnSlots":0},"@donationGoal_2810":{"entryPoint":2063,"id":2810,"parameterSlots":0,"returnSlots":0},"@findWinningProposal_3135":{"entryPoint":2990,"id":3135,"parameterSlots":0,"returnSlots":0},"@isVotingClosed_2814":{"entryPoint":1793,"id":2814,"parameterSlots":0,"returnSlots":0},"@moveFound_3185":{"entryPoint":2467,"id":3185,"parameterSlots":1,"returnSlots":0},"@owner_579":{"entryPoint":2069,"id":579,"parameterSlots":0,"returnSlots":1},"@proposalsCount_2820":{"entryPoint":1775,"id":2820,"parameterSlots":0,"returnSlots":0},"@proposals_2839":{"entryPoint":1567,"id":2839,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_607":{"entryPoint":2043,"id":607,"parameterSlots":0,"returnSlots":0},"@transferOwnership_630":{"entryPoint":2336,"id":630,"parameterSlots":1,"returnSlots":0},"@vote_3065":{"entryPoint":914,"id":3065,"parameterSlots":1,"returnSlots":0},"@voters_2844":{"entryPoint":2110,"id":2844,"parameterSlots":0,"returnSlots":0},"@votingEndTime_2808":{"entryPoint":1781,"id":2808,"parameterSlots":0,"returnSlots":0},"@winningProposalId_2816":{"entryPoint":2330,"id":2816,"parameterSlots":0,"returnSlots":0},"@winningProposalVotes_2818":{"entryPoint":1787,"id":2818,"parameterSlots":0,"returnSlots":0},"@withdrawDonations_3160":{"entryPoint":1818,"id":3160,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":3704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":3536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":3557,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":3337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":3996,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3639,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3222,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":4189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":4367,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4270,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3237,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4305,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":4011,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":3252,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4402,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3382,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4052,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":3770,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4256,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4093,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3872,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":3495,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3409,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3212,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3463,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3113,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3924,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3825,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3108,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4110,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":4326,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":4267,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3681,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":3513,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3293,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3123,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10223:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:32:17","statements":[{"nodeType":"YulAssignment","src":"389:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:77:17"},{"body":{"nodeType":"YulBlock","src":"460:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:17"},"nodeType":"YulFunctionCall","src":"519:12:17"},"nodeType":"YulExpressionStatement","src":"519:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:17"},"nodeType":"YulFunctionCall","src":"490:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:17"},"nodeType":"YulFunctionCall","src":"480:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:17"},"nodeType":"YulFunctionCall","src":"473:43:17"},"nodeType":"YulIf","src":"470:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:17","type":""}],"src":"417:122:17"},{"body":{"nodeType":"YulBlock","src":"597:87:17","statements":[{"nodeType":"YulAssignment","src":"607:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:17"},"nodeType":"YulFunctionCall","src":"616:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:17"},"nodeType":"YulFunctionCall","src":"645:33:17"},"nodeType":"YulExpressionStatement","src":"645:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:17","type":""}],"src":"545:139:17"},{"body":{"nodeType":"YulBlock","src":"756:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:17"},"nodeType":"YulFunctionCall","src":"804:79:17"},"nodeType":"YulExpressionStatement","src":"804:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:17"},"nodeType":"YulFunctionCall","src":"773:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:17"},"nodeType":"YulFunctionCall","src":"769:32:17"},"nodeType":"YulIf","src":"766:119:17"},{"nodeType":"YulBlock","src":"895:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:17","type":""}]},{"nodeType":"YulAssignment","src":"939:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:17"},"nodeType":"YulFunctionCall","src":"970:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:17"},"nodeType":"YulFunctionCall","src":"949:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:17","type":""}],"src":"690:329:17"},{"body":{"nodeType":"YulBlock","src":"1070:32:17","statements":[{"nodeType":"YulAssignment","src":"1080:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1091:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1080:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1052:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1062:7:17","type":""}],"src":"1025:77:17"},{"body":{"nodeType":"YulBlock","src":"1173:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1190:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1213:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1195:17:17"},"nodeType":"YulFunctionCall","src":"1195:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1183:6:17"},"nodeType":"YulFunctionCall","src":"1183:37:17"},"nodeType":"YulExpressionStatement","src":"1183:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1161:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1168:3:17","type":""}],"src":"1108:118:17"},{"body":{"nodeType":"YulBlock","src":"1297:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1314:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1337:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1319:17:17"},"nodeType":"YulFunctionCall","src":"1319:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1307:6:17"},"nodeType":"YulFunctionCall","src":"1307:37:17"},"nodeType":"YulExpressionStatement","src":"1307:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1285:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1292:3:17","type":""}],"src":"1232:118:17"},{"body":{"nodeType":"YulBlock","src":"1482:206:17","statements":[{"nodeType":"YulAssignment","src":"1492:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1504:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1515:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1500:3:17"},"nodeType":"YulFunctionCall","src":"1500:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1492:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1572:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1585:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1596:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1581:3:17"},"nodeType":"YulFunctionCall","src":"1581:17:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"1528:43:17"},"nodeType":"YulFunctionCall","src":"1528:71:17"},"nodeType":"YulExpressionStatement","src":"1528:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1653:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1666:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1677:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1662:3:17"},"nodeType":"YulFunctionCall","src":"1662:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1609:43:17"},"nodeType":"YulFunctionCall","src":"1609:72:17"},"nodeType":"YulExpressionStatement","src":"1609:72:17"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1446:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1458:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1466:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1477:4:17","type":""}],"src":"1356:332:17"},{"body":{"nodeType":"YulBlock","src":"1737:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1794:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1803:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1806:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1796:6:17"},"nodeType":"YulFunctionCall","src":"1796:12:17"},"nodeType":"YulExpressionStatement","src":"1796:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1760:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1785:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1767:17:17"},"nodeType":"YulFunctionCall","src":"1767:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1757:2:17"},"nodeType":"YulFunctionCall","src":"1757:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1750:6:17"},"nodeType":"YulFunctionCall","src":"1750:43:17"},"nodeType":"YulIf","src":"1747:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:17","type":""}],"src":"1694:122:17"},{"body":{"nodeType":"YulBlock","src":"1874:87:17","statements":[{"nodeType":"YulAssignment","src":"1884:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1906:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1893:12:17"},"nodeType":"YulFunctionCall","src":"1893:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1884:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1949:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1922:26:17"},"nodeType":"YulFunctionCall","src":"1922:33:17"},"nodeType":"YulExpressionStatement","src":"1922:33:17"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1852:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1860:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1868:5:17","type":""}],"src":"1822:139:17"},{"body":{"nodeType":"YulBlock","src":"2033:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"2079:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2081:77:17"},"nodeType":"YulFunctionCall","src":"2081:79:17"},"nodeType":"YulExpressionStatement","src":"2081:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2054:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2063:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2050:3:17"},"nodeType":"YulFunctionCall","src":"2050:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2046:3:17"},"nodeType":"YulFunctionCall","src":"2046:32:17"},"nodeType":"YulIf","src":"2043:119:17"},{"nodeType":"YulBlock","src":"2172:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2187:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2201:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2191:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2216:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2251:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2262:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2247:3:17"},"nodeType":"YulFunctionCall","src":"2247:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2271:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2226:20:17"},"nodeType":"YulFunctionCall","src":"2226:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2216:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2003:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2014:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2026:6:17","type":""}],"src":"1967:329:17"},{"body":{"nodeType":"YulBlock","src":"2400:124:17","statements":[{"nodeType":"YulAssignment","src":"2410:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2422:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2433:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2418:3:17"},"nodeType":"YulFunctionCall","src":"2418:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2410:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2490:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2503:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2514:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2499:3:17"},"nodeType":"YulFunctionCall","src":"2499:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2446:43:17"},"nodeType":"YulFunctionCall","src":"2446:71:17"},"nodeType":"YulExpressionStatement","src":"2446:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2372:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2384:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2395:4:17","type":""}],"src":"2302:222:17"},{"body":{"nodeType":"YulBlock","src":"2572:48:17","statements":[{"nodeType":"YulAssignment","src":"2582:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2607:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2600:6:17"},"nodeType":"YulFunctionCall","src":"2600:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2593:6:17"},"nodeType":"YulFunctionCall","src":"2593:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2582:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2554:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2564:7:17","type":""}],"src":"2530:90:17"},{"body":{"nodeType":"YulBlock","src":"2685:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2702:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2722:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2707:14:17"},"nodeType":"YulFunctionCall","src":"2707:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2695:6:17"},"nodeType":"YulFunctionCall","src":"2695:34:17"},"nodeType":"YulExpressionStatement","src":"2695:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2673:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2680:3:17","type":""}],"src":"2626:109:17"},{"body":{"nodeType":"YulBlock","src":"2833:118:17","statements":[{"nodeType":"YulAssignment","src":"2843:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2866:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2851:3:17"},"nodeType":"YulFunctionCall","src":"2851:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2843:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2917:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2930:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2941:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2926:3:17"},"nodeType":"YulFunctionCall","src":"2926:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2879:37:17"},"nodeType":"YulFunctionCall","src":"2879:65:17"},"nodeType":"YulExpressionStatement","src":"2879:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2805:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2817:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2828:4:17","type":""}],"src":"2741:210:17"},{"body":{"nodeType":"YulBlock","src":"3002:81:17","statements":[{"nodeType":"YulAssignment","src":"3012:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3027:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3034:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3023:3:17"},"nodeType":"YulFunctionCall","src":"3023:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3012:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2984:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2994:7:17","type":""}],"src":"2957:126:17"},{"body":{"nodeType":"YulBlock","src":"3142:51:17","statements":[{"nodeType":"YulAssignment","src":"3152:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3163:17:17"},"nodeType":"YulFunctionCall","src":"3163:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3152:7:17"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3124:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3134:7:17","type":""}],"src":"3089:104:17"},{"body":{"nodeType":"YulBlock","src":"3250:87:17","statements":[{"body":{"nodeType":"YulBlock","src":"3315:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3324:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3327:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3317:6:17"},"nodeType":"YulFunctionCall","src":"3317:12:17"},"nodeType":"YulExpressionStatement","src":"3317:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3273:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3306:5:17"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"3280:25:17"},"nodeType":"YulFunctionCall","src":"3280:32:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3270:2:17"},"nodeType":"YulFunctionCall","src":"3270:43:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3263:6:17"},"nodeType":"YulFunctionCall","src":"3263:51:17"},"nodeType":"YulIf","src":"3260:71:17"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3243:5:17","type":""}],"src":"3199:138:17"},{"body":{"nodeType":"YulBlock","src":"3403:95:17","statements":[{"nodeType":"YulAssignment","src":"3413:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3435:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3422:12:17"},"nodeType":"YulFunctionCall","src":"3422:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3413:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3486:5:17"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"3451:34:17"},"nodeType":"YulFunctionCall","src":"3451:41:17"},"nodeType":"YulExpressionStatement","src":"3451:41:17"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3381:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3389:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3397:5:17","type":""}],"src":"3343:155:17"},{"body":{"nodeType":"YulBlock","src":"3595:399:17","statements":[{"body":{"nodeType":"YulBlock","src":"3641:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3643:77:17"},"nodeType":"YulFunctionCall","src":"3643:79:17"},"nodeType":"YulExpressionStatement","src":"3643:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3616:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3625:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3612:3:17"},"nodeType":"YulFunctionCall","src":"3612:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3637:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3608:3:17"},"nodeType":"YulFunctionCall","src":"3608:32:17"},"nodeType":"YulIf","src":"3605:119:17"},{"nodeType":"YulBlock","src":"3734:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3749:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3763:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3753:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3778:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3821:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3832:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3817:3:17"},"nodeType":"YulFunctionCall","src":"3817:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3841:7:17"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"3788:28:17"},"nodeType":"YulFunctionCall","src":"3788:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3778:6:17"}]}]},{"nodeType":"YulBlock","src":"3869:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3884:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3898:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3888:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3914:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3949:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3960:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3945:3:17"},"nodeType":"YulFunctionCall","src":"3945:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3969:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3924:20:17"},"nodeType":"YulFunctionCall","src":"3924:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3914:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3557:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3568:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3580:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3588:6:17","type":""}],"src":"3504:490:17"},{"body":{"nodeType":"YulBlock","src":"4045:51:17","statements":[{"nodeType":"YulAssignment","src":"4055:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4084:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4066:17:17"},"nodeType":"YulFunctionCall","src":"4066:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4055:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4027:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4037:7:17","type":""}],"src":"4000:96:17"},{"body":{"nodeType":"YulBlock","src":"4167:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4207:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4189:17:17"},"nodeType":"YulFunctionCall","src":"4189:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4177:6:17"},"nodeType":"YulFunctionCall","src":"4177:37:17"},"nodeType":"YulExpressionStatement","src":"4177:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4155:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4162:3:17","type":""}],"src":"4102:118:17"},{"body":{"nodeType":"YulBlock","src":"4324:124:17","statements":[{"nodeType":"YulAssignment","src":"4334:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4346:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4357:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4342:3:17"},"nodeType":"YulFunctionCall","src":"4342:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4334:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4414:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4427:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4438:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4423:3:17"},"nodeType":"YulFunctionCall","src":"4423:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4370:43:17"},"nodeType":"YulFunctionCall","src":"4370:71:17"},"nodeType":"YulExpressionStatement","src":"4370:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4296:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4308:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4319:4:17","type":""}],"src":"4226:222:17"},{"body":{"nodeType":"YulBlock","src":"4497:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"4554:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4556:6:17"},"nodeType":"YulFunctionCall","src":"4556:12:17"},"nodeType":"YulExpressionStatement","src":"4556:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4520:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4545:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4527:17:17"},"nodeType":"YulFunctionCall","src":"4527:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4517:2:17"},"nodeType":"YulFunctionCall","src":"4517:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4510:6:17"},"nodeType":"YulFunctionCall","src":"4510:43:17"},"nodeType":"YulIf","src":"4507:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4490:5:17","type":""}],"src":"4454:122:17"},{"body":{"nodeType":"YulBlock","src":"4634:87:17","statements":[{"nodeType":"YulAssignment","src":"4644:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4666:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4653:12:17"},"nodeType":"YulFunctionCall","src":"4653:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4644:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4709:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4682:26:17"},"nodeType":"YulFunctionCall","src":"4682:33:17"},"nodeType":"YulExpressionStatement","src":"4682:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4612:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4620:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4628:5:17","type":""}],"src":"4582:139:17"},{"body":{"nodeType":"YulBlock","src":"4793:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"4839:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4841:77:17"},"nodeType":"YulFunctionCall","src":"4841:79:17"},"nodeType":"YulExpressionStatement","src":"4841:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4814:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4823:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4810:3:17"},"nodeType":"YulFunctionCall","src":"4810:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4835:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4806:3:17"},"nodeType":"YulFunctionCall","src":"4806:32:17"},"nodeType":"YulIf","src":"4803:119:17"},{"nodeType":"YulBlock","src":"4932:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4947:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4961:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4951:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4976:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5011:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5022:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5007:3:17"},"nodeType":"YulFunctionCall","src":"5007:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5031:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4986:20:17"},"nodeType":"YulFunctionCall","src":"4986:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4976:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4763:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4774:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4786:6:17","type":""}],"src":"4727:329:17"},{"body":{"nodeType":"YulBlock","src":"5210:282:17","statements":[{"nodeType":"YulAssignment","src":"5220:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5232:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5243:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5228:3:17"},"nodeType":"YulFunctionCall","src":"5228:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5220:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5300:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5313:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5324:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5309:3:17"},"nodeType":"YulFunctionCall","src":"5309:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5256:43:17"},"nodeType":"YulFunctionCall","src":"5256:71:17"},"nodeType":"YulExpressionStatement","src":"5256:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5381:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5394:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5405:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5390:3:17"},"nodeType":"YulFunctionCall","src":"5390:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5337:43:17"},"nodeType":"YulFunctionCall","src":"5337:72:17"},"nodeType":"YulExpressionStatement","src":"5337:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5457:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5470:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5481:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5466:3:17"},"nodeType":"YulFunctionCall","src":"5466:18:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5419:37:17"},"nodeType":"YulFunctionCall","src":"5419:66:17"},"nodeType":"YulExpressionStatement","src":"5419:66:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5166:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5178:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5186:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5194:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5205:4:17","type":""}],"src":"5062:430:17"},{"body":{"nodeType":"YulBlock","src":"5526:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5543:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5546:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5536:6:17"},"nodeType":"YulFunctionCall","src":"5536:88:17"},"nodeType":"YulExpressionStatement","src":"5536:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5640:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5643:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5633:6:17"},"nodeType":"YulFunctionCall","src":"5633:15:17"},"nodeType":"YulExpressionStatement","src":"5633:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5664:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5667:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5657:6:17"},"nodeType":"YulFunctionCall","src":"5657:15:17"},"nodeType":"YulExpressionStatement","src":"5657:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5498:180:17"},{"body":{"nodeType":"YulBlock","src":"5728:147:17","statements":[{"nodeType":"YulAssignment","src":"5738:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5761:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5743:17:17"},"nodeType":"YulFunctionCall","src":"5743:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5738:1:17"}]},{"nodeType":"YulAssignment","src":"5772:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5795:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5777:17:17"},"nodeType":"YulFunctionCall","src":"5777:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5772:1:17"}]},{"nodeType":"YulAssignment","src":"5806:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5817:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"5820:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:17"},"nodeType":"YulFunctionCall","src":"5813:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5806:3:17"}]},{"body":{"nodeType":"YulBlock","src":"5846:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5848:16:17"},"nodeType":"YulFunctionCall","src":"5848:18:17"},"nodeType":"YulExpressionStatement","src":"5848:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5838:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"5841:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5835:2:17"},"nodeType":"YulFunctionCall","src":"5835:10:17"},"nodeType":"YulIf","src":"5832:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5715:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"5718:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5724:3:17","type":""}],"src":"5684:191:17"},{"body":{"nodeType":"YulBlock","src":"5924:190:17","statements":[{"nodeType":"YulAssignment","src":"5934:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5961:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5943:17:17"},"nodeType":"YulFunctionCall","src":"5943:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5934:5:17"}]},{"body":{"nodeType":"YulBlock","src":"6057:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6059:16:17"},"nodeType":"YulFunctionCall","src":"6059:18:17"},"nodeType":"YulExpressionStatement","src":"6059:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5982:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5989:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5979:2:17"},"nodeType":"YulFunctionCall","src":"5979:77:17"},"nodeType":"YulIf","src":"5976:103:17"},{"nodeType":"YulAssignment","src":"6088:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6099:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6106:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6095:3:17"},"nodeType":"YulFunctionCall","src":"6095:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6088:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5910:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5920:3:17","type":""}],"src":"5881:233:17"},{"body":{"nodeType":"YulBlock","src":"6201:61:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6249:5:17"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"6223:25:17"},"nodeType":"YulFunctionCall","src":"6223:32:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6211:6:17"},"nodeType":"YulFunctionCall","src":"6211:45:17"},"nodeType":"YulExpressionStatement","src":"6211:45:17"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6189:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6196:3:17","type":""}],"src":"6120:142:17"},{"body":{"nodeType":"YulBlock","src":"6410:222:17","statements":[{"nodeType":"YulAssignment","src":"6420:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6432:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6443:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6428:3:17"},"nodeType":"YulFunctionCall","src":"6428:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6420:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6516:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6529:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6540:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6525:3:17"},"nodeType":"YulFunctionCall","src":"6525:17:17"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"6456:59:17"},"nodeType":"YulFunctionCall","src":"6456:87:17"},"nodeType":"YulExpressionStatement","src":"6456:87:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6597:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6610:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6621:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6606:3:17"},"nodeType":"YulFunctionCall","src":"6606:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6553:43:17"},"nodeType":"YulFunctionCall","src":"6553:72:17"},"nodeType":"YulExpressionStatement","src":"6553:72:17"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6374:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6386:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6394:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6405:4:17","type":""}],"src":"6268:364:17"},{"body":{"nodeType":"YulBlock","src":"6764:206:17","statements":[{"nodeType":"YulAssignment","src":"6774:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6786:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6797:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6782:3:17"},"nodeType":"YulFunctionCall","src":"6782:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6774:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6854:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6867:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6878:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6863:3:17"},"nodeType":"YulFunctionCall","src":"6863:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6810:43:17"},"nodeType":"YulFunctionCall","src":"6810:71:17"},"nodeType":"YulExpressionStatement","src":"6810:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6935:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6948:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6959:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6944:3:17"},"nodeType":"YulFunctionCall","src":"6944:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6891:43:17"},"nodeType":"YulFunctionCall","src":"6891:72:17"},"nodeType":"YulExpressionStatement","src":"6891:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6728:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6740:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6748:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6759:4:17","type":""}],"src":"6638:332:17"},{"body":{"nodeType":"YulBlock","src":"7072:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7089:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7094:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7082:6:17"},"nodeType":"YulFunctionCall","src":"7082:19:17"},"nodeType":"YulExpressionStatement","src":"7082:19:17"},{"nodeType":"YulAssignment","src":"7110:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7129:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7134:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7125:3:17"},"nodeType":"YulFunctionCall","src":"7125:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7110:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7044:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"7049:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7060:11:17","type":""}],"src":"6976:169:17"},{"body":{"nodeType":"YulBlock","src":"7257:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7279:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7287:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7275:3:17"},"nodeType":"YulFunctionCall","src":"7275:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7291:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7268:6:17"},"nodeType":"YulFunctionCall","src":"7268:58:17"},"nodeType":"YulExpressionStatement","src":"7268:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7347:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7355:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7343:3:17"},"nodeType":"YulFunctionCall","src":"7343:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"7360:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7336:6:17"},"nodeType":"YulFunctionCall","src":"7336:33:17"},"nodeType":"YulExpressionStatement","src":"7336:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7249:6:17","type":""}],"src":"7151:225:17"},{"body":{"nodeType":"YulBlock","src":"7528:220:17","statements":[{"nodeType":"YulAssignment","src":"7538:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7604:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7609:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7545:58:17"},"nodeType":"YulFunctionCall","src":"7545:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7538:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7710:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"7621:88:17"},"nodeType":"YulFunctionCall","src":"7621:93:17"},"nodeType":"YulExpressionStatement","src":"7621:93:17"},{"nodeType":"YulAssignment","src":"7723:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7734:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7739:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7730:3:17"},"nodeType":"YulFunctionCall","src":"7730:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7723:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7516:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7524:3:17","type":""}],"src":"7382:366:17"},{"body":{"nodeType":"YulBlock","src":"7925:248:17","statements":[{"nodeType":"YulAssignment","src":"7935:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7947:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7958:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:17"},"nodeType":"YulFunctionCall","src":"7943:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7935:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7982:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7993:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7978:3:17"},"nodeType":"YulFunctionCall","src":"7978:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8001:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8007:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7997:3:17"},"nodeType":"YulFunctionCall","src":"7997:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7971:6:17"},"nodeType":"YulFunctionCall","src":"7971:47:17"},"nodeType":"YulExpressionStatement","src":"7971:47:17"},{"nodeType":"YulAssignment","src":"8027:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8161:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8035:124:17"},"nodeType":"YulFunctionCall","src":"8035:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8027:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7905:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7920:4:17","type":""}],"src":"7754:419:17"},{"body":{"nodeType":"YulBlock","src":"8292:34:17","statements":[{"nodeType":"YulAssignment","src":"8302:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"8317:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8302:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8264:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8269:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8280:11:17","type":""}],"src":"8179:147:17"},{"body":{"nodeType":"YulBlock","src":"8438:8:17","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8430:6:17","type":""}],"src":"8332:114:17"},{"body":{"nodeType":"YulBlock","src":"8615:235:17","statements":[{"nodeType":"YulAssignment","src":"8625:90:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8708:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8713:1:17","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8632:75:17"},"nodeType":"YulFunctionCall","src":"8632:83:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8625:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8813:3:17"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"8724:88:17"},"nodeType":"YulFunctionCall","src":"8724:93:17"},"nodeType":"YulExpressionStatement","src":"8724:93:17"},{"nodeType":"YulAssignment","src":"8826:18:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8837:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8842:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8833:3:17"},"nodeType":"YulFunctionCall","src":"8833:11:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8826:3:17"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8603:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8611:3:17","type":""}],"src":"8452:398:17"},{"body":{"nodeType":"YulBlock","src":"9044:191:17","statements":[{"nodeType":"YulAssignment","src":"9055:154:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9205:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9062:141:17"},"nodeType":"YulFunctionCall","src":"9062:147:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9055:3:17"}]},{"nodeType":"YulAssignment","src":"9219:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"9226:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9219:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9031:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9040:3:17","type":""}],"src":"8856:379:17"},{"body":{"nodeType":"YulBlock","src":"9347:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9369:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9377:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9365:3:17"},"nodeType":"YulFunctionCall","src":"9365:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"9381:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9358:6:17"},"nodeType":"YulFunctionCall","src":"9358:58:17"},"nodeType":"YulExpressionStatement","src":"9358:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9339:6:17","type":""}],"src":"9241:182:17"},{"body":{"nodeType":"YulBlock","src":"9575:220:17","statements":[{"nodeType":"YulAssignment","src":"9585:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9651:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9656:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9592:58:17"},"nodeType":"YulFunctionCall","src":"9592:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9585:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9757:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"9668:88:17"},"nodeType":"YulFunctionCall","src":"9668:93:17"},"nodeType":"YulExpressionStatement","src":"9668:93:17"},{"nodeType":"YulAssignment","src":"9770:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9781:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9786:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9777:3:17"},"nodeType":"YulFunctionCall","src":"9777:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9770:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9563:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9571:3:17","type":""}],"src":"9429:366:17"},{"body":{"nodeType":"YulBlock","src":"9972:248:17","statements":[{"nodeType":"YulAssignment","src":"9982:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9994:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10005:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9990:3:17"},"nodeType":"YulFunctionCall","src":"9990:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9982:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10029:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10040:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10025:3:17"},"nodeType":"YulFunctionCall","src":"10025:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10048:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10054:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10044:3:17"},"nodeType":"YulFunctionCall","src":"10044:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10018:6:17"},"nodeType":"YulFunctionCall","src":"10018:47:17"},"nodeType":"YulExpressionStatement","src":"10018:47:17"},{"nodeType":"YulAssignment","src":"10074:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10208:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10082:124:17"},"nodeType":"YulFunctionCall","src":"10082:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10074:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9952:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9967:4:17","type":""}],"src":"9801:419:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5AB08F00 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA3EC138D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xC631B292 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xC64963C5 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x369 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5AB08F00 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x7D2F7190 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1EA736E0 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1EA736E0 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x3F1B4081 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x45825C58 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x4BED6C23 EQ PUSH2 0x227 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x6EFE3B0 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xA9F46AD EQ PUSH2 0x17B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP3 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH2 0x875 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x353 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC2CF3F500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2479ECB800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SUB PUSH2 0x44F JUMPI PUSH1 0x40 MLOAD PUSH32 0xBCB27C3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3500F91E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF87F8F6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xF20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x537 DUP2 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0xF20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x10A412BF229FBAC2408912CB271B8FF9EB39EB72DA91DD0C8ACCAB0FB1011135 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x64B PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2479ECB800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6A5 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x722 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC9C6A7D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF3FEF3A3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP3 SWAP2 SWAP1 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x80D PUSH1 0x0 PUSH2 0xAEA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x87D PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x851F071500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C0 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAFF28777F2409F4B37134D80D0E47AF000BE7515D291C576B1412337F3EEB653 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x910 SWAP3 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x928 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A0 DUP2 PUSH2 0xAEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP1 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x43DEED500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA74 PUSH2 0xC1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA92 PUSH2 0x815 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT PUSH2 0xC18 JUMPI DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xC05 JUMPI PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0xC10 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBB6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3C DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP2 EQ PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC59 DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0xC24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP5 DUP3 DUP6 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9F DUP2 PUSH2 0xC8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCAE DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCC9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xCD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCE6 DUP2 PUSH2 0xC8C JUMP JUMPDEST DUP2 EQ PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD03 DUP2 PUSH2 0xCDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH2 0xD1E PUSH2 0xC24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP5 DUP3 DUP6 ADD PUSH2 0xCF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xD51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD81 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB2 DUP3 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC2 DUP2 PUSH2 0xDA7 JUMP JUMPDEST DUP2 EQ PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDF DUP2 PUSH2 0xDB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFC JUMPI PUSH2 0xDFB PUSH2 0xC24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE0A DUP6 DUP3 DUP7 ADD PUSH2 0xDD0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE1B DUP6 DUP3 DUP7 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE30 DUP3 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE40 DUP2 PUSH2 0xE25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6A DUP2 PUSH2 0xE25 JUMP JUMPDEST DUP2 EQ PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE87 DUP2 PUSH2 0xE61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA3 JUMPI PUSH2 0xEA2 PUSH2 0xC24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB1 DUP5 DUP3 DUP6 ADD PUSH2 0xE78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xECF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xEDC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xEE9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP3 PUSH2 0xC29 JUMP JUMPDEST SWAP2 POP PUSH2 0xF36 DUP4 PUSH2 0xC29 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4D PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0xC29 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xF91 JUMPI PUSH2 0xF90 PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA5 DUP2 PUSH2 0xDA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0xFCD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xFF6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106A PUSH1 0x26 DUP4 PUSH2 0xFFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1075 DUP3 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1099 DUP2 PUSH2 0x105D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BB PUSH1 0x0 DUP4 PUSH2 0x10A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C6 DUP3 PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10DC DUP3 PUSH2 0x10AE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x111C PUSH1 0x20 DUP4 PUSH2 0xFFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1127 DUP3 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114B DUP2 PUSH2 0x110F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 LOG3 JUMPI 0xB3 0x4A PUSH27 0xB5114D79008AF1611BE94E2A5F1F7E468D5A1D8C39A3570AEEC464 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"428:4325:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:783;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;927:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2480:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;682:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;469:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;641:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;571:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4255:247;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1824:101:4;;;;;;;;;;;;;:::i;:::-;;503:27:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;978:39:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3535:274;;;;;;;;;;;;;:::i;:::-;;603:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2708:783:14;1147:13;;1129:15;:31;1125:82;;;1183:13;;;;;;;;;;;;;;1125:82;1499:14:::1;;;;;;;;;;;1495:66;;;1536:14;;;;;;;;;;;;;;1495:66;1684:1:::2;1671:9;:14:::0;1667:64:::2;;1708:12;;;;;;;;;;;;;;1667:64;1325:6:::3;:18;1332:10;1325:18;;;;;;;;;;;;;;;:24;;;;;;;;;;;;1321:69;;;1372:7;;;;;;;;;;;;;;1321:69;2942:1:::4;2928:10;:15:::0;2924:71:::4;;2966:18;;;;;;;;;;;;;;2924:71;3029:12;3044:9;3029:24;;3081:7;3063:14;;:25;;;;;;;:::i;:::-;;;;;;;;3098:18;3108:7;3098:9;:18::i;:::-;3154:19;3176:6;:18;3183:10;3176:18;;;;;;;;;;;;;;;3154:40;;3217:10;3204:5;:10;;:23;;;;3256:7;3237:5;:16;;:26;;;;3287:4;3273:5;:11;;;:18;;;;;;;;;;;;;;;;;;3410:7;3371:9;:21;3381:10;3371:21;;;;;;;;;;;:35;;;:46;;;;;;;:::i;:::-;;;;;;;;3473:10;3456:28;;3461:10;3456:28;;;;;;;;;;2895:596;;2708:783:::0;:::o;927:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2480:159::-;1094:13:4;:11;:13::i;:::-;1499:14:14::1;;;;;;;;;;;1495:66;;;1536:14;;;;;;;;;;;;;;1495:66;2561:14:::2;;:16;;;;;;;;;:::i;:::-;;;;;;2615:17;;;;;;;;2624:4;2615:17;;;;2630:1;2615:17;;::::0;2587:9:::2;:25;2597:14;;2587:25;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;2480:159:::0;:::o;682:29::-;;;;:::o;469:28::-;;;;:::o;641:35::-;;;;:::o;571:26::-;;;;;;;;;;;;;:::o;536:29::-;;;;:::o;4255:247::-;1094:13:4;:11;:13::i;:::-;4373:14:14::1;;;;;;;;;;;4368:70;;4410:17;;;;;;;;;;;;;;4368:70;4461:12;;;;;;;;;;;4447:36;;;4484:2;4488:6;4447:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4255:247:::0;;:::o;1824:101:4:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;503:27:14:-;;;;:::o;1201:85:4:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;978:39:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3535:274::-;1094:13:4;:11;:13::i;:::-;3610::14::1;;3591:15;:32;3587:86;;3646:16;;;;;;;;;;;;;;3587:86;3682:21;:19;:21::i;:::-;3730:4;3713:14;;:21;;;;;;;;;;;;;;;;;;3749:53;3762:17;;3781:20;;3749:53;;;;;;;:::i;:::-;;;;;;;;3535:274::o:0;603:32::-;;;;:::o;2074:198:4:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;4564:187:14:-;4619:9;4642:12;;;;;;;;;;;4634:26;;4668:7;4634:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4618:62;;;4695:4;4690:55;;4722:12;;;;;;;;;;;;;;4690:55;4608:143;4564:187;:::o;1359:130:4:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;3855:357:14:-;3905:16;3940:9;3952:1;3940:13;;3935:271;3960:14;;3955:1;:19;3935:271;;4028:8;3999:9;:12;4009:1;3999:12;;;;;;;;;;;:26;;;:37;3995:201;;;4067:9;:12;4077:1;4067:12;;;;;;;;;;;:26;;;4056:37;;4131:1;4111:17;:21;;;;4173:8;4150:20;:31;;;;3995:201;3976:3;;;;;:::i;:::-;;;;3935:271;;;;3895:317;3855:357::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;88:117:17:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:118::-;1195:24;1213:5;1195:24;:::i;:::-;1190:3;1183:37;1108:118;;:::o;1232:::-;1319:24;1337:5;1319:24;:::i;:::-;1314:3;1307:37;1232:118;;:::o;1356:332::-;1477:4;1515:2;1504:9;1500:18;1492:26;;1528:71;1596:1;1585:9;1581:17;1572:6;1528:71;:::i;:::-;1609:72;1677:2;1666:9;1662:18;1653:6;1609:72;:::i;:::-;1356:332;;;;;:::o;1694:122::-;1767:24;1785:5;1767:24;:::i;:::-;1760:5;1757:35;1747:63;;1806:1;1803;1796:12;1747:63;1694:122;:::o;1822:139::-;1868:5;1906:6;1893:20;1884:29;;1922:33;1949:5;1922:33;:::i;:::-;1822:139;;;;:::o;1967:329::-;2026:6;2075:2;2063:9;2054:7;2050:23;2046:32;2043:119;;;2081:79;;:::i;:::-;2043:119;2201:1;2226:53;2271:7;2262:6;2251:9;2247:22;2226:53;:::i;:::-;2216:63;;2172:117;1967:329;;;;:::o;2302:222::-;2395:4;2433:2;2422:9;2418:18;2410:26;;2446:71;2514:1;2503:9;2499:17;2490:6;2446:71;:::i;:::-;2302:222;;;;:::o;2530:90::-;2564:7;2607:5;2600:13;2593:21;2582:32;;2530:90;;;:::o;2626:109::-;2707:21;2722:5;2707:21;:::i;:::-;2702:3;2695:34;2626:109;;:::o;2741:210::-;2828:4;2866:2;2855:9;2851:18;2843:26;;2879:65;2941:1;2930:9;2926:17;2917:6;2879:65;:::i;:::-;2741:210;;;;:::o;2957:126::-;2994:7;3034:42;3027:5;3023:54;3012:65;;2957:126;;;:::o;3089:104::-;3134:7;3163:24;3181:5;3163:24;:::i;:::-;3152:35;;3089:104;;;:::o;3199:138::-;3280:32;3306:5;3280:32;:::i;:::-;3273:5;3270:43;3260:71;;3327:1;3324;3317:12;3260:71;3199:138;:::o;3343:155::-;3397:5;3435:6;3422:20;3413:29;;3451:41;3486:5;3451:41;:::i;:::-;3343:155;;;;:::o;3504:490::-;3580:6;3588;3637:2;3625:9;3616:7;3612:23;3608:32;3605:119;;;3643:79;;:::i;:::-;3605:119;3763:1;3788:61;3841:7;3832:6;3821:9;3817:22;3788:61;:::i;:::-;3778:71;;3734:125;3898:2;3924:53;3969:7;3960:6;3949:9;3945:22;3924:53;:::i;:::-;3914:63;;3869:118;3504:490;;;;;:::o;4000:96::-;4037:7;4066:24;4084:5;4066:24;:::i;:::-;4055:35;;4000:96;;;:::o;4102:118::-;4189:24;4207:5;4189:24;:::i;:::-;4184:3;4177:37;4102:118;;:::o;4226:222::-;4319:4;4357:2;4346:9;4342:18;4334:26;;4370:71;4438:1;4427:9;4423:17;4414:6;4370:71;:::i;:::-;4226:222;;;;:::o;4454:122::-;4527:24;4545:5;4527:24;:::i;:::-;4520:5;4517:35;4507:63;;4566:1;4563;4556:12;4507:63;4454:122;:::o;4582:139::-;4628:5;4666:6;4653:20;4644:29;;4682:33;4709:5;4682:33;:::i;:::-;4582:139;;;;:::o;4727:329::-;4786:6;4835:2;4823:9;4814:7;4810:23;4806:32;4803:119;;;4841:79;;:::i;:::-;4803:119;4961:1;4986:53;5031:7;5022:6;5011:9;5007:22;4986:53;:::i;:::-;4976:63;;4932:117;4727:329;;;;:::o;5062:430::-;5205:4;5243:2;5232:9;5228:18;5220:26;;5256:71;5324:1;5313:9;5309:17;5300:6;5256:71;:::i;:::-;5337:72;5405:2;5394:9;5390:18;5381:6;5337:72;:::i;:::-;5419:66;5481:2;5470:9;5466:18;5457:6;5419:66;:::i;:::-;5062:430;;;;;;:::o;5498:180::-;5546:77;5543:1;5536:88;5643:4;5640:1;5633:15;5667:4;5664:1;5657:15;5684:191;5724:3;5743:20;5761:1;5743:20;:::i;:::-;5738:25;;5777:20;5795:1;5777:20;:::i;:::-;5772:25;;5820:1;5817;5813:9;5806:16;;5841:3;5838:1;5835:10;5832:36;;;5848:18;;:::i;:::-;5832:36;5684:191;;;;:::o;5881:233::-;5920:3;5943:24;5961:5;5943:24;:::i;:::-;5934:33;;5989:66;5982:5;5979:77;5976:103;;6059:18;;:::i;:::-;5976:103;6106:1;6099:5;6095:13;6088:20;;5881:233;;;:::o;6120:142::-;6223:32;6249:5;6223:32;:::i;:::-;6218:3;6211:45;6120:142;;:::o;6268:364::-;6405:4;6443:2;6432:9;6428:18;6420:26;;6456:87;6540:1;6529:9;6525:17;6516:6;6456:87;:::i;:::-;6553:72;6621:2;6610:9;6606:18;6597:6;6553:72;:::i;:::-;6268:364;;;;;:::o;6638:332::-;6759:4;6797:2;6786:9;6782:18;6774:26;;6810:71;6878:1;6867:9;6863:17;6854:6;6810:71;:::i;:::-;6891:72;6959:2;6948:9;6944:18;6935:6;6891:72;:::i;:::-;6638:332;;;;;:::o;6976:169::-;7060:11;7094:6;7089:3;7082:19;7134:4;7129:3;7125:14;7110:29;;6976:169;;;;:::o;7151:225::-;7291:34;7287:1;7279:6;7275:14;7268:58;7360:8;7355:2;7347:6;7343:15;7336:33;7151:225;:::o;7382:366::-;7524:3;7545:67;7609:2;7604:3;7545:67;:::i;:::-;7538:74;;7621:93;7710:3;7621:93;:::i;:::-;7739:2;7734:3;7730:12;7723:19;;7382:366;;;:::o;7754:419::-;7920:4;7958:2;7947:9;7943:18;7935:26;;8007:9;8001:4;7997:20;7993:1;7982:9;7978:17;7971:47;8035:131;8161:4;8035:131;:::i;:::-;8027:139;;7754:419;;;:::o;8179:147::-;8280:11;8317:3;8302:18;;8179:147;;;;:::o;8332:114::-;;:::o;8452:398::-;8611:3;8632:83;8713:1;8708:3;8632:83;:::i;:::-;8625:90;;8724:93;8813:3;8724:93;:::i;:::-;8842:1;8837:3;8833:11;8826:18;;8452:398;;;:::o;8856:379::-;9040:3;9062:147;9205:3;9062:147;:::i;:::-;9055:154;;9226:3;9219:10;;8856:379;;;:::o;9241:182::-;9381:34;9377:1;9369:6;9365:14;9358:58;9241:182;:::o;9429:366::-;9571:3;9592:67;9656:2;9651:3;9592:67;:::i;:::-;9585:74;;9668:93;9757:3;9668:93;:::i;:::-;9786:2;9781:3;9777:12;9770:19;;9429:366;;;:::o;9801:419::-;9967:4;10005:2;9994:9;9990:18;9982:26;;10054:9;10048:4;10044:20;10040:1;10029:9;10025:17;10018:47;10082:131;10208:4;10082:131;:::i;:::-;10074:139;;9801:419;;;:::o"},"methodIdentifiers":{"addProposal(bytes32)":"06efe3b0","closeVoting()":"c631b292","donationAmount()":"4bed6c23","donationGoal()":"7d2f7190","isVotingClosed()":"45825c58","owner()":"8da5cb5b","proposals(uint256)":"013cf08b","proposalsCount()":"0a9f46ad","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","vote(uint256)":"0121b93f","voters(address)":"a3ec138d","votingEndTime()":"1ea736e0","winningProposalId()":"c64963c5","winningProposalVotes()":"3f1b4081","withdrawDonations(address,uint256)":"5ab08f00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_votingEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_donationGoal\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amountZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ethNotSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"proposalNotValid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"timeElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"timeNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"voted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"votingClosed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"votingNotClosed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"Vote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningProposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningProposalVotes\",\"type\":\"uint256\"}],\"name\":\"VotingClosed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"addProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationGoal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVotingClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"weidhtedVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightVote\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDonations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VotingContract .sol\":\"VotingContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/VotingContract .sol\":{\"keccak256\":\"0x9b37fd55b3782b9fa856e99836a6c0e28a5463ee5b1e6d7d517648b8a6901055\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b0fb6724e044b35b40005a1e2b7eec12c9f2e1e90b6c2bf6b2921630038838e7\",\"dweb:/ipfs/QmRzRdzDRF6LHDxZc4idB9QKDRVEnNwtJbtqCw6YSnNzKs\"]},\"contracts/utils/DonationVault.sol\":{\"keccak256\":\"0xc6d6f31fb11e83106ff7ad6beaabc5a893ea956a226d59f94f69978caeb85a31\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0bc58d5492e59723d56d9e6ee5af9078fcada808c35aef0e6dc81552af36b183\",\"dweb:/ipfs/QmVB6ukv2MQ7bz5ZdzDkMwbnTJitRq39NjaWWJmrkZoPih\"]}},\"version\":1}"}},"contracts/utils/DonationVault.sol":{"DonationVault":{"abi":[{"inputs":[],"name":"notEnoughValue","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_562":{"entryPoint":null,"id":562,"parameterSlots":0,"returnSlots":0},"@_msgSender_663":{"entryPoint":50,"id":663,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_650":{"entryPoint":58,"id":650,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61062d8061010d6000396000f3fe6080604052600436106100435760003560e01c8063715018a61461004f5780638da5cb5b14610066578063f2fde38b14610091578063f3fef3a3146100ba5761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100e3565b005b34801561007257600080fd5b5061007b6100f7565b60405161008891906103bb565b60405180910390f35b34801561009d57600080fd5b506100b860048036038101906100b39190610407565b610120565b005b3480156100c657600080fd5b506100e160048036038101906100dc91906104a8565b6101a3565b005b6100eb610230565b6100f560006102ae565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610128610230565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e9061056b565b60405180910390fd5b6101a0816102ae565b50565b6101ab610230565b478111156101e5576040517f2211d12b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561022b573d6000803e3d6000fd5b505050565b610238610372565b73ffffffffffffffffffffffffffffffffffffffff166102566100f7565b73ffffffffffffffffffffffffffffffffffffffff16146102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906105d7565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103a58261037a565b9050919050565b6103b58161039a565b82525050565b60006020820190506103d060008301846103ac565b92915050565b600080fd5b6103e48161039a565b81146103ef57600080fd5b50565b600081359050610401816103db565b92915050565b60006020828403121561041d5761041c6103d6565b5b600061042b848285016103f2565b91505092915050565b600061043f8261037a565b9050919050565b61044f81610434565b811461045a57600080fd5b50565b60008135905061046c81610446565b92915050565b6000819050919050565b61048581610472565b811461049057600080fd5b50565b6000813590506104a28161047c565b92915050565b600080604083850312156104bf576104be6103d6565b5b60006104cd8582860161045d565b92505060206104de85828601610493565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006105556026836104e8565b9150610560826104f9565b604082019050919050565b6000602082019050818103600083015261058481610548565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105c16020836104e8565b91506105cc8261058b565b602082019050919050565b600060208201905081810360008301526105f0816105b4565b905091905056fea26469706673582212206d08471ffe0b3687d330fddf37a7af777958a2ea08bad85497c679d449dddb5f64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x62D DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xBA JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x120 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x1A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0x230 JUMP JUMPDEST PUSH2 0xF5 PUSH1 0x0 PUSH2 0x2AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x2AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x230 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2211D12B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x238 PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x256 PUSH2 0xF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5 DUP3 PUSH2 0x37A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B5 DUP2 PUSH2 0x39A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E4 DUP2 PUSH2 0x39A JUMP JUMPDEST DUP2 EQ PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x401 DUP2 PUSH2 0x3DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41D JUMPI PUSH2 0x41C PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP5 DUP3 DUP6 ADD PUSH2 0x3F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43F DUP3 PUSH2 0x37A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x434 JUMP JUMPDEST DUP2 EQ PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46C DUP2 PUSH2 0x446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x472 JUMP JUMPDEST DUP2 EQ PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A2 DUP2 PUSH2 0x47C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BF JUMPI PUSH2 0x4BE PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP6 DUP3 DUP7 ADD PUSH2 0x45D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4DE DUP6 DUP3 DUP7 ADD PUSH2 0x493 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x555 PUSH1 0x26 DUP4 PUSH2 0x4E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x560 DUP3 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x584 DUP2 PUSH2 0x548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C1 PUSH1 0x20 DUP4 PUSH2 0x4E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CC DUP3 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F0 DUP2 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x8471FFE0B3687D330FDDF37A7AF PUSH24 0x7958A2EA08BAD85497C679D449DDDB5F64736F6C63430008 SGT STOP CALLER ","sourceMap":"173:385:15:-:0;;;;;;;;;;;;;936:32:4;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;173:385:15;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2426:187:4:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;173:385:15:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_3197":{"entryPoint":null,"id":3197,"parameterSlots":0,"returnSlots":0},"@_checkOwner_593":{"entryPoint":560,"id":593,"parameterSlots":0,"returnSlots":0},"@_msgSender_663":{"entryPoint":882,"id":663,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_650":{"entryPoint":686,"id":650,"parameterSlots":1,"returnSlots":0},"@owner_579":{"entryPoint":247,"id":579,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_607":{"entryPoint":227,"id":607,"parameterSlots":0,"returnSlots":0},"@transferOwnership_630":{"entryPoint":288,"id":630,"parameterSlots":1,"returnSlots":0},"@withdraw_3225":{"entryPoint":419,"id":3225,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":1117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1031,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":940,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":1352,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":1460,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1387,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1495,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1256,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":922,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":1076,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":890,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1138,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":982,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":1273,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":1419,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":987,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":1094,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1148,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4980:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:17","statements":[{"nodeType":"YulAssignment","src":"62:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:17"},"nodeType":"YulFunctionCall","src":"73:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:126:17"},{"body":{"nodeType":"YulBlock","src":"184:51:17","statements":[{"nodeType":"YulAssignment","src":"194:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:17"},"nodeType":"YulFunctionCall","src":"205:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:17","type":""}],"src":"139:96:17"},{"body":{"nodeType":"YulBlock","src":"306:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:17"},"nodeType":"YulFunctionCall","src":"328:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:17"},"nodeType":"YulFunctionCall","src":"316:37:17"},"nodeType":"YulExpressionStatement","src":"316:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:17","type":""}],"src":"241:118:17"},{"body":{"nodeType":"YulBlock","src":"463:124:17","statements":[{"nodeType":"YulAssignment","src":"473:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:17"},"nodeType":"YulFunctionCall","src":"481:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:17"},"nodeType":"YulFunctionCall","src":"562:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:17"},"nodeType":"YulFunctionCall","src":"509:71:17"},"nodeType":"YulExpressionStatement","src":"509:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:17","type":""}],"src":"365:222:17"},{"body":{"nodeType":"YulBlock","src":"633:35:17","statements":[{"nodeType":"YulAssignment","src":"643:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:17"},"nodeType":"YulFunctionCall","src":"653:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:17","type":""}],"src":"593:75:17"},{"body":{"nodeType":"YulBlock","src":"763:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:17"},"nodeType":"YulFunctionCall","src":"773:12:17"},"nodeType":"YulExpressionStatement","src":"773:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:17"},{"body":{"nodeType":"YulBlock","src":"886:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:17"},"nodeType":"YulFunctionCall","src":"896:12:17"},"nodeType":"YulExpressionStatement","src":"896:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:17"},{"body":{"nodeType":"YulBlock","src":"963:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:17"},"nodeType":"YulFunctionCall","src":"1022:12:17"},"nodeType":"YulExpressionStatement","src":"1022:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:17"},"nodeType":"YulFunctionCall","src":"993:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:17"},"nodeType":"YulFunctionCall","src":"983:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:17"},"nodeType":"YulFunctionCall","src":"976:43:17"},"nodeType":"YulIf","src":"973:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:17","type":""}],"src":"920:122:17"},{"body":{"nodeType":"YulBlock","src":"1100:87:17","statements":[{"nodeType":"YulAssignment","src":"1110:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:17"},"nodeType":"YulFunctionCall","src":"1119:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:17"},"nodeType":"YulFunctionCall","src":"1148:33:17"},"nodeType":"YulExpressionStatement","src":"1148:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:17","type":""}],"src":"1048:139:17"},{"body":{"nodeType":"YulBlock","src":"1259:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:17"},"nodeType":"YulFunctionCall","src":"1307:79:17"},"nodeType":"YulExpressionStatement","src":"1307:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:17"},"nodeType":"YulFunctionCall","src":"1276:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:17"},"nodeType":"YulFunctionCall","src":"1272:32:17"},"nodeType":"YulIf","src":"1269:119:17"},{"nodeType":"YulBlock","src":"1398:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:17"},"nodeType":"YulFunctionCall","src":"1473:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:17"},"nodeType":"YulFunctionCall","src":"1452:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:17","type":""}],"src":"1193:329:17"},{"body":{"nodeType":"YulBlock","src":"1581:51:17","statements":[{"nodeType":"YulAssignment","src":"1591:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1620:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1602:17:17"},"nodeType":"YulFunctionCall","src":"1602:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1591:7:17"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1563:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1573:7:17","type":""}],"src":"1528:104:17"},{"body":{"nodeType":"YulBlock","src":"1689:87:17","statements":[{"body":{"nodeType":"YulBlock","src":"1754:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1763:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1766:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1756:6:17"},"nodeType":"YulFunctionCall","src":"1756:12:17"},"nodeType":"YulExpressionStatement","src":"1756:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1712:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1745:5:17"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"1719:25:17"},"nodeType":"YulFunctionCall","src":"1719:32:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1709:2:17"},"nodeType":"YulFunctionCall","src":"1709:43:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1702:6:17"},"nodeType":"YulFunctionCall","src":"1702:51:17"},"nodeType":"YulIf","src":"1699:71:17"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1682:5:17","type":""}],"src":"1638:138:17"},{"body":{"nodeType":"YulBlock","src":"1842:95:17","statements":[{"nodeType":"YulAssignment","src":"1852:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1874:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1861:12:17"},"nodeType":"YulFunctionCall","src":"1861:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1852:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1925:5:17"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"1890:34:17"},"nodeType":"YulFunctionCall","src":"1890:41:17"},"nodeType":"YulExpressionStatement","src":"1890:41:17"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1820:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1828:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1836:5:17","type":""}],"src":"1782:155:17"},{"body":{"nodeType":"YulBlock","src":"1988:32:17","statements":[{"nodeType":"YulAssignment","src":"1998:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2009:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1998:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1970:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1980:7:17","type":""}],"src":"1943:77:17"},{"body":{"nodeType":"YulBlock","src":"2069:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2126:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2135:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2138:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2128:6:17"},"nodeType":"YulFunctionCall","src":"2128:12:17"},"nodeType":"YulExpressionStatement","src":"2128:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2092:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2117:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2099:17:17"},"nodeType":"YulFunctionCall","src":"2099:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2089:2:17"},"nodeType":"YulFunctionCall","src":"2089:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2082:6:17"},"nodeType":"YulFunctionCall","src":"2082:43:17"},"nodeType":"YulIf","src":"2079:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2062:5:17","type":""}],"src":"2026:122:17"},{"body":{"nodeType":"YulBlock","src":"2206:87:17","statements":[{"nodeType":"YulAssignment","src":"2216:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2238:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2225:12:17"},"nodeType":"YulFunctionCall","src":"2225:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2216:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2281:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2254:26:17"},"nodeType":"YulFunctionCall","src":"2254:33:17"},"nodeType":"YulExpressionStatement","src":"2254:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2184:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2192:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2200:5:17","type":""}],"src":"2154:139:17"},{"body":{"nodeType":"YulBlock","src":"2390:399:17","statements":[{"body":{"nodeType":"YulBlock","src":"2436:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2438:77:17"},"nodeType":"YulFunctionCall","src":"2438:79:17"},"nodeType":"YulExpressionStatement","src":"2438:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2411:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2420:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2407:3:17"},"nodeType":"YulFunctionCall","src":"2407:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2432:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2403:3:17"},"nodeType":"YulFunctionCall","src":"2403:32:17"},"nodeType":"YulIf","src":"2400:119:17"},{"nodeType":"YulBlock","src":"2529:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2544:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2558:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2548:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2573:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2616:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2627:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2612:3:17"},"nodeType":"YulFunctionCall","src":"2612:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2636:7:17"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"2583:28:17"},"nodeType":"YulFunctionCall","src":"2583:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2573:6:17"}]}]},{"nodeType":"YulBlock","src":"2664:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2679:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2693:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2683:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2709:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2744:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2755:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2740:3:17"},"nodeType":"YulFunctionCall","src":"2740:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2764:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2719:20:17"},"nodeType":"YulFunctionCall","src":"2719:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2709:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2352:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2363:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2375:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2383:6:17","type":""}],"src":"2299:490:17"},{"body":{"nodeType":"YulBlock","src":"2891:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2908:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2913:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2901:6:17"},"nodeType":"YulFunctionCall","src":"2901:19:17"},"nodeType":"YulExpressionStatement","src":"2901:19:17"},{"nodeType":"YulAssignment","src":"2929:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2948:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2953:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2944:3:17"},"nodeType":"YulFunctionCall","src":"2944:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2929:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2863:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2868:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2879:11:17","type":""}],"src":"2795:169:17"},{"body":{"nodeType":"YulBlock","src":"3076:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3098:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3106:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:17"},"nodeType":"YulFunctionCall","src":"3094:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"3110:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3087:6:17"},"nodeType":"YulFunctionCall","src":"3087:58:17"},"nodeType":"YulExpressionStatement","src":"3087:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3166:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3174:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3162:3:17"},"nodeType":"YulFunctionCall","src":"3162:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"3179:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3155:6:17"},"nodeType":"YulFunctionCall","src":"3155:33:17"},"nodeType":"YulExpressionStatement","src":"3155:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3068:6:17","type":""}],"src":"2970:225:17"},{"body":{"nodeType":"YulBlock","src":"3347:220:17","statements":[{"nodeType":"YulAssignment","src":"3357:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3423:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3428:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3364:58:17"},"nodeType":"YulFunctionCall","src":"3364:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3357:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3529:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3440:88:17"},"nodeType":"YulFunctionCall","src":"3440:93:17"},"nodeType":"YulExpressionStatement","src":"3440:93:17"},{"nodeType":"YulAssignment","src":"3542:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3553:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3558:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:17"},"nodeType":"YulFunctionCall","src":"3549:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3542:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3335:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3343:3:17","type":""}],"src":"3201:366:17"},{"body":{"nodeType":"YulBlock","src":"3744:248:17","statements":[{"nodeType":"YulAssignment","src":"3754:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3766:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3777:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3762:3:17"},"nodeType":"YulFunctionCall","src":"3762:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3754:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3801:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3812:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3797:3:17"},"nodeType":"YulFunctionCall","src":"3797:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3820:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3826:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3816:3:17"},"nodeType":"YulFunctionCall","src":"3816:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3790:6:17"},"nodeType":"YulFunctionCall","src":"3790:47:17"},"nodeType":"YulExpressionStatement","src":"3790:47:17"},{"nodeType":"YulAssignment","src":"3846:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3980:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3854:124:17"},"nodeType":"YulFunctionCall","src":"3854:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3846:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3724:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3739:4:17","type":""}],"src":"3573:419:17"},{"body":{"nodeType":"YulBlock","src":"4104:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4126:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4134:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:17"},"nodeType":"YulFunctionCall","src":"4122:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4138:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4115:6:17"},"nodeType":"YulFunctionCall","src":"4115:58:17"},"nodeType":"YulExpressionStatement","src":"4115:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4096:6:17","type":""}],"src":"3998:182:17"},{"body":{"nodeType":"YulBlock","src":"4332:220:17","statements":[{"nodeType":"YulAssignment","src":"4342:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4408:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4413:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4349:58:17"},"nodeType":"YulFunctionCall","src":"4349:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4342:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4514:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"4425:88:17"},"nodeType":"YulFunctionCall","src":"4425:93:17"},"nodeType":"YulExpressionStatement","src":"4425:93:17"},{"nodeType":"YulAssignment","src":"4527:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4538:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4543:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4534:3:17"},"nodeType":"YulFunctionCall","src":"4534:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4527:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4320:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4328:3:17","type":""}],"src":"4186:366:17"},{"body":{"nodeType":"YulBlock","src":"4729:248:17","statements":[{"nodeType":"YulAssignment","src":"4739:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4751:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4762:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4747:3:17"},"nodeType":"YulFunctionCall","src":"4747:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4739:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4786:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4797:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4782:3:17"},"nodeType":"YulFunctionCall","src":"4782:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4805:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4811:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4801:3:17"},"nodeType":"YulFunctionCall","src":"4801:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4775:6:17"},"nodeType":"YulFunctionCall","src":"4775:47:17"},"nodeType":"YulExpressionStatement","src":"4775:47:17"},{"nodeType":"YulAssignment","src":"4831:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4965:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4839:124:17"},"nodeType":"YulFunctionCall","src":"4839:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4831:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4709:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4724:4:17","type":""}],"src":"4558:419:17"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100435760003560e01c8063715018a61461004f5780638da5cb5b14610066578063f2fde38b14610091578063f3fef3a3146100ba5761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100e3565b005b34801561007257600080fd5b5061007b6100f7565b60405161008891906103bb565b60405180910390f35b34801561009d57600080fd5b506100b860048036038101906100b39190610407565b610120565b005b3480156100c657600080fd5b506100e160048036038101906100dc91906104a8565b6101a3565b005b6100eb610230565b6100f560006102ae565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610128610230565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e9061056b565b60405180910390fd5b6101a0816102ae565b50565b6101ab610230565b478111156101e5576040517f2211d12b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561022b573d6000803e3d6000fd5b505050565b610238610372565b73ffffffffffffffffffffffffffffffffffffffff166102566100f7565b73ffffffffffffffffffffffffffffffffffffffff16146102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906105d7565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103a58261037a565b9050919050565b6103b58161039a565b82525050565b60006020820190506103d060008301846103ac565b92915050565b600080fd5b6103e48161039a565b81146103ef57600080fd5b50565b600081359050610401816103db565b92915050565b60006020828403121561041d5761041c6103d6565b5b600061042b848285016103f2565b91505092915050565b600061043f8261037a565b9050919050565b61044f81610434565b811461045a57600080fd5b50565b60008135905061046c81610446565b92915050565b6000819050919050565b61048581610472565b811461049057600080fd5b50565b6000813590506104a28161047c565b92915050565b600080604083850312156104bf576104be6103d6565b5b60006104cd8582860161045d565b92505060206104de85828601610493565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006105556026836104e8565b9150610560826104f9565b604082019050919050565b6000602082019050818103600083015261058481610548565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105c16020836104e8565b91506105cc8261058b565b602082019050919050565b600060208201905081810360008301526105f0816105b4565b905091905056fea26469706673582212206d08471ffe0b3687d330fddf37a7af777958a2ea08bad85497c679d449dddb5f64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xBA JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x120 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x1A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0x230 JUMP JUMPDEST PUSH2 0xF5 PUSH1 0x0 PUSH2 0x2AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x2AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x230 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2211D12B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x238 PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x256 PUSH2 0xF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5 DUP3 PUSH2 0x37A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B5 DUP2 PUSH2 0x39A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E4 DUP2 PUSH2 0x39A JUMP JUMPDEST DUP2 EQ PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x401 DUP2 PUSH2 0x3DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41D JUMPI PUSH2 0x41C PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP5 DUP3 DUP6 ADD PUSH2 0x3F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43F DUP3 PUSH2 0x37A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x434 JUMP JUMPDEST DUP2 EQ PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46C DUP2 PUSH2 0x446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x472 JUMP JUMPDEST DUP2 EQ PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A2 DUP2 PUSH2 0x47C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BF JUMPI PUSH2 0x4BE PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP6 DUP3 DUP7 ADD PUSH2 0x45D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4DE DUP6 DUP3 DUP7 ADD PUSH2 0x493 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x555 PUSH1 0x26 DUP4 PUSH2 0x4E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x560 DUP3 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x584 DUP2 PUSH2 0x548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C1 PUSH1 0x20 DUP4 PUSH2 0x4E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CC DUP3 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F0 DUP2 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x8471FFE0B3687D330FDDF37A7AF PUSH24 0x7958A2EA08BAD85497C679D449DDDB5F64736F6C63430008 SGT STOP CALLER ","sourceMap":"173:385:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:101:4;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;351:204:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1824:101:4;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2074:198::-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;351:204:15:-;1094:13:4;:11;:13::i;:::-;446:21:15::1;437:6;:30;434:84;;;490:16;;;;;;;;;;;;;;434:84;528:2;:11;;:19;540:6;528:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;351:204:::0;;:::o;1359:130:4:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;7:126:17:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:104::-;1573:7;1602:24;1620:5;1602:24;:::i;:::-;1591:35;;1528:104;;;:::o;1638:138::-;1719:32;1745:5;1719:32;:::i;:::-;1712:5;1709:43;1699:71;;1766:1;1763;1756:12;1699:71;1638:138;:::o;1782:155::-;1836:5;1874:6;1861:20;1852:29;;1890:41;1925:5;1890:41;:::i;:::-;1782:155;;;;:::o;1943:77::-;1980:7;2009:5;1998:16;;1943:77;;;:::o;2026:122::-;2099:24;2117:5;2099:24;:::i;:::-;2092:5;2089:35;2079:63;;2138:1;2135;2128:12;2079:63;2026:122;:::o;2154:139::-;2200:5;2238:6;2225:20;2216:29;;2254:33;2281:5;2254:33;:::i;:::-;2154:139;;;;:::o;2299:490::-;2375:6;2383;2432:2;2420:9;2411:7;2407:23;2403:32;2400:119;;;2438:79;;:::i;:::-;2400:119;2558:1;2583:61;2636:7;2627:6;2616:9;2612:22;2583:61;:::i;:::-;2573:71;;2529:125;2693:2;2719:53;2764:7;2755:6;2744:9;2740:22;2719:53;:::i;:::-;2709:63;;2664:118;2299:490;;;;;:::o;2795:169::-;2879:11;2913:6;2908:3;2901:19;2953:4;2948:3;2944:14;2929:29;;2795:169;;;;:::o;2970:225::-;3110:34;3106:1;3098:6;3094:14;3087:58;3179:8;3174:2;3166:6;3162:15;3155:33;2970:225;:::o;3201:366::-;3343:3;3364:67;3428:2;3423:3;3364:67;:::i;:::-;3357:74;;3440:93;3529:3;3440:93;:::i;:::-;3558:2;3553:3;3549:12;3542:19;;3201:366;;;:::o;3573:419::-;3739:4;3777:2;3766:9;3762:18;3754:26;;3826:9;3820:4;3816:20;3812:1;3801:9;3797:17;3790:47;3854:131;3980:4;3854:131;:::i;:::-;3846:139;;3573:419;;;:::o;3998:182::-;4138:34;4134:1;4126:6;4122:14;4115:58;3998:182;:::o;4186:366::-;4328:3;4349:67;4413:2;4408:3;4349:67;:::i;:::-;4342:74;;4425:93;4514:3;4425:93;:::i;:::-;4543:2;4538:3;4534:12;4527:19;;4186:366;;;:::o;4558:419::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4811:9;4805:4;4801:20;4797:1;4786:9;4782:17;4775:47;4839:131;4965:4;4839:131;:::i;:::-;4831:139;;4558:419;;;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","withdraw(address,uint256)":"f3fef3a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"notEnoughValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/DonationVault.sol\":\"DonationVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/DonationVault.sol\":{\"keccak256\":\"0xc6d6f31fb11e83106ff7ad6beaabc5a893ea956a226d59f94f69978caeb85a31\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0bc58d5492e59723d56d9e6ee5af9078fcada808c35aef0e6dc81552af36b183\",\"dweb:/ipfs/QmVB6ukv2MQ7bz5ZdzDkMwbnTJitRq39NjaWWJmrkZoPih\"]}},\"version\":1}"}}}}}